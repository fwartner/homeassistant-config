blueprint:
  domain: automation
  name: Music Assistant - (nur) lokale Sprachsteuerung - Blueprint
  source_url: https://raw.githubusercontent.com/music-assistant/voice-support/refs/heads/main/local-assist-blueprint/mass_assist_blueprint_de.yaml
  description: ' ![Bild](https://github.com/music-assistant/voice-support/blob/main/assets/music-assistant.png?raw=true)

    # Medien mit Sprachbefehlen abspielen

    ### Verwendung

    Alle Sätze müssen:

    * mit den Wörtern `Spiele` oder `Höre` beginnen, gefolgt vom Medientyp `Künstler/Lied/Album/Playlist/Radio`
    und dann dem Namen des Mediums

    * für Album und Lied optional gefolgt von `von (dem) Künstler` und dann dem Künstlernamen

    * optional gefolgt von einem Bereichs- oder Gerätenamen

    * für Künstler, Titel, Album oder Wiedergabeliste optional gefolgt von der Phrase
    `im Radiomodus`

    #### Akzeptable Variationen

    Es gibt akzeptable Variationen für einige Wörter

    #### Beispiele

    ```

    Spiele den Künstler Pink Floyd in der Küche

    Höre das Album Jagged Little Pill im Arbeitszimmer

    Höre das Album Greatest Hits vom Künstler James Taylor in der Küche

    Spiele den Titel New Years Day im Schlafzimmer

    Spiele den Titel New Years Day im Schlafzimmer im Radiomodus

    Spiele das Lied A Hard Days Night von Billy Joel im Schlafzimmer

    Höre die Playlist Classic Rock im Arbeitszimmer

    Höre das Radio BBC Radio 1 im Schlafzimmer

    Spiele das Album Classical Nights auf dem Schlafzimmer-Sonos-Lautsprecher

    Höre die Platte Classical Nights auf dem Schlafzimmer-Sonos-Lautsprecher

    Spiele die Band U2

    ``` '
  input:
    default_player_entity_id_input:
      name: Standard-Mediaplayer
      selector:
        entity:
          filter:
          - integration: music_assistant
            domain:
            - media_player
          multiple: false
triggers:
- trigger: conversation
  command:
  - (spiele|höre) [das ](album|platte|sammlung|single) {media_name} [von [(dem|der)
    ](künstler|band|gruppe) {artist}] [(im|auf|über) [dem ]{area_or_player_name}][
    (mit|im) {radio_mode}]
  id: album
- trigger: conversation
  command:
  - (spiele|höre) [das ](song|titel|lied) {media_name} [von [(dem|der) ](künstler|band|gruppe)
    {artist}] [(im|auf|über) [dem ]{area_or_player_name}][ (mit|im) {radio_mode}]
  id: track
- trigger: conversation
  command:
  - (spiele|höre) [(den|die) ](künstler|band|gruppe) {media_name} [(im|auf|über) [dem
    ]{area_or_player_name}][ (mit|im) {radio_mode}]
  id: artist
- trigger: conversation
  command:
  - (spiele|höre) [(den|das) ]((radiosender)|(radio)|(sender)) {media_name} [(im|auf|über)
    [dem ]{area_or_player_name}]
  id: radio
- trigger: conversation
  command:
  - (spiele|höre) [die ](wiedergabeliste|playlist) {media_name} [(im|auf|über) [dem
    ]{area_or_player_name}][ (mit|im) {radio_mode}]
  id: playlist
conditions: []
actions:
- variables:
    version: 20250128
    default_player_entity_id: !input default_player_entity_id_input
    trigger_id: '{{ trigger.id }}'
    area_or_player_name: '{{ trigger.slots.area_or_player_name | default }}'
    assist_device_id: '{{ trigger.device_id }}'
    action_data:
      media_id: '{{ trigger.slots.media_name }}'
      media_type: '{{ ''radio'' if ''radio'' in media_name | lower else trigger_id
        }}'
      artist: '{{ trigger.slots.artist | default }}'
      radio_mode: '{{ ''radio'' in trigger.slots.radio_mode | default | lower }}'
    player_entity_id_by_player_name: "{{ integration_entities('music_assistant') |
      expand \n  | selectattr('name', 'match', area_or_player_name ~ '$', ignorecase=true)\n
      \ | map(attribute='entity_id') | list }}\n"
    player_entity_id_by_area_name: '{{ areas() | map(''area_name'') | select(''match'',
      area_or_player_name ~ ''$'',  ignorecase=true) | map(''area_entities'') | sum(start=[])
      | select(''in'',  integration_entities(''music_assistant'')) | list }}

      '
    player_entity_id_by_assist_area: '{{ area_entities(area_id(trigger.device_id))
      | select(''in'', integration_entities(''music_assistant'')) | list }}

      '
    mass_player_entity_id: "{{ player_entity_id_by_player_name or player_entity_id_by_area_name
      \nor player_entity_id_by_assist_area or [default_player_entity_id] }}\n"
    mass_player_name: '{{ mass_player_entity_id | map(''state_attr'', ''friendly_name'')
      | join('', '') }}'
- alias: Send media to selected Music Assistant Player
  action: music_assistant.play_media
  data: '{{ dict(action_data.items() | selectattr(''1'')) }}'
  target:
    entity_id: '{{ mass_player_entity_id }}'
- set_conversation_response: '{{ trigger.slots.media_name }} wird auf {{ mass_player_name
    }} abgespielt'
mode: single
