- id: '1669632865548'
  alias: 'Flur: Licht an wenn Tür auf'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: d62a1a0d66691a20f54abe4cdfb6d6c9
    entity_id: 9a9c1257a5aa466af0aaed31c0e7735d
    domain: binary_sensor
  condition:
  - condition: sun
    after: sunset
    before: sunrise
    after_offset: '1'
  action:
  - type: turn_on
    device_id: 4b04528f90d6106276926f279e2d4cb6
    entity_id: 95eab0e0f096de60d69cc6204752c455
    domain: light
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: 4b04528f90d6106276926f279e2d4cb6
    entity_id: 95eab0e0f096de60d69cc6204752c455
    domain: light
  mode: single
- id: '1670802573901'
  alias: Taster Schlafzimmer Actions
  description: ''
  use_blueprint:
    path: Drafted/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.aqara_taster_schlafzimmer_action
      double_action:
      - parallel:
        - service: script.3_minuten_bettzeit
          data: {}
        - service: script.10_minuten_boost_wohnzimmer
          data: {}
      single_action:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: cover.rollos_schlafzimmer
            state: closing
          - condition: state
            entity_id: cover.rollos_schlafzimmer
            state: closed
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.rollos_schlafzimmer
        else:
        - if:
          - condition: or
            conditions:
            - condition: state
              entity_id: cover.rollos_schlafzimmer
              state: opening
            - condition: state
              entity_id: cover.rollos_schlafzimmer
              state: open
          then:
          - service: cover.close_cover
            data: {}
            target:
              entity_id: cover.rollos_schlafzimmer
- id: '1673948568537'
  alias: Urlaubsmodus nach Kalender
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: 0:0:0
    entity_id: calendar.personio_cloud37_abwesenheiten_mein_kalender_remote_d_schleswig_holstein_cloud_infrastructure_d
    id: urlaubOn
  - platform: calendar
    event: end
    offset: 0:0:0
    entity_id: calendar.personio_cloud37_abwesenheiten_mein_kalender_remote_d_schleswig_holstein_cloud_infrastructure_d
    id: urlaubOff
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - urlaubOn
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.urlaubsmodus
    - conditions:
      - condition: trigger
        id:
        - urlaubOff
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.urlaubsmodus
  mode: single
- id: '1674670778068'
  alias: Kaffeemaschine
  description: Fü vier Stunden
  trigger:
  - platform: time
    at: 07:30:00
    id: kaffeemaschineOn
  - platform: time
    at: '11:30:00'
    id: kaffeemaschineOff
  condition:
  - condition: state
    entity_id: sensor.people_home
    state: '1'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - kaffeemaschineOn
      sequence:
      - type: turn_on
        device_id: 7641a6d433b2e26a0c7d94ad413df030
        entity_id: ea900cc1cb4a987a44c517bbb1816c5c
        domain: switch
    - conditions:
      - condition: trigger
        id:
        - kaffeemaschineOff
      sequence:
      - type: turn_off
        device_id: 7641a6d433b2e26a0c7d94ad413df030
        entity_id: ea900cc1cb4a987a44c517bbb1816c5c
        domain: switch
  mode: single
- id: '1686557247104'
  alias: Ventilator
  description: 'An: Wenn über 26 Grad

    Aus: Wenn unter 24 Grad'
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.wohnzimmer_temperature
    above: 25
    id: fanOn
  - platform: numeric_state
    entity_id:
    - sensor.wohnzimmer_temperature
    id: fanOff
    below: 23
  condition:
  - condition: state
    entity_id: input_boolean.ventilator
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - fanOn
        - condition: time
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
          before: '22:00:00'
          after: 07:00:00
          enabled: false
      sequence:
      - service: fan.turn_on
        data:
          percentage: 60
        target:
          entity_id: fan.ventilator_wohnzimmer
    - conditions:
      - condition: trigger
        id:
        - fanOff
      sequence:
      - service: fan.turn_off
        data: {}
        target:
          entity_id: fan.ventilator_wohnzimmer
  mode: single
- id: '1686661353814'
  alias: Rollos runter wenn 26 Grad auf Balkon
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.balkon_temperature
    above: 26
    id: tooHotBalconyOn
  - platform: numeric_state
    entity_id:
    - sensor.balkon_temperature
    id: tooHotBalconyOff
    below: 23
  condition:
  - condition: time
    before: '21:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
    after: 09:00:00
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - tooHotBalconyOn
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.rollos_schlafzimmer
          - cover.rollos_wohnzimmer_fensterbank
    - conditions:
      - condition: trigger
        id:
        - tooHotBalconyOff
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.zu_warm
        data: {}
      - service: cover.open_cover
        target:
          entity_id:
          - cover.rollos_schlafzimmer
          - cover.rollos_wohnzimmer_fensterbank
        data: {}
  mode: single
- id: '1690625427032'
  alias: Daily Backup
  description: ''
  trigger:
  - platform: time
    at: 02:00:00
  - platform: conversation
    command:
    - Mache ein Backup
    - Mach ein Backup
  condition: []
  action:
  - service: auto_backup.backup_full
    data:
      keep_days: 2
  mode: single
- id: '1690714818053'
  alias: Rollos hoch wenn jemand nach Hause kommt
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.people_home
    from: '0'
    to: '1'
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id:
      - cover.ikea_rollo_balkontur
      - cover.rollos_schlafzimmer
      - cover.rollos_wohnzimmer_fensterbank
  mode: single
- id: '1691151128778'
  alias: Nachtlicht Küche
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.hlk_kuche_belegung
    from: 'off'
    to: 'on'
    id: kucheOn
  - platform: state
    entity_id:
    - binary_sensor.hlk_kuche_belegung
    from: 'on'
    to: 'off'
    id: kucheOff
  condition:
  - condition: sun
    after: sunset
    after_offset: '1'
    before: sunrise
    before_offset: '1'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - kucheOn
      sequence:
      - type: turn_on
        device_id: 7e56df9d6385100a6089783f6de066d7
        entity_id: 36aeda22c66e308e67721d47b46bf669
        domain: light
        brightness_pct: 30
    - conditions:
      - condition: trigger
        id:
        - kucheOff
      sequence:
      - type: turn_off
        device_id: 7e56df9d6385100a6089783f6de066d7
        entity_id: 36aeda22c66e308e67721d47b46bf669
        domain: light
  mode: single
- id: '1691320563612'
  alias: Rollos schließen wenn zu hell
  description: ''
  trigger:
  - type: illuminance
    platform: device
    device_id: cc409c26cddb1137902b367f0bbcc342
    entity_id: 92fbba10867e030bf34955d6b0015ff3
    domain: sensor
    above: 10000
    id: wohnzimmerRollosOn
  - type: illuminance
    platform: device
    device_id: cc409c26cddb1137902b367f0bbcc342
    entity_id: 92fbba10867e030bf34955d6b0015ff3
    domain: sensor
    id: wohnzimmerRollosOff
    below: 5000
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.zu_warm
      state: 'off'
    - condition: state
      entity_id: input_boolean.guestmode
      state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - wohnzimmerRollosOn
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.rollos_wohnzimmer_fensterbank
    - conditions:
      - condition: trigger
        id:
        - wohnzimmerRollosOff
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.rollos_wohnzimmer_fensterbank
    - conditions:
      - condition: trigger
        id:
        - kucheRollosOn
      sequence: []
  mode: single
- id: '1691358813636'
  alias: Nachtlicht Flur
  description: 20%
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.hlk_flur_belegung
    to: 'on'
    id: flurOn
  - platform: state
    entity_id:
    - binary_sensor.hlk_flur_belegung
    to: 'off'
    from: 'on'
    id: flurOff
  condition:
  - condition: sun
    after: sunset
    after_offset: '1'
    before: sunrise
    before_offset: '1'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - flurOn
      sequence:
      - type: turn_on
        device_id: 1e56c698587f52128871b8ba472cfc47
        entity_id: 2c70b1a119850621e0cd9a85759fca40
        domain: light
        brightness_pct: 30
    - conditions:
      - condition: trigger
        id:
        - flurOff
      sequence:
      - type: turn_off
        device_id: 1e56c698587f52128871b8ba472cfc47
        entity_id: 2c70b1a119850621e0cd9a85759fca40
        domain: light
  mode: single
- id: '1691741828322'
  alias: Ankommen
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.aqara_contact_wohnungstur_contact
    from: 'on'
    to: 'off'
    enabled: true
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: doorOpenOn
  - platform: state
    entity_id:
    - sensor.people_home
    to: '1'
    id: anyoneHomeOn
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.guestmode
      state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - anyoneHomeOn
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          device_id: 9d14dca47a5773d55c5f7f9d16c58476
    - conditions:
      - condition: trigger
        id:
        - doorOpenOn
      - condition: template
        value_template: '{{ is_state_attr(''media_player.spotify_florian'', ''source'',
          ''iPhone'') }}'
        enabled: true
      - condition: template
        value_template: '{{ is_state(''media_player.spotify_florian'', ''playing'')
          }}'
        enabled: true
      sequence:
      - service: notify.home_ai
        data:
          title: "Willkommen Zuhause \U0001F3E0"
          message: Ich habe die Musik von deinem iPhone auf Sonos Ray gestellt
      - service: media_player.select_source
        data:
          source: Spotify Connect
        target:
          entity_id: media_player.sonos_ray_wohnzimmer
      - service: media_player.select_source
        data:
          source: Sonos Ray
        target:
          entity_id: media_player.spotify_florian
      - service: media_player.media_play
        data: {}
        target:
          entity_id: media_player.sonos_ray_wohnzimmer
    - conditions:
      - condition: trigger
        id:
        - doorOpenOn
      - condition: template
        value_template: '{{ (as_timestamp(now()) - as_timestamp(states.person.florian_wartner.last_changed))
          < 10 }}'
        enabled: true
      sequence:
      - service: media_player.volume_set
        metadata: {}
        data:
          volume_level: 0.25
        target:
          device_id: 5d251a0a20f76a8251bbdb9e1b1b0178
      - service: script.willkommen_florian
        metadata: {}
        data: {}
  mode: single
- id: '1691769668517'
  alias: 'Jonas: Zähneputzen Starten'
  description: ''
  use_blueprint:
    path: Drafted/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.aqara_taster_badezimmer_action
      single_action:
      - condition: state
        entity_id: input_boolean.jonas_ist_da
        state: 'on'
      - service: script.zahneputzen
        data: {}
      - condition: time
        weekday:
        - fri
        - sat
        before: '20:00:00'
- id: '1691786451171'
  alias: Nachtlicht Badezimmer
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.mmwave_badezimmer
    to: 'on'
    id: badezimmerOn
  - platform: state
    entity_id:
    - binary_sensor.mmwave_badezimmer
    to: 'off'
    id: badezimmerOff
  condition: []
  action:
  - if:
    - condition: sun
      before: sunrise
      before_offset: '1'
      after: sunset
      after_offset: '1'
    then:
    - choose:
      - conditions:
        - condition: trigger
          id:
          - badezimmerOn
        sequence:
        - service: light.turn_on
          data:
            brightness_pct: 30
          target:
            entity_id: light.decke_badezimmer
      - conditions:
        - condition: trigger
          id:
          - badezimmerOff
        sequence:
        - service: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.klo_besetzt
        - if:
          - condition: and
            conditions:
            - condition: or
              conditions:
              - condition: sun
                before: sunrise
                after: sunset
                after_offset: '1'
                enabled: true
              - condition: state
                entity_id: input_boolean.guestmode
                state: 'off'
                enabled: false
          then:
          - service: light.turn_off
            data: {}
            target:
              device_id: 6e5322a0a9b03a5d8858879bbead49bf
  mode: single
- id: '1692084370120'
  alias: Verlassen
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.people_home
    to: '0'
    id: anyoneHomeOff
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - anyoneHomeOff
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.alle_lampen
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.alle_steckdosen
  mode: single
- id: '1692134639284'
  alias: Türklingel
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.nuki_haustur_ring_action
    to: 'on'
    id: ringOn
  condition:
  - condition: numeric_state
    entity_id: sensor.people_home
    above: 0
  - condition: state
    entity_id: input_boolean.nicht_storen
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - ringOn
        - condition: numeric_state
          entity_id: sensor.people_home
          below: 1
      sequence:
      - service: notify.mobile_app_iphone_von_florian
        data:
          message: Scheinbar hat jemand an der Tür geklingelt.
          title: Jemand hat an der Tür geklingelt..
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - ringOn
        - condition: numeric_state
          entity_id: sensor.people_home
          above: 0
      sequence:
      - parallel:
        - repeat:
            count: '3'
            sequence:
            - service: light.turn_on
              data:
                color_name: gold
              target:
                device_id: 81a05f4ea38ce123a73f5f66b8e0e3c1
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
            - service: light.turn_off
              data: {}
              target:
                device_id: 81a05f4ea38ce123a73f5f66b8e0e3c1
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        - service: notify.alexa_media_echo_show_wohnzimmer
          data:
            message: Jemand hat an der Tür geklingelt
          enabled: false
        - service: script.awtrix_doorbell
          metadata: {}
          data: {}
    - conditions:
      - condition: trigger
        id:
        - ringOn
      sequence:
      - service: notify.mobile_app_macbook_pro_von_florian
        metadata: {}
        data:
          title: "\U0001F514 Klingeling!"
          message: Jemand hat an der Tür geklingelt
  mode: single
- id: '1692135326497'
  alias: iPhone im WLAN
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.florians_iphone_ssid
    to: Florians Homebase
    id: iphoneWLANOn
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - iphoneWLANOn
      sequence: []
  mode: single
- id: '1692310400644'
  alias: Aufstehen
  description: ''
  trigger:
  - platform: time
    at: 07:30:00
    id: timeOn
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - timeOn
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.dashboard_bildschirm
  mode: single
- id: '1693489965780'
  alias: Rollo Küche
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '1'
    id: coverKucheClose
  - platform: sun
    event: sunrise
    offset: '1'
    id: coverKucheOpen
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - coverKucheClose
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.aqara_rollo_kuche
    - conditions:
      - condition: trigger
        id:
        - coverKucheOpen
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.aqara_rollo_kuche
  mode: single
- id: '1697199027134'
  alias: Meeting
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.teams_status
    from: unknown
    to: InACall
    id: meetingOn
  - platform: state
    entity_id:
    - sensor.teams_status
    from: InACall
    to: Available
    id: meetingOff
  - platform: state
    entity_id:
    - binary_sensor.macbook_pro_von_florian_camera_in_use
    to: 'on'
    id: macbookCameraOn
  - platform: state
    entity_id:
    - binary_sensor.macbook_pro_von_florian_camera_in_use
    to: 'off'
    id: macbookCameraOff
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - meetingOn
        - macbookCameraOn
      sequence:
      - parallel:
        - alias: AWTRIX Publish Wohnzimmer
          service: mqtt.publish
          data:
            topic: awtrix_wohnzimmer/notify
            payload: '{   "icon":"55236",   "text": "c37", "hold": true }'
        - alias: AWTRIX Publish Büro
          service: mqtt.publish
          data:
            topic: awtrix_buro/notify
            payload: '{   "icon":"55236",   "text": "c37", "hold": true }'
        - service: light.turn_on
          metadata: {}
          data:
            rgb_color:
            - 240
            - 0
            - 0
          target:
            entity_id: light.wled_please_do_disturb
    - conditions:
      - condition: trigger
        id:
        - meetingOff
        - macbookCameraOff
      sequence:
      - service: script.awtrix_dismiss_notification
        metadata: {}
        data: {}
      - type: turn_off
        device_id: 20ae8ae709d52ecf41d7141305fcb2b1
        entity_id: bda91f0704e155ce5c10002606ca8909
        domain: light
  mode: single
- id: '1697834117670'
  alias: Nina Alarm
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.warning_lubeck_hansestadt_1
    to: 'on'
    id: luebeckWarningOn1
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - luebeckWarningOn1
        - condition: zone
          entity_id: person.florian_wartner
          zone: zone.home
      sequence:
      - service: conversation.process
        metadata: {}
        data:
          text: 'Briefly tell me that my {{ trigger.event.data.service_data.message
            }}. Always make sure that the message fits into 2 sentences.

            '
          agent_id: conversation.chatgpt_assist
          language: german
        response_variable: generated_response
      - service: notify.alexa_media_echo_show_wohnzimmer
        data:
          title: '{{  state_attr(''binary_sensor.warning_lubeck_hansestadt_1'', ''headline'')
            }}'
          message: '"Es gibt eine Warnung!" {{  state_attr(''binary_sensor.warning_lubeck_hansestadt_1'',
            ''description'') }} {{  state_attr(''binary_sensor.warning_lubeck_hansestadt_1'',
            ''recommended_actions'') }}'
        enabled: true
  mode: single
- id: a7c427e6-ce03-49eb-9a23-c5bbe7625aa4
  alias: Admin - Generate README.md
  description: ''
  trigger:
  - platform: time
    at: 05:00:00
  condition: []
  action:
  - service: readme.generate
  initial_state: true
- id: '1699291427370'
  alias: Speedtest
  description: Alle 2 Minuten
  trigger:
  - platform: time_pattern
    minutes: /2
  condition: []
  action:
  - service: script.1699263899938
    data: {}
  mode: single
- id: '1700167188286'
  alias: Luftreiniger
  description: ''
  trigger:
  - alias: Luftreiniger nach Zone Trigger
    platform: zone
    entity_id: person.florian_wartner
    zone: zone.home
    event: leave
    id: zoneLeavePure
  - platform: time
    at: '20:30:00'
    alias: Luftreiniger Schlafzimmer Abends
    id: timeEveningPure
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - zoneLeavePure
        - condition: state
          entity_id: sensor.people_home
          state: '0'
          for:
            hours: 0
            minutes: 5
            seconds: 0
      sequence:
      - service: climate.set_fan_mode
        data:
          fan_mode: high
        target:
          entity_id:
          - climate.luftreiniger_schlafzimmer
          - climate.luftreiniger_wohnzimmer
      - delay:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
      - service: climate.set_fan_mode
        data:
          fan_mode: low
        target:
          entity_id:
          - climate.luftreiniger_schlafzimmer
          - climate.luftreiniger_wohnzimmer
      alias: Luftreiniger nach Zone
    - conditions:
      - condition: trigger
        id:
        - timeEveningPure
      sequence:
      - service: climate.set_fan_mode
        data:
          fan_mode: high
        target:
          entity_id:
          - climate.luftreiniger_schlafzimmer
      - delay:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
      - service: climate.set_fan_mode
        data:
          fan_mode: low
        target:
          entity_id:
          - climate.luftreiniger_schlafzimmer
  mode: single
- id: '1700299245684'
  alias: Taster Badezimmer
  description: ''
  use_blueprint:
    path: Drafted/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.aqara_taster_badezimmer_action
      double_action:
      - service: script.duschen_vorbereiten
        data: {}
- id: '1700299340055'
  alias: Duschen vorbereiten
  description: ''
  use_blueprint:
    path: Drafted/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.aqara_taster_badezimmer_action
      double_action:
      - service: script.duschen_vorbereiten
        data: {}
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.heizung_badezimmer
- id: '1700299914747'
  alias: Duschen Ankündigen
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.badezimmer_temperature
    above: 22
  condition:
  - condition: state
    entity_id: input_boolean.duschen_vorbereiten
    state: 'on'
  action:
  - service: notify.alexa_media
    data:
      message: Das Badezimmer hat eine Temperatur von mindestens 22 Grad erreicht.
        Du kannst also jetzt duschen gehen.
      data:
        method: all
        type: announce
      target:
      - media_player.echo_badezimmer
      - media_player.echo_schlafzimmer
      - media_player.echo_show_wohnzimmer
      title: Du könntest jetzt duschen gehen
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.duschen_vorbereiten
  mode: single
- id: '1700300672837'
  alias: Duschen
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.aqara_water_badezimmer_water_leak
    from: 'off'
    to: 'on'
    id: waterBadezimmerOn
  - platform: state
    entity_id:
    - binary_sensor.aqara_water_badezimmer_water_leak
    from: 'on'
    to: 'off'
    id: waterBadezimmerOff
  - platform: state
    entity_id:
    - binary_sensor.mmwave_badezimmer
    from: 'on'
    to: 'off'
    id: mmwaveDuschenAus
  - platform: numeric_state
    entity_id:
    - sensor.badezimmer_luftfeuchtigkeit
    for:
      hours: 0
      minutes: 20
      seconds: 0
    above: 70
    id: luftfeuchtigkeitBadezimmerHoch
  condition:
  - condition: state
    entity_id: input_boolean.duschen_besetzt
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - waterBadezimmerOn
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: media_player.volume_set
        data:
          volume_level: 0.4
        target:
          entity_id: media_player.echo_badezimmer
      - service: media_player.play_media
        target:
          entity_id: media_player.echo_badezimmer
        data:
          media_content_id: shuffle 37i9dQZF1DWSqmBTGDYngZ
          media_content_type: SPOTIFY
        metadata: {}
    - conditions:
      - condition: trigger
        id:
        - mmwaveDuschenAus
      sequence:
      - service: media_player.media_stop
        data: {}
        target:
          entity_id: media_player.echo_badezimmer
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.heizung_badezimmer
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.duschen_besetzt
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - luftfeuchtigkeitBadezimmerHoch
        - condition: state
          entity_id: binary_sensor.fenster_badezimmer
          state: 'off'
      sequence:
      - service: notify.alexa_media
        data:
          target:
          - media_player.echo_badezimmer
          - media_player.echo_schlafzimmer
          - media_player.echo_schlafzimmer
          data:
            method: all
            type: announce
          title: Lüften nicht vergessen
          message: Bitte öffne doch das Fenster im Badezimmer. Oder möchtest du ein
            kleines Feuchtbiotop Zuhause haben?
  mode: single
- id: '1701356043476'
  alias: Batterien
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      actions:
      - service: notify.home_ai
        data:
          message: Einige Batterien schein fast oder ganz leer zu sein. Guck doch
            mal nach.
          title: "\U0001FAAB Niedriger Batterie Status"
      day: 1
- id: '1701771967706'
  alias: Heizung
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fenster_badezimmer
    from: 'off'
    to: 'on'
    id: fensterBadezimmerAuf
  - platform: state
    entity_id:
    - binary_sensor.fenster_schlafzimmer
    from: 'off'
    to: 'on'
    id: fensterSchlafzimmerAuf
  - platform: state
    entity_id:
    - binary_sensor.fenster_wohnzimmer
    from: 'off'
    to: 'on'
    id: fensterWohnzimmerAuf
  - platform: state
    entity_id:
    - binary_sensor.aqara_contact_balkontur_contact
    from: 'off'
    to: 'on'
    id: fensterWohnzimmer2Auf
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - fensterBadezimmerAuf
        - condition: device
          device_id: 90ee15e301be363c6e674cb006400119
          domain: climate
          entity_id: 03daa9c5cdca12b2bf1eb23b40f1d940
          type: is_hvac_mode
          hvac_mode: heat
      sequence:
      - device_id: 90ee15e301be363c6e674cb006400119
        domain: climate
        entity_id: 03daa9c5cdca12b2bf1eb23b40f1d940
        type: set_hvac_mode
        hvac_mode: 'off'
      alias: Heizung Badezimmer Aus
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - fensterSchlafzimmerAuf
        - condition: device
          device_id: a71ccaedb801d2e7e89232f60fea1706
          domain: climate
          entity_id: a499efc97a3a60b89a6cb823e8587346
          type: is_hvac_mode
          hvac_mode: heat
      sequence:
      - device_id: a71ccaedb801d2e7e89232f60fea1706
        domain: climate
        entity_id: a499efc97a3a60b89a6cb823e8587346
        type: set_hvac_mode
        hvac_mode: 'off'
      alias: Heizung Schlafzimmer Aus
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - fensterWohnzimmerAuf
          - fensterWohnzimmer2Auf
        - condition: device
          device_id: 5106942131c1dfe9055cba838a26b47b
          domain: climate
          entity_id: 3faa59886c33a1ae38e91b758a6c7bd4
          type: is_hvac_mode
          hvac_mode: heat
      sequence:
      - device_id: 5106942131c1dfe9055cba838a26b47b
        domain: climate
        entity_id: 3faa59886c33a1ae38e91b758a6c7bd4
        type: set_hvac_mode
        hvac_mode: 'off'
      alias: Heizung Wohnzimmer Aus
  mode: single
- id: '1701773191392'
  alias: Heizung Toggle
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.heizung_toggle
    to: 'off'
    id: alleHeizungenAus
    from: 'on'
  - platform: state
    entity_id:
    - input_boolean.heizung_toggle
    to: 'on'
    id: alleHeizungenAn
    from: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - alleHeizungenAus
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: climate.heizung_badezimmer
            state: heat
          - condition: state
            entity_id: climate.heizung_wohnzimmer
            state: heat
          - condition: state
            entity_id: climate.heizung_schlafzimmer
            state: heat
          - condition: state
            entity_id: climate.heizung_buro
            state: heat
        then:
        - service: climate.set_hvac_mode
          data:
            hvac_mode: 'off'
          target:
            device_id:
            - 90ee15e301be363c6e674cb006400119
            - afd3d4982d793f98224ce76064298198
            - a71ccaedb801d2e7e89232f60fea1706
            - 5106942131c1dfe9055cba838a26b47b
        - service: notify.home_ai
          data:
            title: ℹ️ Alle Heizungen ausgeschaltet
            message: Alle Heizungen wurden erfolgreich ausgeschaltet.
    - conditions:
      - condition: trigger
        id:
        - alleHeizungenAn
      sequence:
      - if: []
        then:
        - service: climate.set_hvac_mode
          data:
            hvac_mode: heat
        - service: notify.home_ai
          data:
            title: ℹ️ Alle Heizungen eingeschaltet
            message: Alle Heizungen wurden erfolgreich eingeschaltet.
  mode: single
- id: '1702645776967'
  alias: Bett Belegung
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bett_sensor_bett_rechts
    from: 'off'
    to: 'on'
    id: bettRechtsAn
    for:
      hours: 0
      minutes: 1
      seconds: 0
    alias: Bett Rechts An
  - platform: state
    entity_id:
    - binary_sensor.bett_sensor_bett_links
    from: 'off'
    to: 'on'
    id: bettLinksAn
    for:
      hours: 0
      minutes: 1
      seconds: 0
    alias: Bett Links An
  - platform: state
    entity_id:
    - binary_sensor.bett_sensor_bett_rechts
    from: 'on'
    to: 'off'
    id: bettRechtsAus
    for:
      hours: 0
      minutes: 1
      seconds: 0
    alias: Bett Rechts Aus
  - alias: Bett Links Aus
    platform: state
    entity_id:
    - binary_sensor.bett_sensor_bett_links
    from: 'on'
    to: 'off'
    id: bettLinksAus
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - bettRechtsAn
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.bett_rechts
        data: {}
      alias: Bett Rechts An
    - conditions:
      - condition: trigger
        id:
        - bettLinksAn
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.bett_links
        data: {}
      alias: Bett Links An
    - conditions:
      - condition: trigger
        id:
        - bettRechtsAus
      sequence:
      - service: input_boolean.turn_off
        target:
          device_id: []
          area_id: []
          entity_id: input_boolean.bett_rechts
        data: {}
      alias: Bett Rechts Aus
    - conditions:
      - condition: trigger
        id:
        - bettLinksAus
      sequence:
      - service: input_boolean.turn_off
        target:
          device_id: []
          area_id: []
          entity_id: input_boolean.bett_links
        data: {}
      alias: Bett Links Aus
  mode: single
- id: '1702827571661'
  alias: Türen
  description: ''
  trigger:
  - platform: zone
    entity_id: person.florian_wartner
    zone: zone.home
    event: enter
    id: zoneHomeOn
  - platform: state
    entity_id:
    - binary_sensor.nuki_haustur_ring_action
    to: 'on'
    id: nukiRingOn
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: UNLOCK_HOUSE
    id: unlockHouse
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: UNLOCK_APARTMENT
    id: unlockApartment
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - zoneHomeOn
          - nukiRingOn
      sequence:
      - service: notify.home_ai
        data:
          message: Möchtest du die Tür öffnen?
          title: "\U0001F510 Türen öffnen"
          data:
            actions:
            - action: UNLOCK_HOUSE
              title: Haustür öffnen
              icon: sfsymbols:lock.open.fill
            - action: UNLOCK_APARTMENT
              title: Wohnungstür öffnen
              icon: sfsymbols:lock.open.fill
      alias: Notification
    - conditions:
      - condition: trigger
        id:
        - unlockHouse
      sequence:
      - service: lock.open
        target:
          entity_id: lock.nuki_haustur_lock
        data: {}
      alias: Haustür Öffnen
    - conditions:
      - condition: trigger
        id:
        - unlockApartment
      sequence:
      - service: lock.open
        data: {}
        target:
          entity_id: lock.nuki_wohnungstur_lock
      alias: Wohnungstür Öffnen
  mode: single
- id: '1707472829981'
  alias: Wohnungstür (NFC Tag)
  description: ''
  trigger:
  - platform: tag
    tag_id: 2db7a52e-e2b8-464e-a411-1cedff09524c
  condition: []
  action:
  - service: lock.open
    metadata: {}
    data: {}
    target:
      entity_id: lock.nuki_wohnungstur_lock
  mode: single
- id: '1710012823581'
  alias: Reboot
  description: ''
  trigger:
  - platform: time_pattern
    hours: '2'
  condition: []
  action:
  - service: hassio.host_reboot
    data: {}
  mode: single
- id: '1710345991689'
  alias: Futterautomat
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: 0:0:0
    entity_id: calendar.polly
    enabled: true
  condition:
  - condition: time
    after: 06:00:00
    weekday:
    - mon
    - tue
    - wed
    - fri
    - sat
    - sun
    - thu
    before: '22:00:00'
  action:
  - service: script.toggle
    metadata: {}
    data: {}
    target:
      entity_id: script.polly_futtern
  mode: single
- id: '1710416045878'
  alias: Telefon Zuhause
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.fritz_box_6591_cable_kdg_anrufmonitor_telefonbuch
    to: ringing
  condition: []
  action:
  - service: notify.home_ai
    data:
      title: Das Telefon klingelt
      message: Jemand ruft dich an.
  mode: single
- id: '1710602590906'
  alias: BKW Steckdose Probleme
  description: ''
  trigger:
  - type: problem
    platform: device
    device_id: 25e8395680cf11660d43d6d06ecb2d14
    entity_id: f4693bd0130677bf399323ff19198c88
    domain: binary_sensor
    id: bkwIssueNotificationOverheating
  - type: problem
    platform: device
    device_id: 25e8395680cf11660d43d6d06ecb2d14
    entity_id: 6fa52c6272a0f11bbe8eb1e3937213d7
    domain: binary_sensor
    id: bkwIssueNotificationOverpowering
  - type: problem
    platform: device
    device_id: 25e8395680cf11660d43d6d06ecb2d14
    entity_id: 6b46f1be9a1f4a9af2ffe4adb2499125
    domain: binary_sensor
    id: bkwIssueNotificationOvervoltage
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: SWITCH_OFF_BKW
    id: bkwIssueNotificationEventListener
  condition:
  - condition: state
    entity_id: input_boolean.nicht_storen
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - bkwIssueNotificationOverheating
        - bkwIssueNotificationOverpowering
        - bkwIssueNotificationOvervoltage
      sequence:
      - service: notify.home_ai
        data:
          message: Das BKW scheint zu überhitzen. Wie willst du vorgehen?
          title: ⚠️ Probleme mit dem BKW
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 1
            actions:
            - action: SWITCH_OFF_BKW
              title: Steckdose Abschalten
              icon: sfsymbols:line.horizontal.3.decrease.circle
    - conditions:
      - condition: trigger
        id:
        - bkwIssueNotificationEventListener
      sequence:
      - type: turn_off
        device_id: 25e8395680cf11660d43d6d06ecb2d14
        entity_id: c2b543703b09163eb220f8b8a0eb4830
        domain: switch
  mode: single
- id: '1710933026215'
  alias: Katzenklo Counter Increase
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.aqara_contact_katzenklo_contact
    from: 'off'
    to: 'on'
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: counter.increment
    target:
      entity_id: counter.katzenklo_counter
    data: {}
  mode: single
- id: '1710933790796'
  alias: Katzenklo Counter Reset
  description: ''
  trigger:
  - platform: state
    entity_id:
    - counter.katzenklo_counter
    to: '11'
  condition:
  - condition: state
    entity_id: input_boolean.staubsauger_reinigung_erlaubt
    state: 'on'
  action:
  - service: counter.reset
    target:
      entity_id:
      - counter.katzenklo_counter
    data: {}
    enabled: true
  - if:
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
      after: 06:00:00
      before: '20:00:00'
    then:
    - service: vacuum.send_command
      metadata: {}
      data:
        command: set_custom_mode
        params: 104
      target:
        entity_id: vacuum.roborock_s7_maxv
    - service: vacuum.set_fan_speed
      target:
        entity_id:
        - vacuum.roborock_s7_maxv
      data:
        fan_speed: '100'
    - service: roborock.vacuum_clean_segment
      target:
        entity_id: vacuum.roborock_s7_maxv
      data:
        segments:
        - 20
        repeats: 1
  mode: single
- id: '1711970118796'
  alias: 'BKW: Inverter Power'
  description: ''
  trigger:
  - platform: time
    at: sensor.sun_next_setting
    id: bkwInverterOff
  - platform: time
    at: sensor.sun_next_rising
    id: bkwInverterOn
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - bkwInverterOff
      sequence:
      - type: turn_off
        device_id: 25e8395680cf11660d43d6d06ecb2d14
        entity_id: c2b543703b09163eb220f8b8a0eb4830
        domain: switch
    - conditions:
      - condition: trigger
        id:
        - bkwInverterOn
      sequence:
      - type: turn_on
        device_id: 25e8395680cf11660d43d6d06ecb2d14
        entity_id: c2b543703b09163eb220f8b8a0eb4830
        domain: switch
  mode: single
- id: '1711970540815'
  alias: Küche Steckdosen Power Management
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.steckdose_waschmaschine_energy_power
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: washingMachineOffAfterTime
    to: '0'
    from:
  - platform: state
    entity_id:
    - sensor.steckdose_spuhlmaschine_energy_power
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: dishWasherOffAfterTime
    to: '0'
    from:
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - washingMachineOffAfterTime
      sequence:
      - type: turn_off
        device_id: 3c45a70c459e2e66b166dca5891180c6
        entity_id: eb4d372310f986822d024a05f2007c03
        domain: switch
      - service: notify.home_ai
        data:
          title: "\U0001F9FA Wäsche ist fertig"
          message: Die Wäsche ist fertig.
    - conditions:
      - condition: trigger
        id:
        - dishWasherOffAfterTime
      sequence:
      - type: turn_off
        device_id: 4a05cd597a16be48ba279a90d1ba5c18
        entity_id: 6a36fb96527589eaed3672a9978a3393
        domain: switch
      - service: notify.home_ai
        data:
          title: "\U0001F37D️ Geschirr ist sauber"
          message: Spülmaschine ist fertig.
  mode: single
- id: '1712525174898'
  alias: Wecker
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wecker
    enabled: true
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.wecker_an_aus
      state: 'on'
    - condition: state
      entity_id: input_boolean.nicht_storen
      state: 'off'
  action:
  - service: notify.alexa_media_echo_schlafzimmer
    data:
      message: <speak><audio src="https://minio.srv.wartner.io/homeassistant/NdNhCow5-wecker.mp3"
        /></speak>
  - service: notify.alexa_media_echo_schlafzimmer
    data:
      message: '{{ [   "Guten Morgen!",   "Morgen!",   "Auf einen schönen Tag!",   "Wie
        hast du geschlafen?",   "Na, gut ausgeschlafen?",   "Bereit für einen neuen
        Tag?",   "Frisch und munter?",   "Hoffe, du hast süß geträumt!",   "Einen
        wunderschönen guten Morgen!",   "Es ist Zeit für Kaffee!",   "Freue mich,
        dich zu sehen!",   "Was für ein herrlicher Morgen!",   "Bist du auch schon
        so aufgeregt für heute?",   "Hast du gut träumen können?",   "Guten Morgen,
        Sonnenschein!",   "Los geht’s, der Tag wartet!",   "Schön, dass du da bist!",   "Guten
        Morgen, Welt!",   "Ich hoffe, du fühlst dich heute großartig!",   "Lasst uns
        diesen Tag rocken!",   "Ein neuer Morgen, ein neuer Anfang!",   "Guten Morgen,
        lasst uns den Tag beginnen!" ] | random }}  Es ist {{ states(''sensor.time'')
        }}.  Es sind gerade {{ state_attr(''weather.forecast_home'', ''temperature'')
        | round }} Grad in Lübeck mit einer Luftfeuchtigkeit von {{ state_attr(''weather.forecast_home'',
        ''humidity'') | round }} Prozent. Der heutige Vorschlag für dein Mittagessen
        wäre leckeres {{ states(''sensor.mealie_heutiges_gericht'') }}.'
  - service: fully_kiosk.load_url
    target:
      device_id: 3738295208de8496912ccf373503aa6c
    data:
      url: https://ha.wartner.cloud/dashboard-nspanel/1
  - device_id: bb8a84cf268277f3d38063aee6ce698e
    domain: lock
    entity_id: 7b91d36587ba4469f26de8a280995404
    type: unlock
  - if:
    - condition: state
      entity_id: input_boolean.auto_wecker
      state: 'off'
    then:
    - service: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.wecker_an_aus
  mode: single
- id: '1712829051695'
  alias: 'BKW: Maschinen laufen lassen Notification'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.shelly_bkw_power
    for:
      hours: 0
      minutes: 5
      seconds: 0
    above: 330
    id: bkwSunPower
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: IOS_BKW_WASCHMASCHINE_AN
    id: bkwIOSWMAn
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: IOS_BKW_SPUELMASCHINE_AN
    id: bkwIOSSMAn
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: IOS_BKW_ALLES_AN
    id: bkwIOSALLESAn
  condition:
  - condition: zone
    entity_id: person.florian_wartner
    zone: zone.home
  - condition: state
    entity_id: input_boolean.nicht_storen
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - bkwSunPower
      sequence:
      - service: notify.home_ai
        metadata: {}
        data:
          title: ☀️ Die Sonne scheint prächtig!
          message: Du erzeugst gerade so viel Energie, du könntest doch glatt die
            Waschmaschine oder die Spülmaschine laufen lassen! Soll ich die Steckdosen
            einschalten? (Ignoriere die Temperatur in der Küche)
          data:
            actions:
            - action: IOS_BKW_WASCHMASCHINE_AN
              title: Waschmaschine
              icon: sfsymbols:power
            - action: IOS_BKW_SPUELMASCHINE_AN
              title: Spühlmaschine
              icon: sfsymbols:power
            - action: IOS_BKW_ALLES_AN
              title: Beides
              icon: sfsymbols:power
    - conditions:
      - condition: trigger
        id:
        - bkwIOSWMAn
      sequence:
      - type: turn_on
        device_id: 3c45a70c459e2e66b166dca5891180c6
        entity_id: eb4d372310f986822d024a05f2007c03
        domain: switch
    - conditions:
      - condition: trigger
        id:
        - bkwIOSSMAn
      sequence:
      - type: turn_on
        device_id: 4a05cd597a16be48ba279a90d1ba5c18
        entity_id: 6a36fb96527589eaed3672a9978a3393
        domain: switch
    - conditions:
      - condition: trigger
        id:
        - bkwIOSALLESAn
      sequence:
      - type: turn_on
        device_id: 4a05cd597a16be48ba279a90d1ba5c18
        entity_id: 6a36fb96527589eaed3672a9978a3393
        domain: switch
      - type: turn_on
        device_id: 3c45a70c459e2e66b166dca5891180c6
        entity_id: eb4d372310f986822d024a05f2007c03
        domain: switch
  mode: single
- id: '1712905210678'
  alias: Neues Gerät gefunden (Notification)
  description: ''
  trigger:
  - platform: event
    event_type: device_tracker_new_device
  condition:
  - condition: state
    entity_id: input_boolean.nicht_storen
    state: 'off'
  action:
  - service: notify.home_ai
    data:
      title: Neues Gerät gefunden
      message: 'Home Assistant hat ein neues Gerät gefunden:             {{trigger.event.data.entity_id}}'
  mode: single
- id: '1713084625685'
  alias: 'Frigate: Person erfasst'
  description: ''
  trigger:
  - type: occupied
    platform: device
    device_id: 58d5751a575da55de44805455265fbe1
    entity_id: 88626c253fc68a961eda8090dd829438
    domain: binary_sensor
  - type: occupied
    platform: device
    device_id: 328d9642040f6cf98392dcf5e15227d7
    entity_id: 51cac45251a7a5294e47082835a20b4a
    domain: binary_sensor
  condition:
  - condition: numeric_state
    entity_id: sensor.people_home
    below: 1
    enabled: true
  - condition: state
    entity_id: input_boolean.nicht_storen
    state: 'off'
  action:
  - service: notify.home_ai
    data:
      title: Jemand befindet sich in deiner Wohnung
      message: "Eine {{trigger.payload_json[\"after\"][\"label\"]}} wurde von \n          {{trigger.payload_json[\"after\"][\"camera\"]}}
        erfasst."
      data:
        photo:
        - url: https://ha.wartner.cloud/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?box=1
          caption: Eine {{trigger.payload_json["after"]["label"]}} wurde von  {{trigger.payload_json["after"]["camera"]}}
            erfasst.
  mode: single
- id: '1713180340302'
  alias: Fenster und Türen Alert
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.aqara_contact_balkontur_contact
    - binary_sensor.eve_contact_schlafzimmer_fenster_rechts
    id: windowOpenOn
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.aqara_contact_balkontur_contact
    - binary_sensor.eve_contact_schlafzimmer_fenster_rechts
    id: windowOpenOff
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - binary_sensor.aqara_contact_badezimmer_contact
    - binary_sensor.aqara_contact_kinderzimmer_contact
    - binary_sensor.aqara_contact_schlafzimmer_contact
    - binary_sensor.aqara_contact_wohnungstur_contact
    - binary_sensor.aqara_contact_wohnzimmer_contact
    id: doorOpenOn
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.aqara_contact_badezimmer_contact
    - binary_sensor.aqara_contact_kinderzimmer_contact
    - binary_sensor.aqara_contact_schlafzimmer_contact
    - binary_sensor.aqara_contact_wohnungstur_contact
    - binary_sensor.aqara_contact_wohnzimmer_contact
    id: doorOpenOff
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.nicht_storen
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.people_home
    below: 1
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - windowOpenOn
      sequence:
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.windows_open
    - conditions:
      - condition: trigger
        id:
        - windowOpenOff
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.windows_open
        data: {}
    - conditions:
      - condition: trigger
        id:
        - doorOpenOn
      sequence:
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.doors_open
    - conditions:
      - condition: trigger
        id:
        - doorOpenOff
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.doors_open
  mode: single
- id: '1713181284693'
  alias: Türen Offen Check
  description: ''
  trigger:
  - device_id: 67bc89621a1ceb0aced67ad07618a34b
    domain: hue
    platform: device
    type: short_release
    subtype: 1
    unique_id: f88e3a46-3b79-423c-868f-7ad7944c62bc
  condition:
  - condition: state
    entity_id: input_boolean.urlaubsmodus
    state: 'on'
  action:
  - wait_template: "{% set fenster = [\n            'binary_sensor.aqara_contact_badezimmer_contact',\n
      \           'binary_sensor.aqara_contact_balkontur_contact',\n            'binary_sensor.aqara_contact_kinderzimmer_contact',\n
      \           'binary_sensor.aqara_contact_wohnungstur_contact',\n            'binary_sensor.aqara_contact_wohnzimmer_contact',\n
      \           'binary_sensor.aqara_contact_schlafzimmer_contact',\n            ]
      %}\n          {% if fenster | select('is_state', 'on') | list | count > 0 %}\n
      \           true\n          {% else %}\n            false\n          {% endif
      %}"
    continue_on_timeout: false
  - if:
    - condition: state
      entity_id: input_boolean.nicht_storen
      state: 'off'
    then:
    - service: notify.home_ai
      metadata: {}
      data:
        message: Es sieht so aus, als wären noch eine oder mehrere Türen offen. Prüfe
          doch mal nach, welche das sein könnten und schließe sie gegebenenfalls bevor
          du gehst.
        title: Es sind noch Türen offen
  - service: notify.alexa_media_echo_flur
    metadata: {}
    data:
      message: Es sieht so aus, als wären noch eine oder mehrere Türen offen. Prüfe
        doch mal nach, welche das sein könnten und schließe sie gegebenenfalls bevor
        du gehst.
  mode: single
- id: '1713181882652'
  alias: Fenster Offen Check
  description: ''
  trigger:
  - device_id: 67bc89621a1ceb0aced67ad07618a34b
    domain: hue
    platform: device
    type: short_release
    subtype: 2
    unique_id: 8d3f7a5f-3828-4f9f-96c9-fcc402888bfc
  condition:
  - condition: state
    entity_id: input_boolean.urlaubsmodus
    state: 'on'
  action:
  - wait_template: "{% set fenster = [\n            'binary_sensor.eve_contact_schlafzimmer_fenster_rechts',\n
      \           'binary_sensor.aqara_contact_balkontur_contact'\n            ] %}\n
      \         {% if fenster | select('is_state', 'on') | list | count > 0 %}\n            true\n
      \         {% else %}\n            false\n          {% endif %}"
    continue_on_timeout: false
  - if:
    - condition: state
      entity_id: input_boolean.nicht_storen
      state: 'off'
    then:
    - service: notify.home_ai
      metadata: {}
      data:
        message: Es sieht so aus, als wären noch eines oder mehrere Fenster offen.
          Prüfe doch mal nach, welche das sein könnten und schließe sie gegebenenfalls
          bevor du gehst.
        title: Es sind noch Fenster offen
  - service: notify.alexa_media_echo_flur
    metadata: {}
    data:
      message: Es sieht so aus, als wären noch eines oder mehrere Fenster offen. Prüfe
        doch mal nach, welche das sein könnten und schließe sie gegebenenfalls bevor
        du gehst.
  mode: single
- id: '1713209575955'
  alias: Run Chores
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: readme.generate
    data: {}
  - service: shell_command.run_chores
    data: {}
    response_variable: backup_response
  mode: single
- id: '1713209693062'
  alias: Admin - Watchman
  description: ''
  trigger:
  - platform: time_pattern
    hours: '3'
  condition: []
  action:
  - service: watchman.report
    metadata: {}
    data:
      create_file: true
      parse_config: true
  mode: single
- id: database_repack
  alias: System - Database Repack (Weekly)
  description: ''
  trigger:
  - platform: time
    at: 02:00
  condition:
  - condition: time
    weekday:
    - sun
    - tue
    - thu
  action:
  - service: recorder.purge
    data:
      apply_filter: true
      repack: true
  mode: single
- id: '1713210053705'
  alias: '[HA] Update Groups Automatically'
  description: ''
  trigger:
  - platform: homeassistant
    id: startup
    event: start
  - platform: state
    entity_id: input_boolean.ha_startup_pending
    to: 'off'
  - platform: event
    event_type: call_service
    event_data:
      domain: group
      service: reload
  - platform: time_pattern
    minutes: /15
  action:
  - if:
    - condition: template
      value_template: '{{ trigger.id == ''startup'' }}'
    then:
    - delay: 240
  - service: group.set
    data_template:
      object_id: battery_devices
      name: '[Group] Battery Devices'
      icon: mdi:battery
      entities: "{%-\n  for state in states.sensor\n    if is_state_attr(state.entity_id,
        'device_class', 'battery') and\n    (state.entity_id.endswith(\"_battery\")
        or state.entity_id.endswith(\"_power\"))\n%} {{ state.entity_id }}{%- if not
        loop.last -%}, {%- endif -%} {%- endfor %}"
  - service: group.set
    data_template:
      object_id: media_players
      name: '[Group] Media Players'
      icon: mdi:media-network
      entities: '{{ states.media_player|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data:
      object_id: lights
      name: '[Group] Lights'
      icon: mdi:lamps
      entities: "{{ states.light\n    |map(attribute='entity_id')|list|sort }}\n"
  - service: group.set
    data_template:
      object_id: automations
      name: '[Group] Automations'
      icon: mdi:home-automation
      entities: '{{ states.automation|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data_template:
      object_id: remotes
      name: '[Group] Remotes'
      icon: mdi:remote
      entities: '{{ states.remote|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data_template:
      object_id: scripts
      name: '[Group] Scripts'
      icon: mdi:script
      entities: '{{ states.script|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data_template:
      object_id: switches
      name: '[Group] Switches'
      icon: mdi:script
      entities: '{{ states.switch|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data_template:
      object_id: calendars
      name: '[Group] Calendars'
      icon: mdi:calendar
      entities: '{{ states.calendar|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data_template:
      object_id: geo_location
      name: '[Group] Geo Locations'
      icon: mdi:map-marker-alert
      entities: '{{ states.geo_location|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data_template:
      object_id: weather
      name: '[Group] Weather'
      icon: mdi:weather-cloudy-clock
      entities: '{{ states.weather|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data_template:
      object_id: people
      name: '[Group] People'
      icon: mdi:account-group
      entities: '{{ states.person|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data_template:
      object_id: cameras
      name: '[Group] Cameras'
      icon: mdi:cctv
      entities: '{{ states.camera|map(attribute=''entity_id'')|list|sort }}'
  - service: group.set
    data:
      object_id: alert_controls
      name: '[Group] Alert Controls'
      icon: mdi:alert-decagram
      entities: "{{ states\n    |selectattr('entity_id','search','input_boolean.alerts_*')\n
        \   |map(attribute='entity_id')|list|sort }}\n"
  - service: group.set
    data:
      object_id: alert_monitors
      name: '[Group] Alert Monitors'
      icon: mdi:alert-decagram
      entities: "{{ states\n    |selectattr('entity_id','search','binary_sensor.alerts_*')\n
        \   |map(attribute='entity_id')|list|sort }}\n"
  - service: group.set
    data:
      object_id: alerts
      name: '[Group] Alerts'
      icon: mdi:alert-decagram
      entities: "{{ states.alert\n    |map(attribute='entity_id')|list|sort }}\n"
  - service: group.set
    data:
      object_id: connectivity_monitors
      name: '[Group] Connectivity Monitors'
      icon: mdi:connection
      entities: "{{ states\n    |selectattr('entity_id','search','binary_sensor.connected_*')\n
        \   |map(attribute='entity_id')|list|sort }}\n"
  - service: group.set
    data:
      object_id: waqi
      name: '[Group] WAQI'
      icon: mdi:smog
      entities: "{{ states\n  |selectattr('entity_id','search','waqi*')\n  |rejectattr('entity_id','search','alert*')\n
        \ |rejectattr('entity_id','search','group*')\n  |map(attribute='entity_id')|list|sort
        }}\n"
  - service: group.set
    data:
      object_id: updates_homeassistant
      name: '[Updates] Home Assistant'
      icon: mdi:home-assistant
      entities: "{{expand(integration_entities('Supervisor'))\n  |selectattr('domain',
        'eq', 'update')\n  |map(attribute='entity_id')\n  |list|sort }}\n"
  - service: group.set
    data:
      object_id: updates_hacs
      name: '[Updates] HA Community Store'
      icon: mdi:home-assistant
      entities: "{{expand(integration_entities('hacs'))\n  |selectattr('domain', 'eq',
        'update')\n  |map(attribute='entity_id')\n  |list|sort }}\n"
  - service: group.set
    data:
      object_id: updates_zigbee2mqtt
      name: '[Updates] Zigbee2MQTT'
      icon: mdi:zigbee
      entities: "{{states.update\n  |selectattr('entity_id', 'search', 'z2m')\n  |map(attribute='entity_id')\n
        \ |list|sort }}\n"
  - service: group.set
    data:
      object_id: updates_other
      name: '[Updates] Other'
      icon: mdi:update
      entities: "{{states.update\n  |rejectattr('entity_id', 'search', 'wud')\n  |rejectattr('entity_id',
        'search', 'z2m')\n  |rejectattr('entity_id', 'in', expand(integration_entities('hacs'))|map(attribute='entity_id')|list)\n
        \ |rejectattr('entity_id', 'in', expand(integration_entities('Supervisor'))|map(attribute='entity_id')|list)\n
        \ |rejectattr('entity_id', 'in', expand(integration_entities('unifi'))|map(attribute='entity_id')|list)\n
        \ |map(attribute='entity_id')\n  |list|sort }}\n"
  - service: group.set
    data:
      object_id: rssfeeds
      name: '[Group] RSS Feeds'
      icon: mdi:rss-box
      entities: "{{ states\n  |selectattr('entity_id','search','rssfeed_')\n  |map(attribute='entity_id')\n
        \ |list|sort }}\n"
  - service: group.set
    data:
      object_id: addon_switch
      name: '[Group] Add-on Switches'
      icon: mdi:toggle-switch
      entities: "{{ states\n    |selectattr('entity_id','search','switch.addon_*')\n
        \   |map(attribute='entity_id')|list|sort }}\n"
  mode: restart
- id: '1713259440389'
  alias: Dashboard Küche
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.hlk_kuche_belegung
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: hlkKuecheOn
  - platform: state
    entity_id:
    - binary_sensor.hlk_kuche_belegung
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 3
    id: hlkKuecheOff
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - hlkKuecheOn
      sequence:
      - service: media_player.volume_mute
        target:
          device_id: aaa0eae9a416510075db748a0b6262dc
        data:
          is_volume_muted: true
      - service: cast.show_lovelace_view
        data:
          entity_id: media_player.nest_kuche
          dashboard_path: dashboard-kuche
          view_path: '0'
    - conditions:
      - condition: trigger
        id:
        - hlkKuecheOff
      sequence:
      - service: media_player.turn_off
        target:
          entity_id: media_player.nest_kuche
        data: {}
      - service: media_player.volume_mute
        target:
          device_id: aaa0eae9a416510075db748a0b6262dc
        data:
          is_volume_muted: false
  mode: single
- id: '1713443188220'
  alias: '[Admin] Zigbee2MQTT Restart Nightly'
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: script.1699263855216
    metadata: {}
    data: {}
  mode: single
- id: '1713444406391'
  alias: 'Motion: Schlafzimmer Steckdosen An'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 7166fbfe0af7d53d4673741c96c3863d
    entity_id: 94bfc27f3b165fc352e2cc04541190d1
    domain: binary_sensor
  condition:
  - condition: time
    after: '21:00:00'
    weekday:
    - mon
    - fri
    - sat
    - sun
    - tue
    - wed
    - thu
    before: 00:00:00
  action:
  - if:
    - condition: state
      entity_id: switch.steckdose_bett
      state: 'off'
    - condition: state
      entity_id: switch.steckdose_tv_schlafzimmer
      state: 'off'
    then:
    - parallel:
      - type: turn_on
        device_id: cee4b3caf72c6c64e4cf9115e5ad0c40
        entity_id: 82f42d86b638d5bf6c7b3f54ee19ac1a
        domain: switch
      - type: turn_on
        device_id: 687585a826f140c103f447d4384f11a8
        entity_id: 107487a20fd417d6c27308fc10f3df40
        domain: switch
  mode: single
- id: '1713444564715'
  alias: Steckdosen Schlafzimmer Morgens Aus
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
  condition: []
  action:
  - parallel:
    - type: turn_off
      device_id: cee4b3caf72c6c64e4cf9115e5ad0c40
      entity_id: 82f42d86b638d5bf6c7b3f54ee19ac1a
      domain: switch
    - type: turn_off
      device_id: 687585a826f140c103f447d4384f11a8
      entity_id: 107487a20fd417d6c27308fc10f3df40
      domain: switch
  mode: single
- id: '1713448133488'
  alias: Schalter Flur Deckenlicht
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 0bd3a8ef3dbdde3611e8f7f2b0d33f35
    entity_id: e121bb409464ba167ad31f9375490156
    domain: switch
    id: schalterFlurAn
  - platform: device
    type: turned_off
    device_id: 0bd3a8ef3dbdde3611e8f7f2b0d33f35
    entity_id: e121bb409464ba167ad31f9375490156
    domain: switch
    id: schalterFlurAus
  - platform: device
    type: turned_off
    device_id: 4b04528f90d6106276926f279e2d4cb6
    entity_id: 95eab0e0f096de60d69cc6204752c455
    domain: light
    id: deckeFlurAus
  - platform: device
    type: turned_on
    device_id: 4b04528f90d6106276926f279e2d4cb6
    entity_id: 95eab0e0f096de60d69cc6204752c455
    domain: light
    id: deckeFlurAn
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - schalterFlurAn
      sequence:
      - type: turn_on
        device_id: 4b04528f90d6106276926f279e2d4cb6
        entity_id: 95eab0e0f096de60d69cc6204752c455
        domain: light
    - conditions:
      - condition: trigger
        id:
        - schalterFlurAus
      sequence:
      - type: turn_off
        device_id: 4b04528f90d6106276926f279e2d4cb6
        entity_id: 95eab0e0f096de60d69cc6204752c455
        domain: light
    - conditions:
      - condition: trigger
        id:
        - deckeFlurAus
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.flur_schalter_decke
        data: {}
    - conditions:
      - condition: trigger
        id:
        - deckeFlurAn
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.flur_schalter_decke
        data: {}
  mode: single
- id: '1713785658342'
  alias: ESPHome Auto-Update
  description: ''
  trigger:
  - platform: template
    value_template: '{{ integration_entities(''esphome'') | select(''match'', ''^update.'')
      | select(''is_state'', ''on'') | list | count > 0 }}'
  condition: []
  action:
  - service: script.esphome_update_all_devices
    metadata: {}
    data: {}
  mode: single
- id: '1713867813081'
  alias: Starte WELT Livestream morgens
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.aqara_fp2_presence_couch
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition:
  - condition: and
    conditions:
    - condition: time
      after: 07:00:00
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      before: 09:00:00
    - condition: numeric_state
      entity_id: sensor.people_home
      above: 0
    - condition: state
      entity_id: input_boolean.nachrichten
      state: 'on'
    enabled: true
  action:
  - type: turn_on
    device_id: d30e5e22fdee4494285af01c47713091
    entity_id: 05785b4428b8cdd9ff015195221899c8
    domain: switch
  - service: rest_command.start_welt_stream
    metadata: {}
    data: {}
    enabled: true
  - service: script.power_wohnzimmer
    metadata: {}
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: media_player.play_media
    target:
      device_id: 67feb204d2fca3cfd31e143defa33fe5
    data:
      media_content_type: url
      media_content_id: '{{ states(''input_text.latest_welt_stream'') }}'
  mode: single
- id: '1713885934064'
  alias: Schalter Flur Nuki
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 0bd3a8ef3dbdde3611e8f7f2b0d33f35
    entity_id: 55c2f5c9869bcfbeac0ed4d2dfbc4567
    domain: switch
    id: nukiAutoUnlockOn
  - platform: device
    type: turned_off
    device_id: 0bd3a8ef3dbdde3611e8f7f2b0d33f35
    entity_id: 55c2f5c9869bcfbeac0ed4d2dfbc4567
    domain: switch
    id: nukiAutoUnlockOff
  - platform: state
    entity_id:
    - switch.nuki_haustur_continuous_mode
    from: 'off'
    to: 'on'
    id: nukiOn
  - platform: state
    entity_id:
    - switch.nuki_haustur_continuous_mode
    from: 'on'
    to: 'off'
    id: nukiOff
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - nukiAutoUnlockOn
      sequence:
      - service: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - switch.nuki_haustur_continuous_mode
        enabled: true
      - service: notify.alexa_media_echo_flur
        metadata: {}
        data:
          message: '{{ [ "Bis gleich!", "Bis gleich dann!", "Sehen uns gleich!", "Gleich
            sehen wir uns!", "Bis gleich, in ein paar Minuten!", "Bis gleich, freue
            mich!", "Bin bald bei dir, bis gleich!", "Wir sehen uns gleich wieder!",
            "Nur noch kurz, bis gleich!", "Bis gleich, nicht weglaufen!", "Bis gleich,
            halte die Stellung!", "Wir treffen uns gleich, bis dahin!", "Bis gleich,
            mach''s gut!", "Bis gleich, ich beeile mich!", "Gleich bin ich zurück,
            bis gleich!", "Sehen uns gleich, halt die Ohren steif!", "Bis gleich,
            lass dich nicht unterkriegen!", "Bis gleich, das wird super!", "Gleich
            sind wir wieder zusammen, bis gleich!", "Bis gleich, ich zähle die Minuten!",
            "Bis gleich, halt alles bereit!", "Bis gleich, ich freu mich schon!" ]
            | random }}'
    - conditions:
      - condition: trigger
        id:
        - nukiAutoUnlockOff
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.nuki_haustur_continuous_mode
        data: {}
      - service: notify.alexa_media_echo_flur
        data:
          message: Auto-Unlock wurde abgeschaltet
    - conditions:
      - condition: trigger
        id:
        - nukiOn
      sequence:
      - type: turn_on
        device_id: 0bd3a8ef3dbdde3611e8f7f2b0d33f35
        entity_id: 55c2f5c9869bcfbeac0ed4d2dfbc4567
        domain: switch
    - conditions:
      - condition: trigger
        id:
        - nukiOff
      sequence:
      - type: turn_off
        device_id: 0bd3a8ef3dbdde3611e8f7f2b0d33f35
        entity_id: 55c2f5c9869bcfbeac0ed4d2dfbc4567
        domain: switch
  mode: single
- id: '1713893524835'
  alias: 'Quest 2: Akku bald leer'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.quest_2_battery_level
    below: 15
  condition:
  - condition: numeric_state
    entity_id: sensor.quest_2_battery_level
    below: 15
  action:
  - service: notify.home_ai
    metadata: {}
    data:
      title: "\U0001FAAB Deine Quest 2 ist bald leer"
      message: Es sieht so aus, als wäre der Akku deiner Quest 2 bald leer. Lad sie
        doch mal auf.
  mode: single
- id: '1713900000210'
  alias: Hue Sync Aus
  description: ''
  trigger:
  - platform: device
    device_id: 67feb204d2fca3cfd31e143defa33fe5
    domain: media_player
    entity_id: 65eb5f3b6dea80977e4668301f1db147
    type: turned_off
  - platform: device
    type: turned_off
    device_id: d30e5e22fdee4494285af01c47713091
    entity_id: 05785b4428b8cdd9ff015195221899c8
    domain: switch
  condition: []
  action:
  - parallel:
    - service: light.turn_off
      data: {}
      target:
        device_id:
        - 916ac0645e12fe77d93d9731956888e4
        - 8d09b3d2460d7b46609a435e034c3a59
        - 1e74380a353e5af91767df2483e266fe
        - 3d2124b0362a0b5d69b4f905ec8a36c5
        - f1b7043426d3c3b2f515c4c34a06a317
        - 39b956e7b743a4c9e1809961d0342e07
        - 0659143f2b330e1bc3ac9e03bc644351
        - 171cf6e6bd2c823a2a91c916b23b3e25
        - d181c5b405f8f05347e2d47b973e6f11
    - service: switch.turn_off
      target:
        entity_id: switch.sync_box_light_sync
      data: {}
  mode: single
- id: '1713949268424'
  alias: 'Person: Reload'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /2
  condition: []
  action:
  - service: person.reload
    data: {}
  mode: single
- id: '1715333709045'
  alias: Zigbee2MQTT Offline Devices
  description: ''
  use_blueprint:
    path: Mr-Groch/offline-notification-for-sensors-with-last_seen.yaml
    input:
      actions:
      - service: notify.home_ai
        data:
          message: '{{ sensors }}'
- id: '1715335009101'
  alias: Update all AWTRIX
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.blueforcer_awtrix3_neueste_version
    attribute: tag
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: awtrix_wohnzimmer/doupdate
  mode: single
- id: '1715336573998'
  alias: 'AWTRIX: Wohnzimmer Instagram Follower'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      retain: false
      qos: '0'
      topic: awtrix_wohnzimmer/custom/instagramfollower
      payload: '{"icon": "instagram", "text": "{{ states(''sensor.instagram_api'')}}
        Follower", "duration": 5 }'
  mode: single
- id: '1715339962526'
  alias: AWTRIX Solar Energy Monitor
  description: ''
  use_blueprint:
    path: fwartner/awtrix_solar.yaml
    input:
      awtrix:
      - d38bf268bb3c77086e7266ea05234aea
      power_source: sensor.shelly_bkw_power
      skip_if_zero_watts: true
      skip_during_night_hours: true
      night_starts_after_time: '22:00:00'
      night_ends_after_time: 07:00:00
- id: '1715340480884'
  alias: "AWTRIX Weather ⛈️ + Forecast + \U0001F315️"
  description: ''
  use_blueprint:
    path: blueforcer/flow_6RpwLAMGOlZ4.yaml
    input:
      awtrix:
      - d38bf268bb3c77086e7266ea05234aea
      forecast_var: weather.openweathermap
      forecast_temp_field: temperature
      current_temp_var: sensor.openweathermap_feels_like_temperature
      moon: sensor.moon_phase
      moon_rise_set: sensor.geolocation_moonrise
- id: '1715341229281'
  alias: 'AWTRIX: Speedtest'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: '0'
      retain: false
      topic: awtrix_wohnzimmer/custom/speedtest_down
      payload: '{"text":"Download speed is {{ states.sensor.speedtest_download.state}}  Mbp/s","icon":"download","pushIcon":0,"repeat":1,"textCase":2,"textOffset":33}'
  - service: mqtt.publish
    metadata: {}
    data:
      qos: '0'
      retain: false
      topic: awtrix_wohnzimmer/custom/speedtest_up
      payload: '{"text":"Upload speed is {{ states.sensor.speedtest_upload.state}}  Mbp/s","icon":"upload","pushIcon":0,"repeat":1,"textCase":2,"textOffset":33}'
  mode: single
- id: '1715341461660'
  alias: "Awtrix Spotify NowPlaying \U0001F3B9"
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.spotify_florian
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.spotify_florian
        state: playing
      - condition: state
        entity_id: media_player.spotify_florian
        attribute: media_content_type
        state: music
      sequence:
      - service: mqtt.publish
        data:
          qos: 0
          retain: false
          payload: "{\n  \"text\": \"{{ state_attr('media_player.spotify_florian',
            'media_artist') }} - {{ state_attr('media_player.spotify_florian', 'media_title')
            }}\",\n  \"icon\": \"647\",\n  \"rainbow\": true,\n  \"repeat\": 2,\n
            \ \"pushIcon\": 0,\n  \"textCase\": 0,\n  \"textOffset\": 15,\n  \"progress\":
            {{ ( states.media_player.spotify_florian.attributes.media_position / states.media_player.spotify_florian.attributes.media_duration
            * 100 ) | round() }},\n  \"progressC\": \"18B04C\"\n}"
          topic: awtrix_wohnzimmer/custom/spotify
    - conditions:
      - condition: template
        value_template: '{{ not states.media_player.spotify_florian.state == ''playing''
          }}'
      sequence:
      - service: mqtt.publish
        data:
          qos: 0
          retain: false
          topic: awtrix_wohnzimmer/custom/spotify
- id: 90a76832-88a6-4da3-94f6-975154c297ff
  alias: Update OpenUV every 59 minutes during the daytime
  description: ''
  trigger:
  - minutes: 59
    platform: time_pattern
  condition:
  - after: sunrise
    before: sunset
    condition: sun
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id:
      - sensor.openuv_aktueller_uv_index
      - binary_sensor.openuv_schutzfenster
- id: '1716151253982'
  alias: 'OpenUV: Reload'
  description: ''
  trigger:
  - platform: time_pattern
    hours: /12
  condition:
  - after: sunrise
    before: sunset
    condition: sun
  action:
  - service: homeassistant.update_entity
    target:
      entity_id:
      - binary_sensor.openuv_schutzfenster
      - sensor.openuv_aktueller_uv_index
      - sensor.openuv_aktueller_uv_wert
    data: {}
  mode: single
- id: '1716668889277'
  alias: Toggle Abend / Morgen
  description: ''
  trigger:
  - platform: time
    at: '20:00:00'
    id: eveningOn
  - platform: time
    at: 06:00:00
    id: eveningOff
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - eveningOn
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.abend
        data: {}
    - conditions:
      - condition: trigger
        id:
        - eveningOff
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.abend
        data: {}
  mode: single
- id: '1717147835711'
  alias: Doubletake Florian
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.double_take_florian
  - platform: state
    entity_id: sensor.double_take_unknown
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
    - condition: numeric_state
      entity_id: sensor.people_home
      below: 1
  action:
  - service: notify.home_ai
    data:
      message: "{% if trigger.to_state.attributes.match is defined %}\n  {{trigger.to_state.attributes.friendly_name}}
        is near the {{trigger.to_state.state}} @ {{trigger.to_state.attributes.match.confidence}}%
        by {{trigger.to_state.attributes.match.detector}}:{{trigger.to_state.attributes.match.type}}
        taking {{trigger.to_state.attributes.attempts}} attempt(s) @ {{trigger.to_state.attributes.duration}}
        sec\n{% elif trigger.to_state.attributes.unknown is defined %}\n  unknown
        is near the {{trigger.to_state.state}} @ {{trigger.to_state.attributes.unknown.confidence}}%
        by {{trigger.to_state.attributes.unknown.detector}}:{{trigger.to_state.attributes.unknown.type}}
        taking {{trigger.to_state.attributes.attempts}} attempt(s) @ {{trigger.to_state.attributes.duration}}
        sec\n{% endif %}"
      data:
        attachment:
          url: "{% if trigger.to_state.attributes.match is defined %}\n  https://doubletake.wartner.cloud/api/storage/matches/{{trigger.to_state.attributes.match.filename}}?box=true&token={{trigger.to_state.attributes.token}}\n{%
            elif trigger.to_state.attributes.unknown is defined %}\n   https://doubletake.wartner.cloud/api/storage/matches/{{trigger.to_state.attributes.unknown.filename}}?box=true&token={{trigger.to_state.attributes.token}}\n{%
            endif %}"
        actions:
        - action: URI
          title: View Image
          uri: "{% if trigger.to_state.attributes.match is defined %}\n  https://doubletake.wartner.cloud/api/storage/matches/{{trigger.to_state.attributes.match.filename}}?box=true&token={{trigger.to_state.attributes.token}}\n{%
            elif trigger.to_state.attributes.unknown is defined %}\n   https://doubletake.wartner.cloud/api/storage/matches/{{trigger.to_state.attributes.unknown.filename}}?box=true&token={{trigger.to_state.attributes.token}}\n{%
            endif %}"
  mode: parallel
  max: 10
- id: '1717347835711'
  alias: '[HA] Shutdown'
  description: ''
  trigger:
  - platform: homeassistant
    event: shutdown
  action:
  - service: system_log.write
    data:
      logger: '{{ this.entity_id }}

        '
      level: critical
      message: '**** HOME ASSISTANT STOP ****'
  - if:
    - condition: state
      entity_id: input_boolean.alerts_ha
      state: 'on'
    then:
    - service: notify.mobile_app_iphone_von_florian
      data:
        message: Home Assistant has Stopped
        title: Home Assistant Stopped
        data:
          push:
            badge: 1
            sound: none
            interruption-level: time-sensitive
          presentation_options:
          - alert
          - badge
- id: '1717147845711'
  alias: '[HA] Startup'
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: system_log.write
    data:
      logger: '{{ this.entity_id }}'
      level: critical
      message: '**** HOME ASSISTANT START ****'
  - service: persistent_notification.create
    data:
      title: Automation Startup
      message: Waiting for startup to complete.
      notification_id: hass_restart
  - service: input_boolean.turn_off
    entity_id: input_boolean.ha_startup_pending
  - service: persistent_notification.create
    data:
      title: Home Assistant Started
      message: HA started at {{ now().strftime('%-I:%M %p') }}.
      notification_id: hass_restart
  - if:
    - condition: state
      entity_id: input_boolean.alerts_ha
      state: 'on'
    then:
    - service: notify.mobile_app_iphone_von_florian
      data:
        message: HA started at {{ now().strftime('%-I:%M %p') }}.
        title: Home Assistant Started
        data:
          push:
            badge: 1
            sound: none
            interruption-level: time-sensitive
          presentation_options:
          - alert
          - badge
  - service: persistent_notification.dismiss
    data:
      notification_id: hass_restart
  - service: system_log.write
    data:
      logger: '{{ this.entity_id }}'
      level: critical
      message: '**** HOME ASSISTANT STARTUP COMPLETE ****'
- id: '1717147815711'
  alias: '[Zigbee2MQTT] Enable Z2M Join'
  description: ''
  trigger:
    platform: state
    entity_id: input_boolean.z2m_permit_join
    to: 'on'
  action:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/bridge/config/permit_join
      payload: 'true'
  - service: timer.start
    data:
      entity_id: timer.z2m_permit_join
- id: z2m_disable_join_timer
  alias: '[Zigbee2MQTT] Disable Z2M Join (By Timer)'
  description: ''
  trigger:
  - platform: event
    event_type: timer.z2m_permit_join
    event_data:
      entity_id: timer.z2m_permit_join
  action:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/bridge/config/permit_join
      payload: 'false'
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.z2m_permit_join
- id: '1717147845731'
  alias: '[Zigbee2MQTT] Disable Z2M Join'
  description: ''
  trigger:
    platform: state
    entity_id: input_boolean.z2m_permit_join
    to: 'off'
  action:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/bridge/config/permit_join
      payload: 'false'
  - service: timer.cancel
    data:
      entity_id: timer.z2m_permit_join
- id: '1718549422662'
  alias: '[NFC Tag] Staubsauger Wassertank'
  description: ''
  trigger:
  - platform: tag
    tag_id: staubsauger_wassertank
  condition: []
  action:
  - service: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.staubsauger_wassertank
  mode: single
- id: '1718549485698'
  alias: '[NFC Tag] Waschmaschinentabs'
  description: ''
  trigger:
  - platform: tag
    tag_id: waschmaschinentabs
  condition: []
  action:
  - service: counter.decrement
    target:
      entity_id:
      - counter.waschmaschinentabs
    data: {}
  mode: single
- id: '1718550615267'
  alias: '[NFC Tag] Waschmaschinentabs'
  description: ''
  trigger:
  - platform: tag
    tag_id: waschmaschinentabs
  condition: []
  action:
  - service: input_number.decrement
    metadata: {}
    data: {}
    target:
      entity_id: input_number.waschmaschinentabs
  mode: single
- id: '1718550657718'
  alias: '[NFC Tag] Spülmaschinentabs'
  description: ''
  trigger:
  - platform: tag
    tag_id: spuelmaschinentabs
  condition: []
  action:
  - service: input_number.decrement
    metadata: {}
    data: {}
    target:
      entity_id: input_number.spulmaschinentabs
  mode: single
- id: '1718551651013'
  alias: Tabs bald leer
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - input_number.waschmaschinentabs
    below: 5
    id: waschmaschinenTabsCounterLow
  - platform: numeric_state
    entity_id:
    - input_number.spulmaschinentabs
    below: 5
    id: spuelmaschinenTabsCounterLow
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - waschmaschinenTabsCounterLow
      sequence:
      - service: todo.add_item
        metadata: {}
        data:
          item: Waschmaschinentabs
        target:
          entity_id:
          - todo.einkaufsliste
      - service: notify.home_ai
        data:
          title: "\U0001F6D2 Waschmaschinentabs sind fast leer "
          message: Deine Waschmaschine hat bald keine Tabs mehr. Geh doch mal wieder
            welche einkaufen.
          data:
            actions:
            - action: URI
              title: Zur Einkaufsliste
              uri: /todo?entity_id=todo.einkaufsliste
    - conditions:
      - condition: trigger
        id:
        - spuelmaschinenTabsCounterLow
      sequence:
      - service: todo.add_item
        metadata: {}
        data:
          item: Spülmaschinentabs
        target:
          entity_id:
          - todo.einkaufsliste
      - service: notify.home_ai
        data:
          title: "\U0001F6D2 Spülmaschinentabs sind fast leer "
          message: Deine Spülmaschine hat bald keine Tabs mehr. Geh doch mal wieder
            welche einkaufen.
          data:
            actions:
            - action: URI
              title: Zur Einkaufsliste
              uri: /todo?entity_id=todo.einkaufsliste
  mode: single
- id: '1718561693469'
  alias: '[NFC Tag] Kaffeebohnen Einkaufsliste'
  description: ''
  trigger:
  - platform: tag
    tag_id: kaffeebohnen
  condition: []
  action:
  - service: todo.add_item
    metadata: {}
    data:
      item: Kaffeebohnen
    target:
      entity_id: todo.einkaufsliste
  mode: single
- id: '1718561731942'
  alias: '[NFC Tag] Spülmaschinentabs Einkaufsliste'
  description: ''
  trigger:
  - platform: tag
    tag_id: spuelmaschinentabs
  condition: []
  action:
  - service: todo.add_item
    metadata: {}
    data:
      item: Spülmaschinentabs
    target:
      entity_id: todo.einkaufsliste
  mode: single
- id: '1718561772346'
  alias: '[NFC Tag] Waschmaschinentabs Einkaufsliste'
  description: ''
  trigger:
  - platform: tag
    tag_id: waschmaschinentabs
  condition: []
  action:
  - service: todo.add_item
    metadata: {}
    data:
      item: Waschmaschinentabs
    target:
      entity_id: todo.einkaufsliste
  mode: single
- id: '1718562692032'
  alias: '[NFC Tag] Staubsauger Wassertank nachgefüllt'
  description: ''
  trigger:
  - platform: tag
    tag_id: staubsauger_wassertank
  condition: []
  action:
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.wassertank_aufgefullt
    data:
      date: '{{ states(''sensor.date'') }}'
  mode: single
- id: '1718565264616'
  alias: Klo Besetzt
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.aqara_vibrate_katzenklo_angle_y
    id: kloAn
    below: -5
  - platform: numeric_state
    entity_id:
    - sensor.aqara_vibrate_katzenklo_angle_y
    id: kloAus
    above: -5
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - kloAn
      sequence:
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.klo_besetzt
      - service: counter.increment
        metadata: {}
        data: {}
        target:
          entity_id: counter.toiletten_sitzungen
    - conditions:
      - condition: trigger
        id:
        - kloAus
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.klo_besetzt
  mode: single
- id: '1718614598599'
  alias: Process and Notify
  description: ''
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: notify
      service: home_ai
  condition: []
  action:
  - service: conversation.process
    metadata: {}
    data:
      text: 'Briefly tell me that my {{ trigger.event.data.service_data.message }}.
        Always make sure that the message fits into 2 sentences.

        '
      agent_id: conversation.chatgpt_assist
      language: german
    response_variable: generated_response
  - if:
    - condition: template
      value_template: '{{ trigger.event.data.service_data.data.actions != null }}'
    then:
    - service: notify.all_iphones
      metadata: {}
      data:
        message: '{{ generated_response.response.speech.plain.speech }}'
        title: '{{ trigger.event.data.service_data.title }}'
        data:
          actions: '{{ trigger.event.data.service_data.data.actions }}'
    else:
    - service: notify.all_iphones
      metadata: {}
      data:
        message: '{{ generated_response.response.speech.plain.speech }}'
        title: '{{ trigger.event.data.service_data.title }}'
  mode: single
- id: '1718794962925'
  alias: NFC Tag Wohnungstür ist gescannt
  description: ''
  trigger:
  - platform: tag
    tag_id: 80174732-d4b2-4c77-9e71-a05ff997192a
  condition: []
  action:
  - service: lock.open
    metadata: {}
    data: {}
    target:
      device_id: bb8a84cf268277f3d38063aee6ce698e
  mode: single
- id: '1718794967135'
  alias: NFC Tag Wohnungstür ist gescannt
  description: ''
  trigger:
  - platform: tag
    tag_id: 80174732-d4b2-4c77-9e71-a05ff997192a
  condition: []
  action:
  - service: lock.open
    metadata: {}
    data: {}
    target:
      device_id: bb8a84cf268277f3d38063aee6ce698e
  mode: single
- id: '1718795112357'
  alias: NFC Tag Wohnungstür 2 ist gescannt
  description: ''
  trigger:
  - platform: tag
    tag_id: 404d5b6e-d798-418d-876c-912aa6c049c7
  condition: []
  action:
  - service: lock.open
    metadata: {}
    data: {}
    target:
      device_id: bb8a84cf268277f3d38063aee6ce698e
  mode: single
- id: '1718795119448'
  alias: NFC Tag Wohnungstür 2 ist gescannt
  description: ''
  trigger:
  - platform: tag
    tag_id: 404d5b6e-d798-418d-876c-912aa6c049c7
  condition: []
  action:
  - service: lock.open
    metadata: {}
    data: {}
    target:
      device_id: bb8a84cf268277f3d38063aee6ce698e
  mode: single
- id: '1718970747624'
  alias: Current Media Player Controls
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.current_media_player
    to:
    id: currentPlayerChange
  - platform: state
    entity_id:
    - input_button.play_pause
    to:
    enabled: true
    id: playPauseTrigger
  - platform: state
    entity_id:
    - input_button.next_track
    to:
    enabled: true
    id: nextTrigger
  - platform: state
    entity_id:
    - input_button.prev_track
    to:
    enabled: true
    id: prevTrigger
  - platform: state
    entity_id:
    - input_select.selected_media_player
    to: HomePod Wohnzimmer
    id: selectedPlayerHomePodTrigger
  - platform: state
    entity_id:
    - input_select.selected_media_player
    to: Sonos Ray Wohnzimmer
    id: selectedPlayerSonosRayTrigger
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - currentPlayerChange
      sequence:
      - service: input_text.set_value
        target:
          entity_id: input_text.last_media_player
        data:
          value: '{{ states(''sensor.current_media_player'') }}'
    - conditions:
      - condition: trigger
        id:
        - playPauseTrigger
      sequence:
      - service: media_player.media_play_pause
        metadata: {}
        data: {}
        target:
          entity_id: '{{ states(''input_text.last_media_player'') }}

            '
        enabled: true
    - conditions:
      - condition: trigger
        id:
        - nextTrigger
      sequence:
      - service: media_player.media_next_track
        metadata: {}
        data: {}
        target:
          entity_id: '{{ states(''input_text.last_media_player'') }}

            '
    - conditions:
      - condition: trigger
        id:
        - prevTrigger
      sequence:
      - service: media_player.media_previous_track
        data: {}
        target:
          entity_id: '{{ states(''input_text.last_media_player'') }}

            '
    - conditions:
      - condition: trigger
        id:
        - selectedPlayerHomePodTrigger
      sequence:
      - service: input_text.set_value
        target:
          entity_id: input_text.last_media_player
        data:
          value: media_player.homepod_wohnzimmer_ma
    - conditions:
      - condition: trigger
        id:
        - selectedPlayerSonosRayTrigger
      sequence:
      - service: input_text.set_value
        target:
          entity_id: input_text.last_media_player
        data:
          value: media_player.sonos_ray_wohnzimmer_ma
  mode: single
