blueprint:
  name: NSPanel Configuration
  description: '# NSPanel Configuration via Blueprint: Complete UI-Based Setup

    **Version**: v4.3.4


    This project enables comprehensive configuration of your NSPanel through a Blueprint
    featuring a user interface.


    **Documentation and Installation Video**: For detailed guidance on setup and usage,
    visit [NSPanel Configuration, Setup and HowTo](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/README.md).

    '
  source_url: https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/nspanel_blueprint.yaml
  domain: automation
  homeassistant:
    min_version: 2024.3.0
  input:
    nspanel_name:
      name: NSPanel device (REQUIRED)
      description: Please select the ESPHome device related to the NSPanel to be controlled
        by this automation.
      default: []
      selector:
        device:
          multiple: false
          filter:
          - integration: esphome
            model: esp32dev
          - integration: esphome
            model: NSPanel_HA_Blueprint
          - integration: esphome
            model: Wall_Display
    language:
      name: Language
      description: Select the language for your NSPanel.
      default: en
      selector:
        language:
          languages:
          - en
          - bg
          - hr
          - cs
          - da
          - nl
          - et
          - fi
          - fr
          - de
          - el
          - he
          - hu
          - id
          - it
          - ja
          - ko
          - lv
          - lt
          - nb
          - pl
          - pt
          - ro
          - ru
          - sk
          - sl
          - es
          - sv
          - tr
          - uk
          - zh-tw
          no_sort: false
          native_name: false
    date_format:
      name: Date Format
      description: Select the format for date to display.
      default: '%A, %d.%m'
      selector:
        select:
          multiple: false
          custom_value: true
          options:
          - label: Weekday, DD.MM (ex. "Friday, 22.03")
            value: '%A, %d.%m'
          - label: Weekday, DD/MM (ex. "Friday, 22/03")
            value: '%A, %d/%m'
          - label: Weekday, D/M (ex. "Friday, 22/3")
            value: '%A, %-d/%-m'
          - label: Weekday, M/D (ex. "Friday, 3/22")
            value: '%A, %-m/%-d'
          - label: Weekday D.M (ex. "Friday 22.3")
            value: '%A %-d.%-m'
          - label: Weekday D-M (ex. "Friday 22-3")
            value: '%A %-d-%-m'
          - label: Weekday M-D (ex. "Friday 3-22")
            value: '%A %-m-%-d'
          sort: false
    time_format:
      name: Time Format
      description: Choose how time should be displayed.
      default: '%H:%M'
      selector:
        select:
          multiple: false
          custom_value: true
          options:
          - label: HH:MM (ex. 08:30 and 20:30)
            value: '%H:%M'
          - label: H:MM AM/PM (ex. 8:30AM and 8:30PM)
            value: '%-I:%M %p'
          - label: H:MM 24H (ex. 8:30 and 20:30)
            value: '%-H:%M'
          - label: H.MM 24H (ex. 8.30 and 20.30)
            value: '%-H.%M'
          sort: false
    timezone:
      name: Timezone
      description: Choose your timezone.
      default: ''
      selector:
        select:
          multiple: false
          custom_value: true
          options:
          - Africa/Abidjan (GMT0)
          - Africa/Accra (GMT0)
          - Africa/Addis_Ababa (EAT-3)
          - Africa/Algiers (CET-1)
          - Africa/Asmara (EAT-3)
          - Africa/Bamako (GMT0)
          - Africa/Bangui (WAT-1)
          - Africa/Banjul (GMT0)
          - Africa/Bissau (GMT0)
          - Africa/Blantyre (CAT-2)
          - Africa/Brazzaville (WAT-1)
          - Africa/Bujumbura (CAT-2)
          - Africa/Cairo (EET-2EEST,M4.5.5/0,M10.5.4/24)
          - Africa/Casablanca (<+01>-1)
          - Africa/Ceuta (CET-1CEST,M3.5.0,M10.5.0/3)
          - Africa/Conakry (GMT0)
          - Africa/Dakar (GMT0)
          - Africa/Dar_es_Salaam (EAT-3)
          - Africa/Djibouti (EAT-3)
          - Africa/Douala (WAT-1)
          - Africa/El_Aaiun (<+01>-1)
          - Africa/Freetown (GMT0)
          - Africa/Gaborone (CAT-2)
          - Africa/Harare (CAT-2)
          - Africa/Johannesburg (SAST-2)
          - Africa/Juba (CAT-2)
          - Africa/Kampala (EAT-3)
          - Africa/Khartoum (CAT-2)
          - Africa/Kigali (CAT-2)
          - Africa/Kinshasa (WAT-1)
          - Africa/Lagos (WAT-1)
          - Africa/Libreville (WAT-1)
          - Africa/Lome (GMT0)
          - Africa/Luanda (WAT-1)
          - Africa/Lubumbashi (CAT-2)
          - Africa/Lusaka (CAT-2)
          - Africa/Malabo (WAT-1)
          - Africa/Maputo (CAT-2)
          - Africa/Maseru (SAST-2)
          - Africa/Mbabane (SAST-2)
          - Africa/Mogadishu (EAT-3)
          - Africa/Monrovia (GMT0)
          - Africa/Nairobi (EAT-3)
          - Africa/Ndjamena (WAT-1)
          - Africa/Niamey (WAT-1)
          - Africa/Nouakchott (GMT0)
          - Africa/Ouagadougou (GMT0)
          - Africa/Porto-Novo (WAT-1)
          - Africa/Sao_Tome (GMT0)
          - Africa/Tripoli (EET-2)
          - Africa/Tunis (CET-1)
          - Africa/Windhoek (CAT-2)
          - America/Adak (HST10HDT,M3.2.0,M11.1.0)
          - America/Anchorage (AKST9AKDT,M3.2.0,M11.1.0)
          - America/Anguilla (AST4)
          - America/Antigua (AST4)
          - America/Araguaina (<-03>3)
          - America/Argentina/Buenos_Aires (<-03>3)
          - America/Argentina/Catamarca (<-03>3)
          - America/Argentina/Cordoba (<-03>3)
          - America/Argentina/Jujuy (<-03>3)
          - America/Argentina/La_Rioja (<-03>3)
          - America/Argentina/Mendoza (<-03>3)
          - America/Argentina/Rio_Gallegos (<-03>3)
          - America/Argentina/Salta (<-03>3)
          - America/Argentina/San_Juan (<-03>3)
          - America/Argentina/San_Luis (<-03>3)
          - America/Argentina/Tucuman (<-03>3)
          - America/Argentina/Ushuaia (<-03>3)
          - America/Aruba (AST4)
          - America/Asuncion (<-04>4<-03>,M10.1.0/0,M3.4.0/0)
          - America/Atikokan (EST5)
          - America/Bahia (<-03>3)
          - America/Bahia_Banderas (CST6)
          - America/Barbados (AST4)
          - America/Belem (<-03>3)
          - America/Belize (CST6)
          - America/Blanc-Sablon (AST4)
          - America/Boa_Vista (<-04>4)
          - America/Bogota (<-05>5)
          - America/Boise (MST7MDT,M3.2.0,M11.1.0)
          - America/Cambridge_Bay (MST7MDT,M3.2.0,M11.1.0)
          - America/Campo_Grande (<-04>4)
          - America/Cancun (EST5)
          - America/Caracas (<-04>4)
          - America/Cayenne (<-03>3)
          - America/Cayman (EST5)
          - America/Chicago (CST6CDT,M3.2.0,M11.1.0)
          - America/Chihuahua (CST6)
          - America/Ciudad_Juarez (MST7MDT,M3.2.0,M11.1.0)
          - America/Costa_Rica (CST6)
          - America/Creston (MST7)
          - America/Cuiaba (<-04>4)
          - America/Curacao (AST4)
          - America/Danmarkshavn (GMT0)
          - America/Dawson (MST7)
          - America/Dawson_Creek (MST7)
          - America/Denver (MST7MDT,M3.2.0,M11.1.0)
          - America/Detroit (EST5EDT,M3.2.0,M11.1.0)
          - America/Dominica (AST4)
          - America/Edmonton (MST7MDT,M3.2.0,M11.1.0)
          - America/Eirunepe (<-05>5)
          - America/El_Salvador (CST6)
          - America/Fort_Nelson (MST7)
          - America/Fortaleza (<-03>3)
          - America/Glace_Bay (AST4ADT,M3.2.0,M11.1.0)
          - America/Goose_Bay (AST4ADT,M3.2.0,M11.1.0)
          - America/Grand_Turk (EST5EDT,M3.2.0,M11.1.0)
          - America/Grenada (AST4)
          - America/Guadeloupe (AST4)
          - America/Guatemala (CST6)
          - America/Guayaquil (<-05>5)
          - America/Guyana (<-04>4)
          - America/Halifax (AST4ADT,M3.2.0,M11.1.0)
          - America/Havana (CST5CDT,M3.2.0/0,M11.1.0/1)
          - America/Hermosillo (MST7)
          - America/Indiana/Indianapolis (EST5EDT,M3.2.0,M11.1.0)
          - America/Indiana/Knox (CST6CDT,M3.2.0,M11.1.0)
          - America/Indiana/Marengo (EST5EDT,M3.2.0,M11.1.0)
          - America/Indiana/Petersburg (EST5EDT,M3.2.0,M11.1.0)
          - America/Indiana/Tell_City (CST6CDT,M3.2.0,M11.1.0)
          - America/Indiana/Vevay (EST5EDT,M3.2.0,M11.1.0)
          - America/Indiana/Vincennes (EST5EDT,M3.2.0,M11.1.0)
          - America/Indiana/Winamac (EST5EDT,M3.2.0,M11.1.0)
          - America/Inuvik (MST7MDT,M3.2.0,M11.1.0)
          - America/Iqaluit (EST5EDT,M3.2.0,M11.1.0)
          - America/Jamaica (EST5)
          - America/Juneau (AKST9AKDT,M3.2.0,M11.1.0)
          - America/Kentucky/Louisville (EST5EDT,M3.2.0,M11.1.0)
          - America/Kentucky/Monticello (EST5EDT,M3.2.0,M11.1.0)
          - America/La_Paz (<-04>4)
          - America/Lima (<-05>5)
          - America/Los_Angeles (PST8PDT,M3.2.0,M11.1.0)
          - America/Maceio (<-03>3)
          - America/Managua (CST6)
          - America/Manaus (<-04>4)
          - America/Martinique (AST4)
          - America/Matamoros (CST6CDT,M3.2.0,M11.1.0)
          - America/Mazatlan (MST7)
          - America/Menominee (CST6CDT,M3.2.0,M11.1.0)
          - America/Merida (CST6)
          - America/Metlakatla (AKST9AKDT,M3.2.0,M11.1.0)
          - America/Mexico_City (CST6)
          - America/Miquelon (<-03>3<-02>,M3.2.0,M11.1.0)
          - America/Moncton (AST4ADT,M3.2.0,M11.1.0)
          - America/Monterrey (CST6)
          - America/Montevideo (<-03>3)
          - America/Montserrat (AST4)
          - America/Nassau (EST5EDT,M3.2.0,M11.1.0)
          - America/New_York (EST5EDT,M3.2.0,M11.1.0)
          - America/Nome (AKST9AKDT,M3.2.0,M11.1.0)
          - America/Noronha (<-02>2)
          - America/North_Dakota/Beulah (CST6CDT,M3.2.0,M11.1.0)
          - America/North_Dakota/Center (CST6CDT,M3.2.0,M11.1.0)
          - America/North_Dakota/New_Salem (CST6CDT,M3.2.0,M11.1.0)
          - America/Nuuk (<-02>2<-01>,M3.5.0/-1,M10.5.0/0)
          - America/Ojinaga (CST6CDT,M3.2.0,M11.1.0)
          - America/Panama (EST5)
          - America/Paramaribo (<-03>3)
          - America/Phoenix (MST7)
          - America/Port-au-Prince (EST5EDT,M3.2.0,M11.1.0)
          - America/Port_of_Spain (AST4)
          - America/Porto_Velho (<-04>4)
          - America/Puerto_Rico (AST4)
          - America/Punta_Arenas (<-03>3)
          - America/Rankin_Inlet (CST6CDT,M3.2.0,M11.1.0)
          - America/Recife (<-03>3)
          - America/Regina (CST6)
          - America/Resolute (CST6CDT,M3.2.0,M11.1.0)
          - America/Rio_Branco (<-05>5)
          - America/Santarem (<-03>3)
          - America/Santiago (<-04>4<-03>,M9.1.6/24,M4.1.6/24)
          - America/Santo_Domingo (AST4)
          - America/Sao_Paulo (<-03>3)
          - America/Scoresbysund (<-02>2<-01>,M3.5.0/-1,M10.5.0/0)
          - America/Sitka (AKST9AKDT,M3.2.0,M11.1.0)
          - America/St_Johns (NST3:30NDT,M3.2.0,M11.1.0)
          - America/St_Kitts (AST4)
          - America/St_Lucia (AST4)
          - America/St_Thomas (AST4)
          - America/St_Vincent (AST4)
          - America/Swift_Current (CST6)
          - America/Tegucigalpa (CST6)
          - America/Thule (AST4ADT,M3.2.0,M11.1.0)
          - America/Tijuana (PST8PDT,M3.2.0,M11.1.0)
          - America/Toronto (EST5EDT,M3.2.0,M11.1.0)
          - America/Tortola (AST4)
          - America/Vancouver (PST8PDT,M3.2.0,M11.1.0)
          - America/Whitehorse (MST7)
          - America/Winnipeg (CST6CDT,M3.2.0,M11.1.0)
          - America/Yakutat (AKST9AKDT,M3.2.0,M11.1.0)
          - Antarctica/Casey (<+08>-8)
          - Antarctica/Davis (<+07>-7)
          - Antarctica/DumontDUrville (<+10>-10)
          - Antarctica/Macquarie (AEST-10AEDT,M10.1.0,M4.1.0/3)
          - Antarctica/Mawson (<+05>-5)
          - Antarctica/McMurdo (NZST-12NZDT,M9.5.0,M4.1.0/3)
          - Antarctica/Palmer (<-03>3)
          - Antarctica/Rothera (<-03>3)
          - Antarctica/Syowa (<+03>-3)
          - Antarctica/Troll (<+00>0<+02>-2,M3.5.0/1,M10.5.0/3)
          - Antarctica/Vostok (<+05>-5)
          - Asia/Aden (<+03>-3)
          - Asia/Almaty (<+05>-5)
          - Asia/Amman (<+03>-3)
          - Asia/Anadyr (<+12>-12)
          - Asia/Aqtau (<+05>-5)
          - Asia/Aqtobe (<+05>-5)
          - Asia/Ashgabat (<+05>-5)
          - Asia/Atyrau (<+05>-5)
          - Asia/Baghdad (<+03>-3)
          - Asia/Bahrain (<+03>-3)
          - Asia/Baku (<+04>-4)
          - Asia/Bangkok (<+07>-7)
          - Asia/Barnaul (<+07>-7)
          - Asia/Beirut (EET-2EEST,M3.5.0/0,M10.5.0/0)
          - Asia/Bishkek (<+06>-6)
          - Asia/Brunei (<+08>-8)
          - Asia/Chita (<+09>-9)
          - Asia/Choibalsan (<+08>-8)
          - Asia/Colombo (<+0530>-5:30)
          - Asia/Damascus (<+03>-3)
          - Asia/Dhaka (<+06>-6)
          - Asia/Dili (<+09>-9)
          - Asia/Dubai (<+04>-4)
          - Asia/Dushanbe (<+05>-5)
          - Asia/Famagusta (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Asia/Gaza (EET-2EEST,M3.4.4/50,M10.4.4/50)
          - Asia/Hebron (EET-2EEST,M3.4.4/50,M10.4.4/50)
          - Asia/Ho_Chi_Minh (<+07>-7)
          - Asia/Hong_Kong (HKT-8)
          - Asia/Hovd (<+07>-7)
          - Asia/Irkutsk (<+08>-8)
          - Asia/Jakarta (WIB-7)
          - Asia/Jayapura (WIT-9)
          - Asia/Jerusalem (IST-2IDT,M3.4.4/26,M10.5.0)
          - Asia/Kabul (<+0430>-4:30)
          - Asia/Kamchatka (<+12>-12)
          - Asia/Karachi (PKT-5)
          - Asia/Kathmandu (<+0545>-5:45)
          - Asia/Khandyga (<+09>-9)
          - Asia/Kolkata (IST-5:30)
          - Asia/Krasnoyarsk (<+07>-7)
          - Asia/Kuala_Lumpur (<+08>-8)
          - Asia/Kuching (<+08>-8)
          - Asia/Kuwait (<+03>-3)
          - Asia/Macau (CST-8)
          - Asia/Magadan (<+11>-11)
          - Asia/Makassar (WITA-8)
          - Asia/Manila (PST-8)
          - Asia/Muscat (<+04>-4)
          - Asia/Nicosia (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Asia/Novokuznetsk (<+07>-7)
          - Asia/Novosibirsk (<+07>-7)
          - Asia/Omsk (<+06>-6)
          - Asia/Oral (<+05>-5)
          - Asia/Phnom_Penh (<+07>-7)
          - Asia/Pontianak (WIB-7)
          - Asia/Pyongyang (KST-9)
          - Asia/Qatar (<+03>-3)
          - Asia/Qostanay (<+05>-5)
          - Asia/Qyzylorda (<+05>-5)
          - Asia/Riyadh (<+03>-3)
          - Asia/Sakhalin (<+11>-11)
          - Asia/Samarkand (<+05>-5)
          - Asia/Seoul (KST-9)
          - Asia/Shanghai (CST-8)
          - Asia/Singapore (<+08>-8)
          - Asia/Srednekolymsk (<+11>-11)
          - Asia/Taipei (CST-8)
          - Asia/Tashkent (<+05>-5)
          - Asia/Tbilisi (<+04>-4)
          - Asia/Tehran (<+0330>-3:30)
          - Asia/Thimphu (<+06>-6)
          - Asia/Tokyo (JST-9)
          - Asia/Tomsk (<+07>-7)
          - Asia/Ulaanbaatar (<+08>-8)
          - Asia/Urumqi (<+06>-6)
          - Asia/Ust-Nera (<+10>-10)
          - Asia/Vientiane (<+07>-7)
          - Asia/Vladivostok (<+10>-10)
          - Asia/Yakutsk (<+09>-9)
          - Asia/Yangon (<+0630>-6:30)
          - Asia/Yekaterinburg (<+05>-5)
          - Asia/Yerevan (<+04>-4)
          - Atlantic/Azores (<-01>1<+00>,M3.5.0/0,M10.5.0/1)
          - Atlantic/Bermuda (AST4ADT,M3.2.0,M11.1.0)
          - Atlantic/Canary (WET0WEST,M3.5.0/1,M10.5.0)
          - Atlantic/Cape_Verde (<-01>1)
          - Atlantic/Faroe (WET0WEST,M3.5.0/1,M10.5.0)
          - Atlantic/Madeira (WET0WEST,M3.5.0/1,M10.5.0)
          - Atlantic/Reykjavik (GMT0)
          - Atlantic/South_Georgia (<-02>2)
          - Atlantic/St_Helena (GMT0)
          - Atlantic/Stanley (<-03>3)
          - Australia/Adelaide (ACST-9:30ACDT,M10.1.0,M4.1.0/3)
          - Australia/Brisbane (AEST-10)
          - Australia/Broken_Hill (ACST-9:30ACDT,M10.1.0,M4.1.0/3)
          - Australia/Darwin (ACST-9:30)
          - Australia/Eucla (<+0845>-8:45)
          - Australia/Hobart (AEST-10AEDT,M10.1.0,M4.1.0/3)
          - Australia/Lindeman (AEST-10)
          - Australia/Lord_Howe (<+1030>-10:30<+11>-11,M10.1.0,M4.1.0)
          - Australia/Melbourne (AEST-10AEDT,M10.1.0,M4.1.0/3)
          - Australia/Perth (AWST-8)
          - Australia/Sydney (AEST-10AEDT,M10.1.0,M4.1.0/3)
          - Europe/Amsterdam (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Andorra (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Astrakhan (<+04>-4)
          - Europe/Athens (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Europe/Belgrade (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Berlin (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Brussels (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Bucharest (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Europe/Budapest (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Chisinau (EET-2EEST,M3.5.0,M10.5.0/3)
          - Europe/Copenhagen (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Dublin (IST-1GMT0,M10.5.0,M3.5.0/1)
          - Europe/Gibraltar (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Guernsey (GMT0BST,M3.5.0/1,M10.5.0)
          - Europe/Helsinki (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Europe/Isle_of_Man (GMT0BST,M3.5.0/1,M10.5.0)
          - Europe/Istanbul (<+03>-3)
          - Europe/Jersey (GMT0BST,M3.5.0/1,M10.5.0)
          - Europe/Kaliningrad (EET-2)
          - Europe/Kirov (MSK-3)
          - Europe/Kyiv (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Europe/Lisbon (WET0WEST,M3.5.0/1,M10.5.0)
          - Europe/Ljubljana (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/London (GMT0BST,M3.5.0/1,M10.5.0)
          - Europe/Luxembourg (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Madrid (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Malta (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Minsk (<+03>-3)
          - Europe/Monaco (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Moscow (MSK-3)
          - Europe/Oslo (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Paris (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Prague (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Riga (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Europe/Rome (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Samara (<+04>-4)
          - Europe/Sarajevo (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Saratov (<+04>-4)
          - Europe/Simferopol (MSK-3)
          - Europe/Skopje (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Sofia (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Europe/Stockholm (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Tallinn (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Europe/Tirane (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Ulyanovsk (<+04>-4)
          - Europe/Vaduz (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Vienna (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Vilnius (EET-2EEST,M3.5.0/3,M10.5.0/4)
          - Europe/Volgograd (MSK-3)
          - Europe/Warsaw (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Zagreb (CET-1CEST,M3.5.0,M10.5.0/3)
          - Europe/Zurich (CET-1CEST,M3.5.0,M10.5.0/3)
          - Indian/Antananarivo (EAT-3)
          - Indian/Chagos (<+06>-6)
          - Indian/Christmas (<+07>-7)
          - Indian/Cocos (<+0630>-6:30)
          - Indian/Comoro (EAT-3)
          - Indian/Kerguelen (<+05>-5)
          - Indian/Mahe (<+04>-4)
          - Indian/Maldives (<+05>-5)
          - Indian/Mauritius (<+04>-4)
          - Indian/Mayotte (EAT-3)
          - Indian/Reunion (<+04>-4)
          - Pacific/Apia (<+13>-13)
          - Pacific/Auckland (NZST-12NZDT,M9.5.0,M4.1.0/3)
          - Pacific/Bougainville (<+11>-11)
          - Pacific/Chatham (<+1245>-12:45<+1345>,M9.5.0/2:45,M4.1.0/3:45)
          - Pacific/Chuuk (<+10>-10)
          - Pacific/Easter (<-06>6<-05>,M9.1.6/22,M4.1.6/22)
          - Pacific/Efate (<+11>-11)
          - Pacific/Fakaofo (<+13>-13)
          - Pacific/Fiji (<+12>-12)
          - Pacific/Funafuti (<+12>-12)
          - Pacific/Galapagos (<-06>6)
          - Pacific/Gambier (<-09>9)
          - Pacific/Guadalcanal (<+11>-11)
          - Pacific/Guam (ChST-10)
          - Pacific/Honolulu (HST10)
          - Pacific/Kanton (<+13>-13)
          - Pacific/Kiritimati (<+14>-14)
          - Pacific/Kosrae (<+11>-11)
          - Pacific/Kwajalein (<+12>-12)
          - Pacific/Majuro (<+12>-12)
          - Pacific/Marquesas (<-0930>9:30)
          - Pacific/Midway (SST11)
          - Pacific/Nauru (<+12>-12)
          - Pacific/Niue (<-11>11)
          - Pacific/Norfolk (<+11>-11<+12>,M10.1.0,M4.1.0/3)
          - Pacific/Noumea (<+11>-11)
          - Pacific/Pago_Pago (SST11)
          - Pacific/Palau (<+09>-9)
          - Pacific/Pitcairn (<-08>8)
          - Pacific/Pohnpei (<+11>-11)
          - Pacific/Port_Moresby (<+10>-10)
          - Pacific/Rarotonga (<-10>10)
          - Pacific/Saipan (ChST-10)
          - Pacific/Tahiti (<-10>10)
          - Pacific/Tarawa (<+12>-12)
          - Pacific/Tongatapu (<+13>-13)
          - Pacific/Wake (<+12>-12)
          - Pacific/Wallis (<+12>-12)
          - Etc/GMT (GMT0)
          - Etc/GMT-14 (<+14>-14)
          - Etc/GMT-13 (<+13>-13)
          - Etc/GMT-12 (<+12>-12)
          - Etc/GMT-11 (<+11>-11)
          - Etc/GMT-10 (<+10>-10)
          - Etc/GMT-9 (<+09>-9)
          - Etc/GMT-8 (<+08>-8)
          - Etc/GMT-7 (<+07>-7)
          - Etc/GMT-6 (<+06>-6)
          - Etc/GMT-5 (<+05>-5)
          - Etc/GMT-4 (<+04>-4)
          - Etc/GMT-3 (<+03>-3)
          - Etc/GMT-2 (<+02>-2)
          - Etc/GMT-1 (<+01>-1)
          - Etc/GMT+1 (<-01>1)
          - Etc/GMT+2 (<-02>2)
          - Etc/GMT+3 (<-03>3)
          - Etc/GMT+4 (<-04>4)
          - Etc/GMT+5 (<-05>5)
          - Etc/GMT+6 (<-06>6)
          - Etc/GMT+7 (<-07>7)
          - Etc/GMT+8 (<-08>8)
          - Etc/GMT+9 (<-09>9)
          - Etc/GMT+10 (<-10>10)
          - Etc/GMT+11 (<-11>11)
          - Etc/GMT+12 (<-12>12)
          - Etc/UTC (UTC0)
          sort: false
    placeholder01:
      name: ' '
      description: '# ✅ WEATHER AND TEMPERATURE ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    weather_entity:
      name: Weather entity from HA
      description: 'Select your weather entity.

        This will be used for weather information on Home page and all the weather
        pages.

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - weather
          multiple: false
    outdoortemp:
      name: Home page - Outdoor Temperature Sensor (Optional)
      description: If no outdoor sensor is available, leave the field empty and the
        value from your selected weather integration will be used automatically.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
            device_class:
            - temperature
          multiple: false
    home_outdoor_temp_label_color:
      name: Home page - Outdoor Temperature Sensor - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 255
      - 255
      - 255
      selector:
        color_rgb: {}
    home_outdoor_temp_font:
      name: Home page - Outdoor Temperature Sensor font size
      description: 'The size of the outdoor temperature font

        ***ATTENTION!** Depending on the value shown and the font size, the text may
        exceed the available space.*

        '
      default: '4'
      selector:
        select:
          multiple: false
          options:
          - label: 16px
            value: '0'
          - label: 18px
            value: '1'
          - label: 22px
            value: '2'
          - label: 26px
            value: '3'
          - label: 36px
            value: '4'
          - label: 48px
            value: '5'
          - label: 72px
            value: '6'
          custom_value: false
          sort: false
    home_indoor_temp_visible:
      name: Home Page - Indoor Temperature Sensor Visibility
      description: Toggle to display the indoor temperature on the Home page.
      default: true
      selector:
        boolean: {}
    indoortemp:
      name: Home page - Indoor Temperature Sensor - Entity (Optional)
      description: 'An indoor temperature sensor is not necessary.

        Leave the field empty if you want to use the temperature sensor of the NSPanel.

        Additionally a temperature correction for the NSPanel sensor is possible under
        HA Devices.

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
            device_class:
            - temperature
          multiple: false
    home_indoor_temp_icon:
      name: Home page - Indoor Temperature Sensor - Icon (Optional)
      description: Icon which should be displayed (Default mdi:thermometer)
      default: mdi:thermometer
      selector:
        icon: {}
    home_indoor_temp_icon_color:
      name: Home page - Indoor Temperature Sensor - Icon color
      description: Icon color which should be displayed.
      default:
      - 255
      - 255
      - 255
      selector:
        color_rgb: {}
    home_indoor_temp_label_color:
      name: Home page - Indoor Temperature Sensor - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 255
      - 255
      - 255
      selector:
        color_rgb: {}
    placeholder02:
      name: ' '
      description: '# ✅ HOME PAGE - ENTITIES STATES ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    home_value01:
      name: Home page - Entity State 01 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity: {}
    home_value01_label_color:
      name: Home page - Entity State 01 - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    home_value01_icon:
      name: Home page - Entity State 01 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_value01_icon_color:
      name: Home page - Entity State 01 - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    home_value02:
      name: Home page - Entity State 02 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity: {}
    home_value02_label_color:
      name: Home page - Entity State 02 - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    home_value02_icon:
      name: Home page - Entity State 02 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_value02_icon_color:
      name: Home page - Entity State 02 - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    home_value03:
      name: Home page - Entity State 03 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity: {}
    home_value03_label_color:
      name: Home page - Entity State 03 - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    home_value03_icon:
      name: Home page - Entity State 03 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_value03_icon_color:
      name: Home page - Entity State 03 - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    home_value04:
      name: Home page - Entity State 04 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity: {}
    home_value04_label_color:
      name: Home page - Entity State 04 - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    home_value04_icon:
      name: Home page - Entity State 04 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_value04_icon_color:
      name: Home page - Entity State 04 - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    chip_font_size:
      name: ' '
      description: '# ✅ HOME PAGE - CHIPS ✅

        Please select the size of the icons shown on the chips.

        '
      default: '7'
      selector:
        select:
          multiple: false
          options:
          - label: 24px
            value: '7'
          - label: 32px
            value: '8'
          custom_value: false
          sort: false
    chip01:
      name: Home page - Chip 01 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - sensor
            - switch
          multiple: false
    chip01_inverted:
      name: Home page - Chip 01 - Inverted
      description: If enabled, this chip's display is reversed. It will appear when
        the linked entity is `off`.
      default: false
      selector:
        boolean: {}
    chip01_icon:
      name: Home page - Chip 01 - Icon (Optional)
      description: Specify an icon to show when the entity's state matches. If not
        set, the entity's default icon is used.
      default: []
      selector:
        icon: {}
    chip01_icon_color:
      name: Home page - Chip 01 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    chip02:
      name: Home page - Chip 02 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - sensor
            - switch
          multiple: false
    chip02_inverted:
      name: Home page - Chip 02 - Inverted
      description: If enabled, this chip's display is reversed. It will appear when
        the linked entity is `off`.
      default: false
      selector:
        boolean: {}
    chip02_icon:
      name: Home page - Chip 02 - Icon (Optional)
      description: Specify an icon to show when the entity's state matches. If not
        set, the entity's default icon is used.
      default: []
      selector:
        icon: {}
    chip02_icon_color:
      name: Home page - Chip 02 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    chip03:
      name: Home page - Chip 03 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - sensor
            - switch
          multiple: false
    chip03_inverted:
      name: Home page - Chip 03 - Inverted
      description: If enabled, this chip's display is reversed. It will appear when
        the linked entity is `off`.
      default: false
      selector:
        boolean: {}
    chip03_icon:
      name: Home page - Chip 03 - Icon (Optional)
      description: Specify an icon to show when the entity's state matches. If not
        set, the entity's default icon is used.
      default: []
      selector:
        icon: {}
    chip03_icon_color:
      name: Home page - Chip 03 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    chip04:
      name: Home page - Chip 04 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - sensor
            - switch
          multiple: false
    chip04_inverted:
      name: Home page - Chip 04 - Inverted
      description: If enabled, this chip's display is reversed. It will appear when
        the linked entity is `off`.
      default: false
      selector:
        boolean: {}
    chip04_icon:
      name: Home page - Chip 04 - Icon (Optional)
      description: Specify an icon to show when the entity's state matches. If not
        set, the entity's default icon is used.
      default: []
      selector:
        icon: {}
    chip04_icon_color:
      name: Home page - Chip 04 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    chip05:
      name: Home page - Chip 05 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - sensor
            - switch
          multiple: false
    chip05_inverted:
      name: Home page - Chip 05 - Inverted
      description: If enabled, this chip's display is reversed. It will appear when
        the linked entity is `off`.
      default: false
      selector:
        boolean: {}
    chip05_icon:
      name: Home page - Chip 05 - Icon (Optional)
      description: Specify an icon to show when the entity's state matches. If not
        set, the entity's default icon is used.
      default: []
      selector:
        icon: {}
    chip05_icon_color:
      name: Home page - Chip 05 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    chip06:
      name: Home page - Chip 06 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - sensor
            - switch
          multiple: false
    chip06_inverted:
      name: Home page - Chip 06 - Inverted
      description: If enabled, this chip's display is reversed. It will appear when
        the linked entity is `off`.
      default: false
      selector:
        boolean: {}
    chip06_icon:
      name: Home page - Chip 06 - Icon (Optional)
      description: Specify an icon to show when the entity's state matches. If not
        set, the entity's default icon is used.
      default: []
      selector:
        icon: {}
    chip06_icon_color:
      name: Home page - Chip 06 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    chip07:
      name: Home page - Chip 07 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - sensor
            - switch
          multiple: false
    chip07_inverted:
      name: Home page - Chip 07 - Inverted
      description: If enabled, this chip's display is reversed. It will appear when
        the linked entity is `off`.
      default: false
      selector:
        boolean: {}
    chip07_icon:
      name: Home page - Chip 07 - Icon (Optional)
      description: Specify an icon to show when the entity's state matches. If not
        set, the entity's default icon is used.
      default: []
      selector:
        icon: {}
    chip07_icon_color:
      name: Home page - Chip 07 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    custom_buttons_font_size:
      name: ' '
      description: '# ✅ HOME PAGE - CUSTOM BUTTONS ✅

        Please select the size of the icons shown on the custom buttons.

        '
      default: '8'
      selector:
        select:
          multiple: false
          options:
          - label: 24px
            value: '7'
          - label: 32px
            value: '8'
          custom_value: false
          sort: false
    home_custom_button01:
      name: Home page - Custom button 1 - Entity (Optional)
      description: 'Entity which should be controlled.

        *Entities with supported advanced settings will open it''s settings page,
        all other entities will execute the action or toggle when clicked.*

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    home_custom_button01_icon:
      name: Home page - Custom button 1 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_custom_button01_name:
      name: Home Page - Custom Button 1 - Title (Optional)
      description: 'Define a title for display on the button''s detailed page, if
        applicable. This title will not appear on the Home page but on the detailed
        page accessed through this button, where supported.

        In the absence of a specified title, the system will default to using the
        entity''s Friendly Name or, failing that, its `entity_id`.

        '
      default: ''
      selector:
        text: {}
    home_custom_button02:
      name: Home page - Custom button 2 - Entity (Optional)
      description: 'Entity which should be controlled.

        *Entities with supported advanced settings will open it''s settings page,
        all other entities will execute the action or toggle when clicked.*

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    home_custom_button02_icon:
      name: Home page - Custom button 2 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_custom_button02_name:
      name: Home Page - Custom Button 2 - Title (Optional)
      description: 'Define a title for display on the button''s detailed page, if
        applicable. This title will not appear on the Home page but on the detailed
        page accessed through this button, where supported.

        In the absence of a specified title, the system will default to using the
        entity''s Friendly Name or, failing that, its `entity_id`.

        '
      default: ''
      selector:
        text: {}
    home_custom_button03:
      name: Home page - Custom button 3 - Entity (Optional)
      description: 'Entity which should be controlled.

        *Entities with supported advanced settings will open it''s settings page,
        all other entities will execute the action or toggle when clicked.*

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    home_custom_button03_icon:
      name: Home page - Custom button 3 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_custom_button03_name:
      name: Home Page - Custom Button 3 - Title (Optional)
      description: 'Define a title for display on the button''s detailed page, if
        applicable. This title will not appear on the Home page but on the detailed
        page accessed through this button, where supported.

        In the absence of a specified title, the system will default to using the
        entity''s Friendly Name or, failing that, its `entity_id`.

        '
      default: ''
      selector:
        text: {}
    home_custom_button04:
      name: Home page - Custom button 4 - Entity (Optional)
      description: 'Entity which should be controlled.

        *Entities with supported advanced settings will open it''s settings page,
        all other entities will execute the action or toggle when clicked.*

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    home_custom_button04_icon:
      name: Home page - Custom button 4 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_custom_button04_name:
      name: Home Page - Custom Button 4 - Title (Optional)
      description: 'Define a title for display on the button''s detailed page, if
        applicable. This title will not appear on the Home page but on the detailed
        page accessed through this button, where supported.

        In the absence of a specified title, the system will default to using the
        entity''s Friendly Name or, failing that, its `entity_id`.

        '
      default: ''
      selector:
        text: {}
    home_custom_button05:
      name: Home page - Custom button 5 - Entity (Optional)
      description: 'Entity which should be controlled.

        *Entities with supported advanced settings will open it''s settings page,
        all other entities will execute the action or toggle when clicked.*

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    home_custom_button05_icon:
      name: Home page - Custom button 5 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_custom_button05_name:
      name: Home Page - Custom Button 5 - Title (Optional)
      description: 'Define a title for display on the button''s detailed page, if
        applicable. This title will not appear on the Home page but on the detailed
        page accessed through this button, where supported.

        In the absence of a specified title, the system will default to using the
        entity''s Friendly Name or, failing that, its `entity_id`.

        '
      default: ''
      selector:
        text: {}
    home_custom_button06:
      name: Home page - Custom button 6 - Entity (Optional)
      description: 'Entity which should be controlled.

        *Entities with supported advanced settings will open it''s settings page,
        all other entities will execute the action or toggle when clicked.*

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    home_custom_button06_icon:
      name: Home page - Custom button 6 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_custom_button06_name:
      name: Home Page - Custom Button 6 - Title (Optional)
      description: 'Define a title for display on the button''s detailed page, if
        applicable. This title will not appear on the Home page but on the detailed
        page accessed through this button, where supported.

        In the absence of a specified title, the system will default to using the
        entity''s Friendly Name or, failing that, its `entity_id`.

        '
      default: ''
      selector:
        text: {}
    alarm:
      name: Home page - Custom button 7 - Entity (Optional)
      description: 'Entity which should be controlled.

        *Entities with supported advanced settings will open it''s settings page,
        all other entities will execute the action or toggle when clicked.*

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    home_custom_button07_icon:
      name: Home page - Custom button 7 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    home_custom_button07_name:
      name: Home Page - Custom Button 7 - Title (Optional)
      description: 'Define a title for display on the button''s detailed page, if
        applicable. This title will not appear on the Home page but on the detailed
        page accessed through this button, where supported.

        In the absence of a specified title, the system will default to using the
        entity''s Friendly Name or, failing that, its `entity_id`.

        '
      default: ''
      selector:
        text: {}
    placeholder04:
      name: ' '
      description: '# ✅ CLIMATE ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    climate:
      name: Main climate Entity (Optional)
      description: 'This is used to show the internal temperature in the Home page,
        with a link to the climate page. If a climate entity is not provided here,
        the internal temperature sensor will be used, without the link.

        *Refer to add-ons documentation if you want to control the climate system
        with your panel''s relays.*

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - climate
          multiple: false
    climate_chip_always_visible:
      name: Main Climate - Always Show Chip
      description: Keep the climate chip visible on the interface, even when the climate
        entity is idle or turned off.
      default: false
      selector:
        boolean: {}
    climate_button08:
      name: Climate page - Custom button 01 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - automation
            - binary_sensor
            - button
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    climate_button08_icon:
      name: Climate page - Custom button 01 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    climate_button08_icon_color:
      name: Climate page - Custom button 01 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    climate_button08_hold_custom_action:
      name: Climate page - Custom button 01 - Hold action (Optional)
      description: The action(s) to launch on hold.
      default: []
      selector:
        action: {}
    climate_button09:
      name: Climate page - Custom button 02 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - automation
            - binary_sensor
            - button
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    climate_button09_icon:
      name: Climate page - Custom button 02 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    climate_button09_icon_color:
      name: Climate page - Custom button 02 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    climate_button09_hold_custom_action:
      name: Climate page - Custom button 02 - Hold action (Optional)
      description: The action(s) to launch on hold.
      default: []
      selector:
        action: {}
    climate_value01:
      name: Climate page - Entity State 01 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity: {}
    climate_value01_icon:
      name: Climate page - Entity State 01 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    climate_value01_icon_color:
      name: Climate page - Entity State 01 - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    climate_value01_label_color:
      name: Climate page - Entity State 01 - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    climate_value02:
      name: Climate page - Entity State 02 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity: {}
    climate_value02_icon:
      name: Climate page - Entity State 02 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    climate_value02_icon_color:
      name: Climate page - Entity State 02 - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    climate_value02_label_color:
      name: Climate page - Entity State 02 - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    climate_value03:
      name: Climate page - Entity State 03 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity: {}
    climate_value03_icon:
      name: Climate page - Entity State 03 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    climate_value03_icon_color:
      name: Climate page - Entity State 03 - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    climate_value03_label_color:
      name: Climate page - Entity State 03 - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    climate_value04:
      name: Climate page - Entity State 04 - Entity (Optional)
      description: Entity which should be displayed.
      default: []
      selector:
        entity: {}
    climate_value04_icon:
      name: Climate page - Entity State 04 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    climate_value04_icon_color:
      name: Climate page - Entity State 04 - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    climate_value04_label_color:
      name: Climate page - Entity State 04 - Text color
      description: Choose a color for the sensor's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    qrcode_enabled:
      name: ' '
      description: '# ✅ QR CODE ✅

        Activate QR Code page and QR Code Button on the Home page.

        '
      default: false
      selector:
        boolean: {}
    qrcode_label:
      name: QR Code page - Label (Optional)
      description: Label which should be displayed.
      default: ''
      selector:
        text: {}
    qrcode_value:
      name: QR Code content - VALUE (Optional)
      description: Value you want to display as QR code.
      default: ''
      selector:
        text: {}
    home_button05_icon:
      name: Home page - QR Code - Icon (Optional)
      description: Icon which should be displayed (Default mdi:qrcode-scan).
      default: mdi:qrcode-scan
      selector:
        icon: {}
    home_button05_icon_color:
      name: QR Code - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    placeholder06:
      name: ' '
      description: '# ✅ HARDWARE BUTTONS ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    hw_buttons_bars_pages:
      name: Hardware Buttons - Visibility Pages
      description: 'Choose the pages where the bars, indicating the status of entities
        linked to hardware buttons, will be displayed.

        ***Attention!** Overlapping of button bars with other components may occur
        on some pages. Please proceed with caution.*

        '
      default:
      - '2'
      - '61440'
      - '3932160'
      - '65536'
      - '131072'
      - '512'
      - '256'
      - '134217728'
      - '124'
      - '8388608'
      - '128'
      - '2048'
      - '4194304'
      - '1024'
      - '33554432'
      - '67108864'
      - '16777216'
      selector:
        select:
          multiple: true
          options:
          - label: Home (default)
            value: '2'
          - label: Buttons pages
            value: '61440'
          - label: Entities pages
            value: '3932160'
          - label: Notification page
            value: '65536'
          - label: QR code page
            value: '131072'
          - label: Screen saver (sleep) page
            value: '512'
          - label: Settings page
            value: '256'
          - label: Utilities page
            value: '134217728'
          - label: Weather pages
            value: '124'
          - label: Alarm control panel page
            value: '8388608'
          - label: Climate page
            value: '128'
          - label: Cover page
            value: '2048'
          - label: Fan page
            value: '4194304'
          - label: Light page
            value: '1024'
          - label: Media player page
            value: '33554432'
          - label: Confirm pop-up page
            value: '67108864'
          - label: Keyboard pop-up page
            value: '16777216'
          custom_value: false
          sort: false
    hw_buttons_bar_color_on:
      name: Hardware Buttons - Bar color when `On` (Optional)
      description: Choose a color for the button's bars when the controlled entity
        is `On`.
      default:
      - 31
      - 169
      - 255
      selector:
        color_rgb: {}
    hw_buttons_bar_color_off:
      name: Hardware Buttons - Bar color when `Off` (Optional)
      description: Choose a color for the button's bars when the controlled entity
        is `Off`.
      default:
      - 44
      - 44
      - 44
      selector:
        color_rgb: {}
    hw_button_bar_left_always_show:
      name: Hardware Buttons - Left - Always Show Bar (Optional)
      description: 'Controls the visibility of the **left** button bar. By default,
        the bar is hidden when no entity is assigned. Enabling this option keeps the
        bar visible at all times, showing the `Off` state by default.

        Note: The bar remains visible if an entity is assigned, regardless of this
        setting.

        '
      default: false
      selector:
        boolean: {}
    hw_button_bar_right_always_show:
      name: Hardware Buttons - Right - Always Show Bar (Optional)
      description: 'Controls the visibility of the **right** button bar. By default,
        the bar is hidden when no entity is assigned. Enabling this option keeps the
        bar visible at all times, showing the `Off` state by default.

        Note: The bar remains visible if an entity is assigned, regardless of this
        setting.

        '
      default: false
      selector:
        boolean: {}
    relay_1_local_fallback:
      name: Activate relay 1 local fallback - Enable/Disable (Optional)
      default: false
      description: 'Activate this to use left button to toggle relay 1 if the panel
        is offline.

        *When left button is using the entity related to relay 1 the processing will
        always be local, even if fallback is disabled.*

        '
      selector:
        boolean: {}
    left_button_entity:
      name: Left hardware button - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    left_button_name:
      name: Left hardware button - Label (Optional)
      description: 'Label which should be displayed (10 characters are supported).

        ***Note:** This label is not visible on the US landscape model.*

        '
      default: ''
      selector:
        text: {}
    left_button_hold_select:
      name: Left hardware button hold assignment (Optional)
      description: Select what should happen on hold.
      default: Default
      selector:
        select:
          options:
          - Default
          - Custom Action
          custom_value: false
          multiple: false
          sort: false
    left_button_hold_custom_action:
      name: Left hardware button custom hold action (Optional)
      description: The action(s) to launch on hold.
      default: []
      selector:
        action: {}
    left_button_state_entity:
      name: Left hardware button - State Indicator Entity (Optional)
      description: 'Specifies the entity reflecting the state of the left button''s
        indicator bar.

        If not set, the state of the controlled entity itself will dictate the indicator''s
        state.

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - remote
            - switch
          multiple: false
    left_button_color:
      name: Left hardware button - Text color
      description: Choose a color for the button's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    relay_2_local_fallback:
      name: Activate relay 2 local fallback - Enable/Disable (Optional)
      default: false
      description: 'Activate this to use right button to toggle relay 2 if the panel
        is offline.

        *When right button is using the entity related to relay 2 the processing will
        always be local, even if fallback is disabled.*

        '
      selector:
        boolean: {}
    right_button_entity:
      name: Right hardware button - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - remote
            - scene
            - script
            - switch
          multiple: false
    right_button_name:
      name: Right hardware button - Label (Optional)
      description: 'Label which should be displayed (10 characters are supported).

        ***Note:** This label is not visible on the US landscape model.*

        '
      default: ''
      selector:
        text: {}
    right_button_hold_select:
      name: Right hardware button hold assignment (Optional)
      description: Select what should happen on hold.
      default: Default
      selector:
        select:
          options:
          - Default
          - Custom Action
          custom_value: false
          multiple: false
          sort: false
    right_button_hold_custom_action:
      name: Right hardware button custom hold action (Optional)
      description: The action(s) to launch on hold.
      default: []
      selector:
        action: {}
    right_button_state_entity:
      name: Right hardware button - State Indicator Entity (Optional)
      description: 'Specifies the entity reflecting the state of the right button''s
        indicator bar.

        If not set, the state of the controlled entity itself will dictate the indicator''s
        state.

        '
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - binary_sensor
            - climate
            - cover
            - fan
            - input_boolean
            - light
            - lock
            - media_player
            - remote
            - switch
          multiple: false
    right_button_color:
      name: Right hardware button - Text color
      description: Choose a color for the button's display text.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    button_pages_icon_size:
      name: ' '
      description: '# ✅ BUTTON PAGES ✅

        Please select the size of the icons shown on the button pages.

        '
      default: '8'
      selector:
        select:
          multiple: false
          options:
          - label: 24px
            value: '7'
          - label: 32px
            value: '8'
          - label: 48px
            value: '10'
          custom_value: false
          sort: false
    button_page01_label:
      name: ' '
      description: '# ✅ BUTTON PAGE 01 ✅

        Please select the label which should be displayed in the top of the page.

        '
      default: ''
      selector:
        text: {}
    entity01:
      name: Button page 1, Button 1 - Entity (Optional)
      description: Entity which should toggle.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity01_name:
      name: Button page 1, Button 1 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity01_icon:
      name: Button page 1, Button 1 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity01_icon_color:
      name: Button page 1, Button 1 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity01_confirm:
      name: Button page 1, Button 1 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity02:
      name: Button page 1, Button 2 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity02_name:
      name: Button page 1, Button 2 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity02_icon:
      name: Button page 1, Button 2 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity02_icon_color:
      name: Button page 1, Button 2 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity02_confirm:
      name: Button page 1, Button 2 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity03:
      name: Button page 1, Button 3 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity03_name:
      name: Button page 1, Button 3 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity03_icon:
      name: Button page 1, Button 3 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity03_icon_color:
      name: Button page 1, Button 3 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity03_confirm:
      name: Button page 1, Button 3 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity04:
      name: Button page 1, Button 4 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity04_name:
      name: Button page 1, Button 4 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity04_icon:
      name: Button page 1, Button 4 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity04_icon_color:
      name: Button page 1, Button 4 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity04_confirm:
      name: Button page 1, Button 4 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity05:
      name: Button page 1, Button 5 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity05_name:
      name: Button page 1, Button 5 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity05_icon:
      name: Button page 1, Button 5 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity05_icon_color:
      name: Button page 1, Button 5 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity05_confirm:
      name: Button page 1, Button 5 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity06:
      name: Button page 1, Button 6 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity06_name:
      name: Button page 1, Button 6 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity06_icon:
      name: Button page 1, Button 6 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity06_icon_color:
      name: Button page 1, Button 6 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity06_confirm:
      name: Button page 1, Button 6 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity07:
      name: Button page 1, Button 7 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity07_name:
      name: Button page 1, Button 7 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity07_icon:
      name: Button page 1, Button 7 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity07_icon_color:
      name: Button page 1, Button 7 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity07_confirm:
      name: Button page 1, Button 7 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity08:
      name: Button page 1, Button 8 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity08_name:
      name: Button page 1, Button 8 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity08_icon:
      name: Button page 1, Button 8 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity08_icon_color:
      name: Button page 1, Button 8 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity08_confirm:
      name: Button page 1, Button 8 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    button_page02_label:
      name: ' '
      description: '# ✅ BUTTON PAGE 02 ✅

        Please select the label which should be displayed in the top of the page.

        '
      default: ''
      selector:
        text: {}
    entity09:
      name: Button page 2, Button 1 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity09_name:
      name: Button page 2, Button 1 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity09_icon:
      name: Button page 2, Button 1 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity09_icon_color:
      name: Button page 2, Button 1 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity09_confirm:
      name: Button page 2, Button 1 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity10:
      name: Button page 2, Button 2 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity10_name:
      name: Button page 2, Button 2 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity10_icon:
      name: Button page 2, Button 2 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity10_icon_color:
      name: Button page 2, Button 2 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity10_confirm:
      name: Button page 2, Button 2 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity11:
      name: Button page 2, Button 3 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity11_name:
      name: Button page 2, Button 3 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity11_icon:
      name: Button page 2, Button 3 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity11_icon_color:
      name: Button page 2, Button 3 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity11_confirm:
      name: Button page 2, Button 3 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity12:
      name: Button page 2, Button 4 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity12_name:
      name: Button page 2, Button 4 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity12_icon:
      name: Button page 2, Button 4 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity12_icon_color:
      name: Button page 2, Button 4 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity12_confirm:
      name: Button page 2, Button 4 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity13:
      name: Button page 2, Button 5 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity13_name:
      name: Button page 2, Button 5 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity13_icon:
      name: Button page 2, Button 5 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity13_icon_color:
      name: Button page 2, Button 5 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity13_confirm:
      name: Button page 2, Button 5 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity14:
      name: Button page 2, Button 6 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity14_name:
      name: Button page 2, Button 6 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity14_icon:
      name: Button page 2, Button 6 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity14_icon_color:
      name: Button page 2, Button 6 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity14_confirm:
      name: Button page 2, Button 6 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity15:
      name: Button page 2, Button 7 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity15_name:
      name: Button page 2, Button 7 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity15_icon:
      name: Button page 2, Button 7 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity15_icon_color:
      name: Button page 2, Button 7 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity15_confirm:
      name: Button page 2, Button 7 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity16:
      name: Button page 2, Button 8 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity16_name:
      name: Button page 2, Button 8 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity16_icon:
      name: Button page 2, Button 8 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity16_icon_color:
      name: Button page 2, Button 8 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity16_confirm:
      name: Button page 2, Button 8 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    button_page03_label:
      name: ' '
      description: '# ✅ BUTTON PAGE 03 ✅

        Please select the label which should be displayed in the top of the page.

        '
      default: ''
      selector:
        text: {}
    entity17:
      name: Button page 3, Button 1 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity17_name:
      name: Button page 3, Button 1 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity17_icon:
      name: Button page 3, Button 1 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity17_icon_color:
      name: Button page 3, Button 1 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity17_confirm:
      name: Button page 3, Button 1 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity18:
      name: Button page 3, Button 2 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity18_name:
      name: Button page 3, Button 2 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity18_icon:
      name: Button page 3, Button 2 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity18_icon_color:
      name: Button page 3, Button 2 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity18_confirm:
      name: Button page 3, Button 2 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity19:
      name: Button page 3, Button 3 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity19_name:
      name: Button page 3, Button 3 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity19_icon:
      name: Button page 3, Button 3 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity19_icon_color:
      name: Button page 3, Button 3 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity19_confirm:
      name: Button page 3, Button 3 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity20:
      name: Button page 3, Button 4 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity20_name:
      name: Button page 3, Button 4 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity20_icon:
      name: Button page 3, Button 4 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity20_icon_color:
      name: Button page 3, Button 4 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity20_confirm:
      name: Button page 3, Button 4 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity21:
      name: Button page 3, Button 5 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity21_name:
      name: Button page 3, Button 5 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity21_icon:
      name: Button page 3, Button 5 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity21_icon_color:
      name: Button page 3, Button 5 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity21_confirm:
      name: Button page 3, Button 5 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity22:
      name: Button page 3, Button 6 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity22_name:
      name: Button page 3, Button 6 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity22_icon:
      name: Button page 3, Button 6 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity22_icon_color:
      name: Button page 3, Button 6 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity22_confirm:
      name: Button page 3, Button 6 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity23:
      name: Button page 3, Button 7 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity23_name:
      name: Button page 3, Button 7 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity23_icon:
      name: Button page 3, Button 7 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity23_icon_color:
      name: Button page 3, Button 7 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity23_confirm:
      name: Button page 3, Button 7 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity24:
      name: Button page 3, Button 8 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity24_name:
      name: Button page 3, Button 8 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity24_icon:
      name: Button page 3, Button 8 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity24_icon_color:
      name: Button page 3, Button 8 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity24_confirm:
      name: Button page 3, Button 8 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    button_page04_label:
      name: ' '
      description: '# ✅ BUTTON PAGE 04 ✅

        Please select the label which should be displayed in the top of the page.

        '
      default: ''
      selector:
        text: {}
    entity25:
      name: Button page 4, Button 1 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity25_name:
      name: Button page 4, Button 1 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity25_icon:
      name: Button page 4, Button 1 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity25_icon_color:
      name: Button page 4, Button 1 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity25_confirm:
      name: Button page 4, Button 1 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity26:
      name: Button page 4, Button 2 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity26_name:
      name: Button page 4, Button 2 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity26_icon:
      name: Button page 4, Button 2 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity26_icon_color:
      name: Button page 4, Button 2 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity26_confirm:
      name: Button page 4, Button 2 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity27:
      name: Button page 4, Button 3 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity27_name:
      name: Button page 4, Button 3 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity27_icon:
      name: Button page 4, Button 3 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity27_icon_color:
      name: Button page 4, Button 3 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity27_confirm:
      name: Button page 4, Button 3 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity28:
      name: Button page 4, Button 4 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity28_name:
      name: Button page 4, Button 4 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity28_icon:
      name: Button page 4, Button 4 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity28_icon_color:
      name: Button page 4, Button 4 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity28_confirm:
      name: Button page 4, Button 4 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity29:
      name: Button page 4, Button 5 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity29_name:
      name: Button page 4, Button 5 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity29_icon:
      name: Button page 4, Button 5 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity29_icon_color:
      name: Button page 4, Button 5 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity29_confirm:
      name: Button page 4, Button 5 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity30:
      name: Button page 4, Button 6 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity30_name:
      name: Button page 4, Button 6 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity30_icon:
      name: Button page 4, Button 6 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity30_icon_color:
      name: Button page 4, Button 6 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity30_confirm:
      name: Button page 4, Button 6 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity31:
      name: Button page 4, Button 7 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity31_name:
      name: Button page 4, Button 7 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity31_icon:
      name: Button page 4, Button 7 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity31_icon_color:
      name: Button page 4, Button 7 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity31_confirm:
      name: Button page 4, Button 7 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    entity32:
      name: Button page 4, Button 8 - Entity (Optional)
      description: Entity to be controlled.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - alarm_control_panel
            - automation
            - binary_sensor
            - button
            - climate
            - cover
            - fan
            - input_boolean
            - input_button
            - light
            - lock
            - media_player
            - person
            - remote
            - scene
            - script
            - switch
          multiple: false
    entity32_name:
      name: Button page 4, Button 8 - Label (Optional)
      description: Specify a label for this button (supports up to 10 characters).
      default: ''
      selector:
        text: {}
    entity32_icon:
      name: Button page 4, Button 8 - Icon (Optional)
      description: '***Icon Display:** If not specified, an attribute-defined icon
        will be used, if available. Otherwise, no icon will be shown.*

        '
      default: []
      selector:
        icon: {}
    entity32_icon_color:
      name: Button page 4, Button 8 - Icon color
      description: Icon color which should be displayed when button is `On`.
      default:
      - 0
      - 128
      - 248
      selector:
        color_rgb: {}
    entity32_confirm:
      name: Button page 4, Button 8 - Confirm execution of the button press
      default: false
      description: '*Ask for confirmation to execute action*

        '
      selector:
        boolean: {}
    placeholder11:
      name: ' '
      description: '# ✅ ENTITY PAGE SETTINGS ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    home_button06_icon:
      name: Entity page - Icon (Optional)
      description: '*HOME page*

        *Icon which should be displayed (Default mdi:format-list-bulleted-square)*

        '
      default: mdi:format-list-bulleted-square
      selector:
        icon: {}
    home_button06_icon_color:
      name: Entity page - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    entitypages_value_alignment:
      name: Value column alignment
      description: '*Entity pages* *Select the alignment for the column containing
        the values on the entity pages.*

        '
      default: '0'
      selector:
        select:
          multiple: false
          options:
          - label: Right (default)
            value: '0'
          - label: Center
            value: '1'
          - label: Left
            value: '2'
          custom_value: false
          sort: false
    entitypages_show_entities_icons:
      name: Entity Pages - Show Entity Icons
      description: Display icons associated with each entity.
      default: true
      selector:
        boolean: {}
    entity_page01_label:
      name: ' '
      description: '# ✅ ENTITY PAGE 01 ✅

        Please select the label which should be displayed in the top of the page.

        '
      default: ''
      selector:
        text: {}
    entities_entity01:
      name: Entity page 1, Row 1 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity01_name:
      name: Entity page 1, Row 1 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity01_icon:
      name: Entity page 1, Row 1 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity02:
      name: Entity page 1, Row 2 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity02_name:
      name: Entity page 1, Row 2 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity02_icon:
      name: Entity page 1, Row 2 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity03:
      name: Entity page 1, Row 3 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity03_name:
      name: Entity page 1, Row 3 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity03_icon:
      name: Entity page 1, Row 3 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity04:
      name: Entity page 1, Row 4 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity04_name:
      name: Entity page 1, Row 4 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity04_icon:
      name: Entity page 1, Row 4 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity05:
      name: Entity page 1, Row 5 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity05_name:
      name: Entity page 1, Row 5 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity05_icon:
      name: Entity page 1, Row 5 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity06:
      name: Entity page 1, Row 6 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity06_name:
      name: Entity page 1, Row 6 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity06_icon:
      name: Entity page 1, Row 6 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity07:
      name: Entity page 1, Row 7 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity07_name:
      name: Entity page 1, Row 7 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity07_icon:
      name: Entity page 1, Row 7 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity08:
      name: Entity page 1, Row 8 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity08_name:
      name: Entity page 1, Row 8 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity08_icon:
      name: Entity page 1, Row 8 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entity_page02_label:
      name: ' '
      description: '# ✅ ENTITY PAGE 02 ✅

        Please select the label which should be displayed in the top of the page.

        '
      default: ''
      selector:
        text: {}
    entities_entity09:
      name: Entity page 2, Row 1 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity09_name:
      name: Entity page 2, Row 1 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity09_icon:
      name: Entity page 2, Row 1 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity10:
      name: Entity page 2, Row 2 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity10_name:
      name: Entity page 2, Row 2 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity10_icon:
      name: Entity page 2, Row 2 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity11:
      name: Entity page 2, Row 3 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity11_name:
      name: Entity page 2, Row 3 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity11_icon:
      name: Entity page 2, Row 3 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity12:
      name: Entity page 2, Row 4 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity12_name:
      name: Entity page 2, Row 4 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity12_icon:
      name: Entity page 2, Row 4 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity13:
      name: Entity page 2, Row 5 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity13_name:
      name: Entity page 2, Row 5 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity13_icon:
      name: Entity page 2, Row 5 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity14:
      name: Entity page 2, Row 6 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity14_name:
      name: Entity page 2, Row 6 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity14_icon:
      name: Entity page 2, Row 6 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity15:
      name: Entity page 2, Row 7 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity15_name:
      name: Entity page 2, Row 7 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity15_icon:
      name: Entity page 2, Row 7 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity16:
      name: Entity page 2, Row 8 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity16_name:
      name: Entity page 2, Row 8 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity16_icon:
      name: Entity page 2, Row 8 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entity_page03_label:
      name: ' '
      description: '# ✅ ENTITY PAGE 03 ✅

        Please select the label which should be displayed in the top of the page.

        '
      default: ''
      selector:
        text: {}
    entities_entity17:
      name: Entity page 3, Row 1 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity17_name:
      name: Entity page 3, Row 1 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity17_icon:
      name: Entity page 3, Row 1 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity18:
      name: Entity page 3, Row 2 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity18_name:
      name: Entity page 3, Row 2 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity18_icon:
      name: Entity page 3, Row 2 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity19:
      name: Entity page 3, Row 3 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity19_name:
      name: Entity page 3, Row 3 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity19_icon:
      name: Entity page 3, Row 3 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity20:
      name: Entity page 3, Row 4 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity20_name:
      name: Entity page 3, Row 4 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity20_icon:
      name: Entity page 3, Row 4 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity21:
      name: Entity page 3, Row 5 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity21_name:
      name: Entity page 3, Row 5 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity21_icon:
      name: Entity page 3, Row 5 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity22:
      name: Entity page 3, Row 6 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity22_name:
      name: Entity page 3, Row 6 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity22_icon:
      name: Entity page 3, Row 6 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity23:
      name: Entity page 3, Row 7 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity23_name:
      name: Entity page 3, Row 7 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity23_icon:
      name: Entity page 3, Row 7 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity24:
      name: Entity page 3, Row 8 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity24_name:
      name: Entity page 3, Row 8 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity24_icon:
      name: Entity page 3, Row 8 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entity_page04_label:
      name: ' '
      description: '# ✅ ENTITY PAGE 04 ✅

        Please select the label which should be displayed in the top of the page.

        '
      default: ''
      selector:
        text: {}
    entities_entity25:
      name: Entity page 4, Row 1 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity25_name:
      name: Entity page 4, Row 1 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity25_icon:
      name: Entity page 4, Row 1 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity26:
      name: Entity page 4, Row 2 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity26_name:
      name: Entity page 4, Row 2 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity26_icon:
      name: Entity page 4, Row 2 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity27:
      name: Entity page 4, Row 3 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity27_name:
      name: Entity page 4, Row 3 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity27_icon:
      name: Entity page 4, Row 3 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity28:
      name: Entity page 4, Row 4 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity28_name:
      name: Entity page 4, Row 4 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity28_icon:
      name: Entity page 4, Row 4 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity29:
      name: Entity page 4, Row 5 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity29_name:
      name: Entity page 4, Row 5 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity29_icon:
      name: Entity page 4, Row 5 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity30:
      name: Entity page 4, Row 6 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity30_name:
      name: Entity page 4, Row 6 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity30_icon:
      name: Entity page 4, Row 6 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity31:
      name: Entity page 4, Row 7 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity31_name:
      name: Entity page 4, Row 7 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity31_icon:
      name: Entity page 4, Row 7 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    entities_entity32:
      name: Entity page 4, Row 8 - Entity (Optional)
      description: Choose an entity to display in this position. If left blank, no
        entity will be shown.
      default: []
      selector:
        entity: {}
    entities_entity32_name:
      name: Entity page 4, Row 8 - Label (Optional)
      description: Specify a custom label for this entity (optional). This label will
        replace the entity's default `friendly_name` if provided.
      default: ''
      selector:
        text: {}
    entities_entity32_icon:
      name: Entity page 4, Row 8 - Icon (Optional)
      description: Set a custom icon for this entity (optional). If not set, the entity's
        default icon is used, if available. Leave blank for no icon.
      default: []
      selector:
        icon: {}
    utilities_enabled:
      name: ' '
      description: '# ✅ Page Utilities ✅

        Activate Utilities page and Utilities button on the Home page.

        '
      default: false
      selector:
        boolean: {}
    home_button08_icon:
      name: Home page - Utilities Icon (Optional)
      description: Icon which should be displayed on the Home page (Default mdi:gauge).
      default: mdi:gauge
      selector:
        icon: {}
    home_button08_icon_color:
      name: Home page - Utilities Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    utilities_page_cursor_width:
      name: Utilities Page - Cursor Width
      description: Set the width of cursors indicating utility flows. Use 0 for no
        cursor, or 255 for automatic sizing.
      default: 255
      selector:
        number:
          min: 0.0
          max: 255.0
          mode: slider
          step: 1.0
    utilities_page01_label:
      name: Utilities page - Label (Optional)
      description: Label which should be displayed in the top of the page.
      default: Utilitites Dashboard
      selector:
        text:
          multiple: false
          multiline: false
    utilities_page01_icon:
      name: Utilities page - Icon (Optional)
      description: Select the icon to be shown in the top left corner of the page.
      default: mdi:gauge
      selector:
        icon: {}
    utilities_page01_home_label:
      name: Utilities page - Home - Label (Optional)
      description: Label which should be displayed in the Home area.
      default: Home
      selector:
        text:
          multiple: false
          multiline: false
    utilities_page01_home_icon:
      name: Utilities page - Home - Icon (Optional)
      description: 'Select the icon to be shown in the Home area. (Default: mdi:home-lightning-bolt-outline).'
      default: mdi:home-lightning-bolt-outline
      selector:
        icon: {}
    utilities_page01_home_value1:
      name: Utilities page - Home - Value 1 (Optional)
      description: Select the entity with values to be shown in the Home area.
      default: []
      selector:
        entity: {}
    utilities_page01_home_value2:
      name: Utilities page - Home - Value 2 (Optional)
      description: Select the entity with values to be shown in the Home area.
      default: []
      selector:
        entity: {}
    utilities_page01_home_color:
      name: Utilities page - Home - Color (Optional)
      description: Select the color for the items related to the Home area.
      default:
      - 192
      - 192
      - 192
      selector:
        color_rgb: {}
    utilities_page01_grid_label:
      name: Utilities page - Grid - Label (Optional)
      description: Label which should be displayed in the Grid area.
      default: Grid
      selector:
        text:
          multiple: false
          multiline: false
    utilities_page01_grid_icon:
      name: Utilities page - Grid - Icon (Optional)
      description: 'Select the icon to be shown in the Grid area. (Default: mdi:transmission-tower).'
      default: mdi:transmission-tower
      selector:
        icon: {}
    utilities_page01_grid_value1:
      name: Utilities page - Grid - Value 1 (Optional)
      description: Select the entity with values to be shown in the Grid area.
      default: []
      selector:
        entity: {}
    utilities_page01_grid_value2:
      name: Utilities page - Grid - Value 2 (Optional)
      description: Select the entity with values to be shown in the Grid area.
      default: []
      selector:
        entity: {}
    utilities_page01_grid_color:
      name: Utilities page - Grid - Color (Optional)
      description: Select the color for the items related to the Grid area.
      default:
      - 192
      - 192
      - 192
      selector:
        color_rgb: {}
    utilities_page01_main_line_reference:
      name: Main Line Direction Reference
      description: Select a sensor to use as a reference for the main line's movement
        direction.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
          multiple: false
    utilities_page01_main_line_inverted:
      name: Main Line Direction Inverted
      description: Enable this to reverse the main line's movement direction relative
        to the sensor's readings.
      default: false
      selector:
        boolean: {}
    utilities_page01_group01_label:
      name: Utilities page - Group 1 - Label (Optional)
      description: Label which should be displayed in the Group 1 area.
      default: ''
      selector:
        text: {}
    utilities_page01_group01_icon:
      name: Utilities page - Group 1 - Icon (Optional)
      description: Select the icon to be shown in the Group 1 area.
      default: []
      selector:
        icon: {}
    utilities_page01_group01_value1:
      name: Utilities page - Group 1 - Value 1 (Optional)
      description: Select the entity with values to be shown in the Group 1 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group01_value2:
      name: Utilities page - Group 1 - Value 2 (Optional)
      description: Select the entity with values to be shown in the Group 1 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group01_color:
      name: Utilities page - Group 1 - Color (Optional)
      description: Select the color for the items related to the Group 1 area.
      default:
      - 192
      - 192
      - 192
      selector:
        color_rgb: {}
    utilities_page01_group01_line_reference:
      name: Utilities page - Group 1 - Line Direction Reference
      description: Select a sensor to use as a reference for the Group 1 line's movement
        direction.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
          multiple: false
    utilities_page01_group01_line_inverted:
      name: Utilities page - Group 1 - Line Direction Inverted
      description: Enable this to reverse the Group 1 line's movement direction relative
        to the sensor's readings.
      default: false
      selector:
        boolean: {}
    utilities_page01_group02_label:
      name: Utilities page - Group 2 - Label (Optional)
      description: Label which should be displayed in the Group 2 area.
      default: ''
      selector:
        text: {}
    utilities_page01_group02_icon:
      name: Utilities page - Group 2 - Icon (Optional)
      description: Select the icon to be shown in the Group 2 area.
      default: []
      selector:
        icon: {}
    utilities_page01_group02_value1:
      name: Utilities page - Group 2 - Value 1 (Optional)
      description: Select the entity with values to be shown in the Group 2 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group02_value2:
      name: Utilities page - Group 2 - Value 2 (Optional)
      description: Select the entity with values to be shown in the Group 2 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group02_color:
      name: Utilities page - Group 2 - Color (Optional)
      description: Select the color for the items related to the Group 2 area.
      default:
      - 192
      - 192
      - 192
      selector:
        color_rgb: {}
    utilities_page01_group02_line_reference:
      name: Utilities page - Group 2 - Line Direction Reference
      description: Select a sensor to use as a reference for the Group 2 line's movement
        direction.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
          multiple: false
    utilities_page01_group02_line_inverted:
      name: Utilities page - Group 2 - Line Direction Inverted
      description: Enable this to reverse the Group 2 line's movement direction relative
        to the sensor's readings.
      default: false
      selector:
        boolean: {}
    utilities_page01_group03_label:
      name: Utilities page - Group 3 - Label (Optional)
      description: Label which should be displayed in the Group 3 area.
      default: ''
      selector:
        text: {}
    utilities_page01_group03_icon:
      name: Utilities page - Group 3 - Icon (Optional)
      description: Select the icon to be shown in the Group 3 area.
      default: []
      selector:
        icon: {}
    utilities_page01_group03_value1:
      name: Utilities page - Group 3 - Value 1 (Optional)
      description: Select the entity with values to be shown in the Group 3 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group03_value2:
      name: Utilities page - Group 3 - Value 2 (Optional)
      description: Select the entity with values to be shown in the Group 3 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group03_color:
      name: Utilities page - Group 3 - Color (Optional)
      description: Select the color for the items related to the Group 3 area.
      default:
      - 192
      - 192
      - 192
      selector:
        color_rgb: {}
    utilities_page01_group03_line_reference:
      name: Utilities page - Group 3 - Line Direction Reference
      description: Select a sensor to use as a reference for the Group 3 line's movement
        direction.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
          multiple: false
    utilities_page01_group03_line_inverted:
      name: Utilities page - Group 3 - Line Direction Inverted
      description: Enable this to reverse the Group 3 line's movement direction relative
        to the sensor's readings.
      default: false
      selector:
        boolean: {}
    utilities_page01_group04_label:
      name: Utilities page - Group 4 - Label (Optional)
      description: Label which should be displayed in the Group 4 area.
      default: ''
      selector:
        text: {}
    utilities_page01_group04_icon:
      name: Utilities page - Group 4 - Icon (Optional)
      description: Select the icon to be shown in the Group 4 area.
      default: []
      selector:
        icon: {}
    utilities_page01_group04_value1:
      name: Utilities page - Group 4 - Value 1 (Optional)
      description: Select the entity with values to be shown in the Group 4 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group04_value2:
      name: Utilities page - Group 4 - Value 2 (Optional)
      description: Select the entity with values to be shown in the Group 4 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group04_color:
      name: Utilities page - Group 4 - Color (Optional)
      description: Select the color for the items related to the Group 4 area.
      default:
      - 192
      - 192
      - 192
      selector:
        color_rgb: {}
    utilities_page01_group04_line_reference:
      name: Utilities page - Group 4 - Line Direction Reference
      description: Select a sensor to use as a reference for the Group 4 line's movement
        direction.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
          multiple: false
    utilities_page01_group04_line_inverted:
      name: Utilities page - Group 4 - Line Direction Inverted
      description: Enable this to reverse the Group 4 line's movement direction relative
        to the sensor's readings.
      default: false
      selector:
        boolean: {}
    utilities_page01_group05_label:
      name: Utilities page - Group 5 - Label (Optional)
      description: Label which should be displayed in the Group 5 area.
      default: ''
      selector:
        text: {}
    utilities_page01_group05_icon:
      name: Utilities page - Group 5 - Icon (Optional)
      description: Select the icon to be shown in the Group 5 area.
      default: []
      selector:
        icon: {}
    utilities_page01_group05_value1:
      name: Utilities page - Group 5 - Value 1 (Optional)
      description: Select the entity with values to be shown in the Group 5 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group05_value2:
      name: Utilities page - Group 5 - Value 2 (Optional)
      description: Select the entity with values to be shown in the Group 5 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group05_color:
      name: Utilities page - Group 5 - Color (Optional)
      description: Select the color for the items related to the Group 5 area.
      default:
      - 192
      - 192
      - 192
      selector:
        color_rgb: {}
    utilities_page01_group05_line_reference:
      name: Utilities page - Group 5 - Line Direction Reference
      description: Select a sensor to use as a reference for the Group 5 line's movement
        direction.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
          multiple: false
    utilities_page01_group05_line_inverted:
      name: Utilities page - Group 5 - Line Direction Inverted
      description: Enable this to reverse the Group 5 line's movement direction relative
        to the sensor's readings.
      default: false
      selector:
        boolean: {}
    utilities_page01_group06_label:
      name: Utilities page - Group 6 - Label (Optional)
      description: Label which should be displayed in the Group 6 area.
      default: ''
      selector:
        text: {}
    utilities_page01_group06_icon:
      name: Utilities page - Group 6 - Icon (Optional)
      description: Select the icon to be shown in the Group 6 area.
      default: []
      selector:
        icon: {}
    utilities_page01_group06_value1:
      name: Utilities page - Group 6 - Value 1 (Optional)
      description: Select the entity with values to be shown in the Group 6 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group06_value2:
      name: Utilities page - Group 6 - Value 2 (Optional)
      description: Select the entity with values to be shown in the Group 6 area.
      default: []
      selector:
        entity: {}
    utilities_page01_group06_color:
      name: Utilities page - Group 6 - Color (Optional)
      description: Select the color for the items related to the Group 6 area.
      default:
      - 192
      - 192
      - 192
      selector:
        color_rgb: {}
    utilities_page01_group06_line_reference:
      name: Utilities page - Group 6 - Line Direction Reference
      description: Select a sensor to use as a reference for the Group 6 line's movement
        direction.
      default: []
      selector:
        entity:
          filter:
          - domain:
            - sensor
          multiple: false
    utilities_page01_group06_line_inverted:
      name: Utilities page - Group 6 - Line Direction Inverted
      description: Enable this to reverse the Group 6 line's movement direction relative
        to the sensor's readings.
      default: false
      selector:
        boolean: {}
    placeholder16:
      name: ' '
      description: '# ✅ CUSTOM CONFIGURATION ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    home_button04_icon:
      name: Home page - Notification - Icon (Optional)
      description: Icon which should be displayed (Default mdi:email).
      default: mdi:email
      selector:
        icon: {}
    home_button04_icon_color01:
      name: Home page - Notification read - Icon color
      description: Icon color which should be displayed.
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    home_button04_icon_color02:
      name: Home page - Notification unread - Icon color
      description: Icon color which should be displayed.
      default:
      - 248
      - 0
      - 0
      selector:
        color_rgb: {}
    relay01_icon:
      name: Home page - Relay 01 - Chip Icon (Optional)
      description: Icon which should be displayed (Default mdi:numeric-1-box-outline).
      default: mdi:numeric-1-box-outline
      selector:
        icon: {}
    relay01_icon_color:
      name: Home page - Relay 01 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    relay02_icon:
      name: Home page - Relay 02 - Chip Icon (Optional)
      description: Icon which should be displayed (Default mdi:numeric-2-box-outline).
      default: mdi:numeric-2-box-outline
      selector:
        icon: {}
    relay02_icon_color:
      name: Home page - Relay 02 - Icon color
      description: Icon color which should be displayed.
      default: []
      selector:
        color_rgb: {}
    time_label_color:
      name: Time - Text color
      description: '*HOME page*

        *Choose a color for the time''s display text.*

        '
      default:
      - 255
      - 255
      - 255
      selector:
        color_rgb: {}
    date_label_color:
      name: Date - Text color
      description: '*HOME page*

        *Choose a color for the date''s display text.*

        '
      default:
      - 255
      - 255
      - 255
      selector:
        color_rgb: {}
    placeholder22:
      name: ' '
      description: '# ✅ SCREEN SAVER ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    screensaver_display_time:
      name: Screen saver - Display time
      description: 'Enable the display of time while sleeping (screensaver).


        **Important!**

        1. *Keeping the display always "on" may increase the temperature on your panel,
        requiring adjustments on the **Temperature correction** control to keep consistence
        with the environment temperature.*

        2. *Please set **Display Brightness Sleep** accordingly under the device''s
        page (Settings > Devices & Services > ESPHome) to have the text visible.*

        '
      default: false
      selector:
        boolean: {}
    screensaver_display_time_font_size:
      name: Screen saver - Display time font size
      description: 'Font size to be used when displaying the time while sleeping (screensaver).

        ***ATTENTION!!** Some fonts may be limited by unavailable language chars or
        space in the screen. Please fall back to the default size if you have issues.*

        '
      default: '6'
      selector:
        select:
          multiple: false
          options:
          - label: 72px (default)
            value: '6'
          - label: 112px
            value: '11'
          - label: 192px
            value: '12'
          custom_value: false
          sort: false
    screensaver_display_time_font_color:
      name: Screen saver - Display time font color
      description: Font color to be used when displaying the time while sleeping (screensaver).
      default:
      - 64
      - 64
      - 64
      selector:
        color_rgb: {}
    placeholder21:
      name: ' '
      description: '# ✅ ICONS COLORS ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    icon_color_fallback_on:
      name: Icon fallback color when state is "**ON**"
      description: '*General*

        *Which default color should be used for icons when the state is **ON** while
        a custom color is not selected and the domain does not provides a state-based
        color?*

        '
      default:
      - 200
      - 204
      - 200
      selector:
        color_rgb: {}
    icon_color_fallback_off:
      name: Icon fallback color when state is "**OFF**"
      description: '*General*

        *Which default color should be used fo icons when the state is **OFF**?*

        '
      default:
      - 92
      - 92
      - 92
      selector:
        color_rgb: {}
    placeholder19:
      name: ' '
      description: '# ✅ ADVANCED SETTINGS ✅'
      default: ' '
      selector:
        select:
          options:
          - ' '
          custom_value: false
          multiple: false
          sort: false
    decimal_separator:
      name: System settings - Decimal Separator
      description: Choose the decimal separator for displaying numbers.
      default: .
      selector:
        select:
          multiple: false
          options:
          - label: . (Dot)
            value: .
          - label: ', (Comma)'
            value: ','
          custom_value: false
          sort: false
    delay:
      name: Command Delay to Prevent Overload
      description: 'Adjusts the delay between sequential commands to the Nextion display,
        preventing overload and synchronization issues. While increasing delay enhances
        stability, it may slow down page rendering.

        '
      default: 1
      selector:
        number:
          min: 0.0
          max: 100.0
          step: 1.0
          unit_of_measurement: milliseconds
          mode: box
    tft_path:
      name: Nextion TFT File Folder (Optional)
      description: 'Specify the path to the folder containing the Nextion TFT file.
        Note that configuring the [Folder Watcher](https://www.home-assistant.io/integrations/folder_watcher/)
        in `configuration.yaml` is required for this path to be monitored.

        With this, the Blueprint will trigger a TFT upload every time a file on that
        folder changed.

        **Note:**

        - This is to be used together with the option `nextion_upload_tft` on the
        "Update TFT Display - Model" option on the device''s page.

        - This is a relative path on Home Assistant file system pointing to the www
        folder where you store your `nspanel_xxx.tft` files. Please do not use the
        url here.

        '
      default: ''
      selector:
        text:
          multiple: false
          multiline: false
    media_player_update_interval:
      name: Media player - Update interval
      description: 'Interval (msec) to call for an update from the media player entity.
        Lower values will improve the responsiveness, but could spam your Home Assistant
        with constant requests, while higher values will reduce the load on HA but
        the Media Player page can be laggy.

        '
      default: 5000
      selector:
        number:
          min: 500.0
          max: 60000.0
          unit_of_measurement: milliseconds
          mode: slider
          step: 1.0
    media_player_update_delay:
      name: Media player - Delay (msec) after entity updade call?
      default: 500
      selector:
        number:
          min: 0.0
          max: 5000.0
          unit_of_measurement: milliseconds
          mode: slider
          step: 1.0
    home_page_background_update:
      name: Home page - Update in the background
      description: 'When enabled, the Home page will be updated even when not visible
        or while the panel is sleeping, enhancing the user''s experience when navigating
        between the pages.

        Disabling this may save some network and database consumption, with the cost
        of some slowness when constructing the Home page.

        '
      default: true
      selector:
        boolean: {}
    domain_automation_button_action:
      name: System settings - Button action for automation entities
      description: 'Select the button action when associated to `automation.xxx` entities.

        ***Toggle:** Enable/disable the automation (default).*

        ***Trigger:** Run the automation (ignoring conditions).*

        '
      default: toggle
      selector:
        select:
          multiple: false
          options:
          - label: Toggle (default)
            value: toggle
          - label: Trigger
            value: trigger
          custom_value: false
          sort: false
    wake_up_sensors:
      name: System settings - Wake-up sensors
      description: Select a sensors to wake-up the panel when the sensor turns `On`.
      default: []
      selector:
        entity:
          multiple: true
          filter:
          - domain:
            - binary_sensor
            device_class:
            - door
            - garage_door
            - lock
            - motion
            - occupancy
            - opening
            - smoke
            - sound
            - vibration
            - window
    sun_entity:
      name: System Settings - Sun Entity
      description: Select the entity that indicates the Sun's position.
      default: sun.sun
      selector:
        entity:
          filter:
          - domain:
            - sun
          multiple: false
mode: parallel
max: 50
trace:
  stored_traces: 10
trigger_variables:
  nspanel_deviceid: !input nspanel_name
  nspanel_entities: '{{ device_entities(nspanel_deviceid) }}'
  device_name: "{%- if nspanel_entities | count > 0 %}\n  {{ (nspanel_entities | selectattr(None,
    \"search\", \"_nextion_display\") | list | first).split(\".\")[1].split(\"_nextion_display\")[0]
    }}\n{%- elif nspanel_deviceid is string %}\n  {{ nspanel_deviceid | regex_replace(\"[^a-zA-Z0-9]\",
    \"_\") | regex_replace(\"_+\", \"_\") | lower }}\n{%- endif %}\n"
  device_name_sensor: "{{\n  nspanel_entities | selectattr(None, \"search\", \"sensor.*_device_name\")
    | list | last\n  if nspanel_entities | selectattr(None, \"search\", \"sensor.*_device_name\")
    | list | count > 0\n  else (\"sensor.\" ~ device_name ~ \"_device_name\")\n}}\n"
  relay01_entity: "{{\n  nspanel_entities | selectattr(None, \"search\", \"switch.*_relay_1\")
    | list | last\n  if nspanel_entities | selectattr(None, \"search\", \"switch.*_relay_1\")
    | list | count > 0\n  else (\"switch.\" ~ device_name ~ \"_relay_1\")\n}}\n"
  relay02_entity: "{{\n  nspanel_entities | selectattr(None, \"search\", \"switch.*_relay_2\")
    | list | last\n  if nspanel_entities | selectattr(None, \"search\", \"switch.*_relay_2\")
    | list | count > 0\n  else (\"switch.\" ~ device_name ~ \"_relay_2\")\n}}\n"
  currentpage: "{{\n  nspanel_entities | selectattr(None, \"search\", \"sensor.*_current_page\")
    | list | last\n  if nspanel_entities | selectattr(None, \"search\", \"sensor.*_current_page\")
    | list | count > 0\n  else (\"sensor.\" ~ device_name ~ \"_current_page\")\n}}\n"
  detailed_entity: "{{\n  nspanel_entities | selectattr(None, \"search\", \"sensor.*_detailed_entity\")
    | list | last\n  if nspanel_entities | selectattr(None, \"search\", \"sensor.*_detailed_entity\")
    | list | count > 0\n  else (\"sensor.\" ~ device_name ~ \"_detailed_entity\")\n}}\n"
  nspaneltemp: "{{\n  nspanel_entities | selectattr(None, \"search\", \"sensor.*_temperature\")
    | list | last\n  if nspanel_entities | selectattr(None, \"search\", \"sensor.*_temperature\")
    | list | count > 0\n  else (\"sensor.\" ~ device_name ~ \"_temperature\")\n}}\n"
  thermostat_embedded: "{{\n  nspanel_entities | selectattr(None, \"search\", \"climate.*_thermostat\")
    | list | last\n  if nspanel_entities | selectattr(None, \"search\", \"climate.*_thermostat\")
    | list | count > 0\n  else (\"climate.\" ~ device_name ~ \"_thermostat\")\n}}\n"
  utilities_line_reference:
    page01:
      main: !input utilities_page01_main_line_reference
      group01: !input utilities_page01_group01_line_reference
      group02: !input utilities_page01_group02_line_reference
      group03: !input utilities_page01_group03_line_reference
      group04: !input utilities_page01_group04_line_reference
      group05: !input utilities_page01_group05_line_reference
      group06: !input utilities_page01_group06_line_reference
variables:
  blueprint_version: 4.3.4
  pages:
    current: '{{ states(currentpage) }}'
    home: home
    weatherpages:
    - weather01
    - weather02
    - weather03
    - weather04
    - weather05
    climate: climate
    settings: settings
    boot: boot
    screensaver: screensaver
    light: light
    cover: cover
    fan: fan
    buttonpages:
    - buttonpage01
    - buttonpage02
    - buttonpage03
    - buttonpage04
    notification: notification
    qrcode: qrcode
    entitypages:
    - entitypage01
    - entitypage02
    - entitypage03
    - entitypage04
    alarm: alarm
    keyb_num: keyb_num
    media_player: media_player
    confirm: confirm
    utilities: utilities
  home_page_background_update: !input home_page_background_update
  indoor_temperature_sensor_input: !input indoortemp
  indoor_temperature_sensor: "{{\n  indoor_temperature_sensor_input\n  if indoor_temperature_sensor_input
    is string and indoor_temperature_sensor_input.split(\".\") | count == 2\n  else
    nspaneltemp\n}}\n"
  embedded_indoor_temperature: '{{ indoor_temperature_sensor == nspaneltemp }}'
trigger:
- id: nspanel_event
  platform: event
  event_type: esphome.nspanel_ha_blueprint
  event_data:
    device_id: !input nspanel_name
- platform: event
  event_type: automation_reloaded
  id: automation_reloaded
- platform: homeassistant
  event: start
  id: ha_started
- platform: state
  entity_id: !input wake_up_sensors
  to: 'on'
  id: wake_up_sensors
- platform: state
  entity_id: !input entity01
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity02
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity03
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity04
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity05
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity06
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity07
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity08
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity09
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity10
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity11
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity12
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity13
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity14
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity15
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity16
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity17
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity18
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity19
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity20
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity21
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity22
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity23
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity24
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity25
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity26
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity27
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity28
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity29
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity30
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity31
  id: trigger_buttonpage_state
- platform: state
  entity_id: !input entity32
  id: trigger_buttonpage_state
- alias: entities_entity01
  platform: state
  entity_id: !input entities_entity01
  id: trigger_entitypage_state
- alias: entities_entity02
  platform: state
  entity_id: !input entities_entity02
  id: trigger_entitypage_state
- alias: entities_entity03
  platform: state
  entity_id: !input entities_entity03
  id: trigger_entitypage_state
- alias: entities_entity04
  platform: state
  entity_id: !input entities_entity04
  id: trigger_entitypage_state
- alias: entities_entity05
  platform: state
  entity_id: !input entities_entity05
  id: trigger_entitypage_state
- alias: entities_entity06
  platform: state
  entity_id: !input entities_entity06
  id: trigger_entitypage_state
- alias: entities_entity07
  platform: state
  entity_id: !input entities_entity07
  id: trigger_entitypage_state
- alias: entities_entity08
  platform: state
  entity_id: !input entities_entity08
  id: trigger_entitypage_state
- alias: entities_entity09
  platform: state
  entity_id: !input entities_entity09
  id: trigger_entitypage_state
- alias: entities_entity10
  platform: state
  entity_id: !input entities_entity10
  id: trigger_entitypage_state
- alias: entities_entity11
  platform: state
  entity_id: !input entities_entity11
  id: trigger_entitypage_state
- alias: entities_entity12
  platform: state
  entity_id: !input entities_entity12
  id: trigger_entitypage_state
- alias: entities_entity13
  platform: state
  entity_id: !input entities_entity13
  id: trigger_entitypage_state
- alias: entities_entity14
  platform: state
  entity_id: !input entities_entity14
  id: trigger_entitypage_state
- alias: entities_entity15
  platform: state
  entity_id: !input entities_entity15
  id: trigger_entitypage_state
- alias: entities_entity16
  platform: state
  entity_id: !input entities_entity16
  id: trigger_entitypage_state
- alias: entities_entity17
  platform: state
  entity_id: !input entities_entity17
  id: trigger_entitypage_state
- alias: entities_entity18
  platform: state
  entity_id: !input entities_entity18
  id: trigger_entitypage_state
- alias: entities_entity19
  platform: state
  entity_id: !input entities_entity19
  id: trigger_entitypage_state
- alias: entities_entity20
  platform: state
  entity_id: !input entities_entity20
  id: trigger_entitypage_state
- alias: entities_entity21
  platform: state
  entity_id: !input entities_entity21
  id: trigger_entitypage_state
- alias: entities_entity22
  platform: state
  entity_id: !input entities_entity22
  id: trigger_entitypage_state
- alias: entities_entity23
  platform: state
  entity_id: !input entities_entity23
  id: trigger_entitypage_state
- alias: entities_entity24
  platform: state
  entity_id: !input entities_entity24
  id: trigger_entitypage_state
- alias: entities_entity25
  platform: state
  entity_id: !input entities_entity25
  id: trigger_entitypage_state
- alias: entities_entity26
  platform: state
  entity_id: !input entities_entity26
  id: trigger_entitypage_state
- alias: entities_entity27
  platform: state
  entity_id: !input entities_entity27
  id: trigger_entitypage_state
- alias: entities_entity28
  platform: state
  entity_id: !input entities_entity28
  id: trigger_entitypage_state
- alias: entities_entity29
  platform: state
  entity_id: !input entities_entity29
  id: trigger_entitypage_state
- alias: entities_entity30
  platform: state
  entity_id: !input entities_entity30
  id: trigger_entitypage_state
- alias: entities_entity31
  platform: state
  entity_id: !input entities_entity31
  id: trigger_entitypage_state
- alias: entities_entity32
  platform: state
  entity_id: !input entities_entity32
  id: trigger_entitypage_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input chip01
  id: trigger_chip_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input chip02
  id: trigger_chip_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input chip03
  id: trigger_chip_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input chip04
  id: trigger_chip_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input chip05
  id: trigger_chip_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input chip06
  id: trigger_chip_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input chip07
  id: trigger_chip_state
- platform: state
  entity_id: !input home_value01
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: home_values_state
- platform: state
  entity_id: !input home_value02
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: home_values_state
- platform: state
  entity_id: !input home_value03
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: home_values_state
- platform: state
  entity_id: !input home_value04
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: home_values_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input home_custom_button01
  id: home_custom_buttons
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input home_custom_button02
  id: home_custom_buttons
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input home_custom_button03
  id: home_custom_buttons
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input home_custom_button04
  id: home_custom_buttons
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input home_custom_button05
  id: home_custom_buttons
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input home_custom_button06
  id: home_custom_buttons
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input alarm
  id: home_custom_buttons
- platform: event
  event_type: state_changed
  event_data:
    entity_id: '{{ relay01_entity }}'
  id: relay01_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: '{{ relay02_entity }}'
  id: relay02_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input climate
  id: climate_state
- platform: state
  entity_id: !input climate_value01
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: trigger_climatepage_value_state
- platform: state
  entity_id: !input climate_value02
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: trigger_climatepage_value_state
- platform: state
  entity_id: !input climate_value03
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: trigger_climatepage_value_state
- platform: state
  entity_id: !input climate_value04
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: trigger_climatepage_value_state
- platform: state
  entity_id: !input climate_button08
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: climate_button08_state
- platform: state
  entity_id: !input climate_button09
  not_to:
  - unknown
  - unavailable
  for:
    seconds: 1
  id: climate_button09_state
- platform: state
  entity_id: !input left_button_entity
  id: left_button_state
- platform: state
  entity_id: !input left_button_state_entity
  id: left_button_alt_state
- platform: state
  entity_id: !input right_button_entity
  id: right_button_state
- platform: state
  entity_id: !input right_button_state_entity
  id: right_button_alt_state
- platform: template
  value_template: '{% set line_ref_id = utilities_line_reference.page01.main %} {%
    set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string
    and line_ref_id.split(".") == 2 else 0 %} {{ ((line_ref_state > 0) - (line_ref_state
    < 0)) }}

    '
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_home_value1
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_home_value2
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_grid_value1
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_grid_value2
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group01_value1
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group01_value2
  id: utilities_page
  for:
    seconds: 1
- platform: template
  value_template: '{% set line_ref_id = utilities_line_reference.page01.group01 %}
    {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string
    and line_ref_id.split(".") == 2 else 0 %} {{ ((line_ref_state > 0) - (line_ref_state
    < 0)) }}

    '
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group02_value1
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group02_value2
  id: utilities_page
  for:
    seconds: 1
- platform: template
  value_template: '{% set line_ref_id = utilities_line_reference.page01.group02 %}
    {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string
    and line_ref_id.split(".") == 2 else 0 %} {{ ((line_ref_state > 0) - (line_ref_state
    < 0)) }}

    '
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group03_value1
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group03_value2
  id: utilities_page
  for:
    seconds: 1
- platform: template
  value_template: '{% set line_ref_id = utilities_line_reference.page01.group03 %}
    {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string
    and line_ref_id.split(".") == 2 else 0 %} {{ ((line_ref_state > 0) - (line_ref_state
    < 0)) }}

    '
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group04_value1
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group04_value2
  id: utilities_page
  for:
    seconds: 1
- platform: template
  value_template: '{% set line_ref_id = utilities_line_reference.page01.group04 %}
    {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string
    and line_ref_id.split(".") == 2 else 0 %} {{ ((line_ref_state > 0) - (line_ref_state
    < 0)) }}

    '
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group05_value1
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group05_value2
  id: utilities_page
  for:
    seconds: 1
- platform: template
  value_template: '{% set line_ref_id = utilities_line_reference.page01.group05 %}
    {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string
    and line_ref_id.split(".") == 2 else 0 %} {{ ((line_ref_state > 0) - (line_ref_state
    < 0)) }}

    '
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group06_value1
  id: utilities_page
  for:
    seconds: 1
- platform: state
  entity_id: !input utilities_page01_group06_value2
  id: utilities_page
  for:
    seconds: 1
- platform: template
  value_template: '{% set line_ref_id = utilities_line_reference.page01.group06 %}
    {% set line_ref_state = (states(line_ref_id) | float(0)) if line_ref_id is string
    and line_ref_id.split(".") == 2 else 0 %} {{ ((line_ref_state > 0) - (line_ref_state
    < 0)) }}

    '
  id: utilities_page
  for:
    seconds: 1
- platform: time_pattern
  minutes: 0
  seconds: 0
  id: time_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input outdoortemp
  id: outdoortemp_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input indoortemp
  id: indoortemp_state
- platform: event
  event_type: state_changed
  event_data:
    entity_id: !input weather_entity
  id: weather_state_change
- platform: state
  entity_id: !input sun_entity
  id: sun_state_change
- platform: event
  event_type: folder_watcher
  event_data:
    event_type: modified
    path: !input tft_path
  id: tft_upload
condition:
- '{{ trigger.id in ["automation_reloaded", "ha_started", "nspanel_event"] or has_value(device_name_sensor)
  }}'
- "{{\n  trigger.id not in [\"home_values_state\", \"trigger_chip_state\"] or\n  home_page_background_update
  or\n  pages.current == pages.home\n}}\n"
- '{{ trigger.id != "utilities_page" or pages.current == pages.utilities }}

  '
- '{{ trigger.id != "trigger_entitypage_state" or pages.current in pages.entitypages
  }}

  '
- "{{\n  pages.current == pages.climate or\n  trigger.id not in [\"trigger_climatepage_value_state\",
  \"climate_button08_state\", \"climate_button09_state\"]\n}}\n"
- "{{\n  trigger.id != \"trigger_buttonpage_state\" or\n  pages.current in pages.buttonpages
  or\n  (pages.current in [pages.light, pages.cover, pages.climate, pages.fan, pages.alarm]
  and trigger.entity_id is defined and trigger.entity_id == states(detailed_entity))\n}}\n"
- "{{\n  trigger.id != \"indoortemp_state\" or\n  ((home_page_background_update or
  pages.current == pages.home ) and not embedded_indoor_temperature)\n}}\n"
- condition: or
  conditions:
  - '{{ trigger.id != "home_custom_buttons" }}'
  - condition: and
    conditions:
    - '{{ home_page_background_update or pages.current == pages.home }}'
    - '{{ trigger.event is defined and trigger.event.data is defined }}'
    - '{{ trigger.event.data.entity_id is defined }}'
    - '{{ trigger.event.data.entity_id is not match "media_player." }}'
  - condition: and
    conditions:
    - '{{ home_page_background_update or pages.current == pages.home }}'
    - '{{ trigger.event is defined and trigger.event.data is defined }}'
    - '{{ trigger.event.data.new_state is defined and trigger.event.data.new_state.state
      is defined }}'
    - '{{ trigger.event.data.old_state is defined and trigger.event.data.old_state.state
      is defined }}'
    - '{{ trigger.event.data.new_state.state != trigger.event.data.old_state.state
      }}'
action:
- variables:
    nspanel_name: "{{\n  trigger.event.data.device_name\n  if\n    trigger is defined
      and\n    trigger.event is defined and\n    trigger.event.data is defined and\n
      \   trigger.event.data.device_name is defined and\n    trigger.event.data.device_name
      is string and trigger.event.data.device_name | length > 0\n  else\n    (\n      states(device_name_sensor)\n
      \     if has_value(device_name_sensor)\n      else device_name\n    )\n}}\n"
    date_format_temp: !input date_format
    date_format: '{{ date_format_temp if date_format_temp not in ["%d.%m", "%d/%m",
      "%-d/%-m", "%-m/%-d"] else "%A, " ~ date_format_temp }}'
    sun_entity_input: !input sun_entity
    sun_entity: "{{\n  sun_entity_input\n  if\n    sun_entity_input is string and\n
      \   sun_entity_input.split(\"sun.\") | count == 2\n  else ((states.sun | map(attribute=\"entity_id\")
      | list | first) if states.sun | selectattr(\"entity_id\", \"defined\") | list
      | count > 0 else None)\n}}\n"
    sun_is_up: '{{ is_state(sun_entity, "above_horizon") if sun_entity is string and
      sun_entity.split("sun.") | count == 2 else true }}'
    device_class_icons:
      cover:
        awning-closed: window-closed
        awning-closing: arrow-down-box
        awning-open: window-open
        awning-opening: arrow-up-box
        blind-closed: blinds-horizontal-closed
        blind-closing: arrow-down-box
        blind-open: blinds-horizontal
        blind-opening: arrow-up-box
        curtain-closed: curtains-closed
        curtains-closing: arrow-collapse-horizontal
        curtains-open: curtains-open
        arrow-split-vertical: curtains-open
        damper-closed: circle-slice-8
        damper-closing: circle
        damper-open: circle
        damper-opening: circle
        door-closed: door-closed
        door-closing: door-open
        door-open: door-open
        door-opening: door-open
        garage-closed: garage
        garage-closing: arrow-down-box
        garage-open: garage-open
        garage-opening: arrow-up-box
        gate-closed: gate
        gate-closing: gate-arrow-right
        gate-open: gate-open
        gate-opening: gate-arrow-left
        shade-closed: roller-shade-closed
        shade-closing: arrow-down-box
        shade-open: roller-shade
        shade-opening: arrow-up-box
        shutter-closed: window-shutter
        shutter-closing: arrow-down-box
        shutter-open: window-shutter-open
        shutter-opening: arrow-up-box
        window-closed: window-closed
        window-closing: arrow-down-box
        window-open: window-open
        window-opening: arrow-up-box
      binary_sensor:
        battery-on: battery-outline
        battery-off: battery
        battery_charging-on: battery-charging
        battery_charging-off: battery
        carbon_monoxide-on: smoke-detector-alert
        carbon_monoxide-off: smoke-detector
        cold-on: snowflake
        cold-off: thermometer
        connectivity-on: check-network-outline
        connectivity-off: close-network-outline
        door-on: door-open
        door-off: door-closed
        garage_door-on: garage-open
        garage_door-off: garage
        gas-on: alert-circle
        gas-off: check-circle
        heat-on: fire
        heat-off: thermometer
        light-on: brightness-7
        light-off: brightness-5
        lock-on: lock-open
        lock-off: lock
        moisture-on: water
        moisture-off: water-off
        motion-on: motion-sensor
        motion-off: motion-sensor-off
        moving-on: octagon
        moving-off: arrow-right
        occupancy-on: home
        occupancy-off: home-outline
        opening-on: square-outline
        opening-off: square
        plug-on: power-plug
        plug-off: power-plug-off
        power-on: power-plug
        power-off: power-plug-off
        presence-on: home
        presence-off: home-outline
        problem-on: alert-circle
        problem-off: check-circle
        running-on: play
        running-off: stop
        safety-on: alert-circle
        safety-off: check-circle
        smoke-on: smoke-detector-variant-alert
        smoke-off: smoke-detector-variant
        sound-on: music-note
        sound-off: music-note-off
        tamper-on: alert-circle
        tamper-off: check-circle
        update-on: package-up
        update-off: package
        vibration-on: vibrate
        vibration-off: crop-portrait
        window-on: window-open
        window-off: window-closed
      sensor:
        apparent_power: flash
        aqi: air-filter
        atmospheric_pressure: thermometer-lines
        battery: battery
        carbon_dioxide: molecule-co2
        carbon_monoxide: molecule-co
        current: current-ac
        data_rate: transmission-tower
        data_size: database
        date: calendar
        distance: arrow-left-right
        duration: progress-clock
        energy: lightning-bolt
        energy_storage: car-battery
        enum: eye
        frequency: sine-wave
        gas: meter-gas
        humidity: water-percent
        illuminance: brightness-5
        irradiance: sun-wireless
        moisture: water-percent
        monetary: cash
        nitrogen_dioxide: molecule
        nitrogen_monoxide: molecule
        nitrous_oxide: molecule
        ozone: molecule
        ph: ph
        pm1: molecule
        pm10: molecule
        pm25: molecule
        power: flash
        power_factor: angle-acute
        precipitation: weather-rainy
        precipitation_intensity: weather-pouring
        pressure: gauge
        reactive_power: flash
        signal_strength: wifi
        sound_pressure: ear-hearing
        speed: speedometer
        sulphur_dioxide: molecule
        temperature: thermometer
        timestamp: clock
        volatile_organic_compounds: molecule
        volatile_organic_compounds_parts: molecule
        voltage: sine-wave
        volume: car-coolant-level
        water: water
        weight: weight
        wind_speed: weather-windy
      switch:
        outlet-on: power-plug
        outlet-off: power-plug-off
        switch-on: toggle-switch-variant
        switch-off: toggle-switch-variant-off"
    all_icons:
      blank: "\uFFFF"
      void: "\uFFFF"
      unknown: 
      unavailable: 
      ab-testing: 
      abacus: 
      abjad-arabic: 
      abjad-hebrew: 
      abugida-devanagari: 
      abugida-thai: 
      access-point: 
      access-point-check: 
      access-point-minus: 
      access-point-network: 
      access-point-network-off: 
      access-point-off: 
      access-point-plus: 
      access-point-remove: 
      account: 
      account-alert: 
      account-alert-outline: 
      account-arrow-down: 
      account-arrow-down-outline: 
      account-arrow-left: 
      account-arrow-left-outline: 
      account-arrow-right: 
      account-arrow-right-outline: 
      account-arrow-up: 
      account-arrow-up-outline: 
      account-box: 
      account-box-multiple: 
      account-box-multiple-outline: 
      account-box-outline: 
      account-cancel: 
      account-cancel-outline: 
      account-cash: 
      account-cash-outline: 
      account-check: 
      account-check-outline: 
      account-child: 
      account-child-circle: 
      account-child-outline: 
      account-circle: 
      account-circle-outline: 
      account-clock: 
      account-clock-outline: 
      account-cog: 
      account-cog-outline: 
      account-convert: 
      account-convert-outline: 
      account-cowboy-hat: 
      account-cowboy-hat-outline: 
      account-details: 
      account-details-outline: 
      account-edit: 
      account-edit-outline: 
      account-eye: 
      account-eye-outline: 
      account-filter: 
      account-filter-outline: 
      account-group: 
      account-group-outline: 
      account-hard-hat: 
      account-hard-hat-outline: 羽
      account-heart: 
      account-heart-outline: 
      account-injury: 
      account-injury-outline: 
      account-key: 
      account-key-outline: 
      account-lock: 
      account-lock-open: 寧
      account-lock-open-outline: 怒
      account-lock-outline: 
      account-minus: 
      account-minus-outline: 
      account-multiple: 
      account-multiple-check: 
      account-multiple-check-outline: 
      account-multiple-minus: 
      account-multiple-minus-outline: 
      account-multiple-outline: 
      account-multiple-plus: 
      account-multiple-plus-outline: 
      account-multiple-remove: 
      account-multiple-remove-outline: 
      account-music: 
      account-music-outline: 
      account-network: 
      account-network-outline: 
      account-off: 
      account-off-outline: 
      account-outline: 
      account-plus: 
      account-plus-outline: 
      account-question: 
      account-question-outline: 
      account-reactivate: 
      account-reactivate-outline: 
      account-remove: 
      account-remove-outline: 
      account-school: 﨟
      account-school-outline: 蘒
      account-search: 
      account-search-outline: 
      account-settings: 
      account-settings-outline: 
      account-star: 
      account-star-outline: 
      account-supervisor: 
      account-supervisor-circle: 
      account-supervisor-circle-outline: 
      account-supervisor-outline: 
      account-switch: 
      account-switch-outline: 
      account-sync: 駱
      account-sync-outline: 亂
      account-tie: 
      account-tie-hat: 
      account-tie-hat-outline: 
      account-tie-outline: 
      account-tie-voice: 
      account-tie-voice-off: 
      account-tie-voice-off-outline: 
      account-tie-voice-outline: 
      account-tie-woman: 懲
      account-voice: 
      account-voice-off: 
      account-wrench: 
      account-wrench-outline: 
      adjust: 
      advertisements: 朗
      advertisements-off: 浪
      air-conditioner: 
      air-filter: 
      air-horn: 
      air-humidifier: 
      air-humidifier-off: 
      air-purifier: 
      airbag: 
      airballoon: 
      airballoon-outline: 
      airplane: 
      airplane-alert: 
      airplane-check: 
      airplane-clock: 
      airplane-cog: 
      airplane-edit: 
      airplane-landing: 
      airplane-marker: 
      airplane-minus: 
      airplane-off: 
      airplane-plus: 
      airplane-remove: 
      airplane-search: 
      airplane-settings: 
      airplane-takeoff: 
      airport: 
      alarm: 
      alarm-bell: 
      alarm-check: 
      alarm-light: 
      alarm-light-off: 
      alarm-light-off-outline: 
      alarm-light-outline: 
      alarm-multiple: 
      alarm-note: 
      alarm-note-off: 
      alarm-off: 
      alarm-panel: 
      alarm-panel-outline: 
      alarm-plus: 
      alarm-snooze: 
      album: 
      alert: 
      alert-box: 
      alert-box-outline: 
      alert-circle: 
      alert-circle-check: 
      alert-circle-check-outline: 
      alert-circle-outline: 
      alert-decagram: 
      alert-decagram-outline: 
      alert-minus: 
      alert-minus-outline: 
      alert-octagon: 
      alert-octagon-outline: 
      alert-octagram: 
      alert-octagram-outline: 
      alert-outline: 
      alert-plus: 
      alert-plus-outline: 
      alert-remove: 
      alert-remove-outline: 
      alert-rhombus: 
      alert-rhombus-outline: 
      alien: 
      alien-outline: 
      align-horizontal-center: 
      align-horizontal-distribute: 率
      align-horizontal-left: 
      align-horizontal-right: 
      align-vertical-bottom: 
      align-vertical-center: 
      align-vertical-distribute: 異
      align-vertical-top: 
      all-inclusive: 
      all-inclusive-box: 
      all-inclusive-box-outline: 
      allergy: 
      alpha: 
      alpha-a: 
      alpha-a-box: 
      alpha-a-box-outline: 
      alpha-a-circle: 
      alpha-a-circle-outline: 
      alpha-b: 
      alpha-b-box: 
      alpha-b-box-outline: 
      alpha-b-circle: 
      alpha-b-circle-outline: 
      alpha-c: 
      alpha-c-box: 
      alpha-c-box-outline: 
      alpha-c-circle: 
      alpha-c-circle-outline: 
      alpha-d: 
      alpha-d-box: 
      alpha-d-box-outline: 
      alpha-d-circle: 
      alpha-d-circle-outline: 
      alpha-e: 
      alpha-e-box: 
      alpha-e-box-outline: 
      alpha-e-circle: 
      alpha-e-circle-outline: 
      alpha-f: 
      alpha-f-box: 
      alpha-f-box-outline: 
      alpha-f-circle: 
      alpha-f-circle-outline: 
      alpha-g: 
      alpha-g-box: 
      alpha-g-box-outline: 
      alpha-g-circle: 
      alpha-g-circle-outline: 
      alpha-h: 
      alpha-h-box: 
      alpha-h-box-outline: 
      alpha-h-circle: 
      alpha-h-circle-outline: 
      alpha-i: 
      alpha-i-box: 
      alpha-i-box-outline: 
      alpha-i-circle: 
      alpha-i-circle-outline: 
      alpha-j: 
      alpha-j-box: 
      alpha-j-box-outline: 
      alpha-j-circle: 
      alpha-j-circle-outline: 
      alpha-k: 
      alpha-k-box: 
      alpha-k-box-outline: 
      alpha-k-circle: 
      alpha-k-circle-outline: 
      alpha-l: 
      alpha-l-box: 
      alpha-l-box-outline: 
      alpha-l-circle: 
      alpha-l-circle-outline: 
      alpha-m: 
      alpha-m-box: 
      alpha-m-box-outline: 
      alpha-m-circle: 
      alpha-m-circle-outline: 
      alpha-n: 
      alpha-n-box: 
      alpha-n-box-outline: 
      alpha-n-circle: 
      alpha-n-circle-outline: 
      alpha-o: 
      alpha-o-box: 
      alpha-o-box-outline: 
      alpha-o-circle: 
      alpha-o-circle-outline: 
      alpha-p: 
      alpha-p-box: 
      alpha-p-box-outline: 
      alpha-p-circle: 
      alpha-p-circle-outline: 
      alpha-q: 
      alpha-q-box: 
      alpha-q-box-outline: 
      alpha-q-circle: 
      alpha-q-circle-outline: 
      alpha-r: 
      alpha-r-box: 
      alpha-r-box-outline: 
      alpha-r-circle: 
      alpha-r-circle-outline: 
      alpha-s: 
      alpha-s-box: 
      alpha-s-box-outline: 
      alpha-s-circle: 
      alpha-s-circle-outline: 
      alpha-t: 
      alpha-t-box: 
      alpha-t-box-outline: 
      alpha-t-circle: 
      alpha-t-circle-outline: 
      alpha-u: 
      alpha-u-box: 
      alpha-u-box-outline: 
      alpha-u-circle: 
      alpha-u-circle-outline: 
      alpha-v: 
      alpha-v-box: 
      alpha-v-box-outline: 
      alpha-v-circle: 
      alpha-v-circle-outline: 
      alpha-w: 
      alpha-w-box: 
      alpha-w-box-outline: 
      alpha-w-circle: 
      alpha-w-circle-outline: 
      alpha-x: 
      alpha-x-box: 
      alpha-x-box-outline: 
      alpha-x-circle: 
      alpha-x-circle-outline: 
      alpha-y: 
      alpha-y-box: 
      alpha-y-box-outline: 
      alpha-y-circle: 
      alpha-y-circle-outline: 
      alpha-z: 
      alpha-z-box: 
      alpha-z-box-outline: 
      alpha-z-circle: 
      alpha-z-circle-outline: 
      alphabet-aurebesh: 
      alphabet-cyrillic: 
      alphabet-greek: 
      alphabet-latin: 
      alphabet-piqad: 
      alphabet-tengwar: 
      alphabetical: 
      alphabetical-off: 
      alphabetical-variant: 
      alphabetical-variant-off: 
      altimeter: 
      ambulance: 
      ammunition: 
      ampersand: 
      amplifier: 
      amplifier-off: 
      anchor: 
      android: 
      android-messages: 
      android-studio: 
      angle-acute: 
      angle-obtuse: 
      angle-right: 
      angular: 
      angularjs: 
      animation: 
      animation-outline: 
      animation-play: 
      animation-play-outline: 
      ansible: 
      antenna: 
      anvil: 
      apache-kafka: 
      api: 
      api-off: 
      apple: 
      apple-finder: 
      apple-icloud: 
      apple-ios: 
      apple-keyboard-caps: 
      apple-keyboard-command: 
      apple-keyboard-control: 
      apple-keyboard-option: 
      apple-keyboard-shift: 
      apple-safari: 
      application: 
      application-array: 
      application-array-outline: 
      application-braces: 
      application-braces-outline: 
      application-brackets: 
      application-brackets-outline: 
      application-cog: 
      application-cog-outline: 
      application-edit: 
      application-edit-outline: 
      application-export: 
      application-import: 
      application-outline: 
      application-parentheses: 
      application-parentheses-outline: 
      application-settings: 
      application-settings-outline: 
      application-variable: 
      application-variable-outline: 
      approximately-equal: 
      approximately-equal-box: 
      apps: 
      apps-box: 
      arch: 
      archive: 
      archive-alert: 
      archive-alert-outline: 
      archive-arrow-down: 
      archive-arrow-down-outline: 
      archive-arrow-up: 
      archive-arrow-up-outline: 
      archive-cancel: 
      archive-cancel-outline: 
      archive-check: 
      archive-check-outline: 
      archive-clock: 
      archive-clock-outline: 
      archive-cog: 
      archive-cog-outline: 
      archive-edit: 
      archive-edit-outline: 
      archive-eye: 
      archive-eye-outline: 
      archive-lock: 
      archive-lock-open: 
      archive-lock-open-outline: 
      archive-lock-outline: 
      archive-marker: 
      archive-marker-outline: 
      archive-minus: 
      archive-minus-outline: 
      archive-music: 
      archive-music-outline: 
      archive-off: 
      archive-off-outline: 
      archive-outline: 
      archive-plus: 
      archive-plus-outline: 
      archive-refresh: 
      archive-refresh-outline: 
      archive-remove: 
      archive-remove-outline: 
      archive-search: 
      archive-search-outline: 
      archive-settings: 
      archive-settings-outline: 
      archive-star: 
      archive-star-outline: 
      archive-sync: 
      archive-sync-outline: 
      arm-flex: 
      arm-flex-outline: 
      arrange-bring-forward: 
      arrange-bring-to-front: 
      arrange-send-backward: 
      arrange-send-to-back: 
      arrow-all: 
      arrow-bottom-left: 
      arrow-bottom-left-bold-box: 北
      arrow-bottom-left-bold-box-outline: 磻
      arrow-bottom-left-bold-outline: 
      arrow-bottom-left-thick: 
      arrow-bottom-left-thin: 例
      arrow-bottom-left-thin-circle-outline: 
      arrow-bottom-right: 
      arrow-bottom-right-bold-box: 便
      arrow-bottom-right-bold-box-outline: 復
      arrow-bottom-right-bold-outline: 
      arrow-bottom-right-thick: 
      arrow-bottom-right-thin: 禮
      arrow-bottom-right-thin-circle-outline: 
      arrow-collapse: 
      arrow-collapse-all: 
      arrow-collapse-down: 
      arrow-collapse-horizontal: 
      arrow-collapse-left: 
      arrow-collapse-right: 
      arrow-collapse-up: 
      arrow-collapse-vertical: 
      arrow-decision: 
      arrow-decision-auto: 
      arrow-decision-auto-outline: 
      arrow-decision-outline: 
      arrow-down: 
      arrow-down-bold: 
      arrow-down-bold-box: 
      arrow-down-bold-box-outline: 
      arrow-down-bold-circle: 
      arrow-down-bold-circle-outline: 
      arrow-down-bold-hexagon-outline: 
      arrow-down-bold-outline: 
      arrow-down-box: 
      arrow-down-circle: 
      arrow-down-circle-outline: 
      arrow-down-drop-circle: 
      arrow-down-drop-circle-outline: 
      arrow-down-left: 
      arrow-down-left-bold: 
      arrow-down-right: 
      arrow-down-right-bold: 
      arrow-down-thick: 
      arrow-down-thin: 零
      arrow-down-thin-circle-outline: 
      arrow-expand: 
      arrow-expand-all: 
      arrow-expand-down: 
      arrow-expand-horizontal: 
      arrow-expand-left: 
      arrow-expand-right: 
      arrow-expand-up: 
      arrow-expand-vertical: 
      arrow-horizontal-lock: 
      arrow-left: 
      arrow-left-bold: 
      arrow-left-bold-box: 
      arrow-left-bold-box-outline: 
      arrow-left-bold-circle: 
      arrow-left-bold-circle-outline: 
      arrow-left-bold-hexagon-outline: 
      arrow-left-bold-outline: 
      arrow-left-bottom: 
      arrow-left-bottom-bold: 
      arrow-left-box: 
      arrow-left-circle: 
      arrow-left-circle-outline: 
      arrow-left-drop-circle: 
      arrow-left-drop-circle-outline: 
      arrow-left-right: 
      arrow-left-right-bold: 
      arrow-left-right-bold-outline: 
      arrow-left-thick: 
      arrow-left-thin: 聆
      arrow-left-thin-circle-outline: 
      arrow-left-top: 
      arrow-left-top-bold: 
      arrow-projectile: 
      arrow-projectile-multiple: 
      arrow-right: 
      arrow-right-bold: 
      arrow-right-bold-box: 
      arrow-right-bold-box-outline: 
      arrow-right-bold-circle: 
      arrow-right-bold-circle-outline: 
      arrow-right-bold-hexagon-outline: 
      arrow-right-bold-outline: 
      arrow-right-bottom: 
      arrow-right-bottom-bold: 
      arrow-right-box: 
      arrow-right-circle: 
      arrow-right-circle-outline: 
      arrow-right-drop-circle: 
      arrow-right-drop-circle-outline: 
      arrow-right-thick: 
      arrow-right-thin: 羚
      arrow-right-thin-circle-outline: 
      arrow-right-top: 
      arrow-right-top-bold: 
      arrow-split-horizontal: 
      arrow-split-vertical: 
      arrow-top-left: 
      arrow-top-left-bold-box: 不
      arrow-top-left-bold-box-outline: 泌
      arrow-top-left-bold-outline: 
      arrow-top-left-bottom-right: 
      arrow-top-left-bottom-right-bold: 
      arrow-top-left-thick: 
      arrow-top-left-thin: 領
      arrow-top-left-thin-circle-outline: 
      arrow-top-right: 
      arrow-top-right-bold-box: 數
      arrow-top-right-bold-box-outline: 索
      arrow-top-right-bold-outline: 
      arrow-top-right-bottom-left: 
      arrow-top-right-bottom-left-bold: 
      arrow-top-right-thick: 
      arrow-top-right-thin: 靈
      arrow-top-right-thin-circle-outline: 
      arrow-u-down-left: 
      arrow-u-down-left-bold: 
      arrow-u-down-right: 
      arrow-u-down-right-bold: 
      arrow-u-left-bottom: 
      arrow-u-left-bottom-bold: 
      arrow-u-left-top: 
      arrow-u-left-top-bold: 
      arrow-u-right-bottom: 
      arrow-u-right-bottom-bold: 
      arrow-u-right-top: 
      arrow-u-right-top-bold: 
      arrow-u-up-left: 
      arrow-u-up-left-bold: 
      arrow-u-up-right: 
      arrow-u-up-right-bold: 
      arrow-up: 
      arrow-up-bold: 
      arrow-up-bold-box: 
      arrow-up-bold-box-outline: 
      arrow-up-bold-circle: 
      arrow-up-bold-circle-outline: 
      arrow-up-bold-hexagon-outline: 
      arrow-up-bold-outline: 
      arrow-up-box: 
      arrow-up-circle: 
      arrow-up-circle-outline: 
      arrow-up-down: 
      arrow-up-down-bold: 
      arrow-up-down-bold-outline: 
      arrow-up-drop-circle: 
      arrow-up-drop-circle-outline: 
      arrow-up-left: 
      arrow-up-left-bold: 
      arrow-up-right: 
      arrow-up-right-bold: 
      arrow-up-thick: 
      arrow-up-thin: 鈴
      arrow-up-thin-circle-outline: 
      arrow-vertical-lock: 
      artstation: 
      aspect-ratio: 
      assistant: 
      asterisk: 
      asterisk-circle-outline: 都
      at: 
      atlassian: 
      atm: 
      atom: 
      atom-variant: 
      attachment: 
      attachment-check: 變
      attachment-lock: 遼
      attachment-minus: 贈
      attachment-off: 輸
      attachment-plus: 遲
      attachment-remove: 醙
      audio-input-rca: 
      audio-input-stereo-minijack: 
      audio-input-xlr: 
      audio-video: 
      audio-video-off: 
      augmented-reality: 
      auto-download: 
      auto-fix: 
      auto-upload: 
      autorenew: 
      autorenew-off: 罹
      av-timer: 
      aws: 
      axe: 
      axe-battle: 
      axis: 
      axis-arrow: 
      axis-arrow-info: 
      axis-arrow-lock: 
      axis-lock: 
      axis-x-arrow: 
      axis-x-arrow-lock: 
      axis-x-rotate-clockwise: 
      axis-x-rotate-counterclockwise: 
      axis-x-y-arrow-lock: 
      axis-y-arrow: 
      axis-y-arrow-lock: 
      axis-y-rotate-clockwise: 
      axis-y-rotate-counterclockwise: 
      axis-z-arrow: 
      axis-z-arrow-lock: 
      axis-z-rotate-clockwise: 
      axis-z-rotate-counterclockwise: 
      babel: 
      baby: 
      baby-bottle: 
      baby-bottle-outline: 
      baby-buggy: 
      baby-carriage: 
      baby-carriage-off: 
      baby-face: 
      baby-face-outline: 
      backburger: 
      backspace: 
      backspace-outline: 
      backspace-reverse: 
      backspace-reverse-outline: 
      backup-restore: 
      bacteria: 
      bacteria-outline: 
      badge-account: 
      badge-account-alert: 
      badge-account-alert-outline: 
      badge-account-horizontal: 
      badge-account-horizontal-outline: 
      badge-account-outline: 
      badminton: 
      bag-carry-on: 
      bag-carry-on-check: 
      bag-carry-on-off: 
      bag-checked: 
      bag-personal: 
      bag-personal-off: 
      bag-personal-off-outline: 
      bag-personal-outline: 
      bag-suitcase: 
      bag-suitcase-off: 
      bag-suitcase-off-outline: 
      bag-suitcase-outline: 
      baguette: 
      balcony: 
      balloon: 
      ballot: 
      ballot-outline: 
      ballot-recount: 
      ballot-recount-outline: 
      bandage: 
      bank: 
      bank-check: 
      bank-minus: 
      bank-off: 
      bank-off-outline: 
      bank-outline: 
      bank-plus: 
      bank-remove: 
      bank-transfer: 
      bank-transfer-in: 
      bank-transfer-out: 
      barcode: 
      barcode-off: 
      barcode-scan: 
      barley: 
      barley-off: 
      barn: 
      barrel: 
      barrel-outline: 﨧
      baseball: 
      baseball-bat: 
      baseball-diamond: 
      baseball-diamond-outline: 
      bash: 
      basket: 
      basket-check: 
      basket-check-outline: 
      basket-fill: 
      basket-minus: 
      basket-minus-outline: 
      basket-off: 
      basket-off-outline: 
      basket-outline: 
      basket-plus: 
      basket-plus-outline: 
      basket-remove: 
      basket-remove-outline: 
      basket-unfill: 
      basketball: 
      basketball-hoop: 
      basketball-hoop-outline: 
      bat: 
      bathtub: 
      bathtub-outline: 
      battery: 
      battery-10: 
      battery-10-bluetooth: 
      battery-20: 
      battery-20-bluetooth: 
      battery-30: 
      battery-30-bluetooth: 
      battery-40: 
      battery-40-bluetooth: 
      battery-50: 
      battery-50-bluetooth: 
      battery-60: 
      battery-60-bluetooth: 
      battery-70: 
      battery-70-bluetooth: 
      battery-80: 
      battery-80-bluetooth: 
      battery-90: 
      battery-90-bluetooth: 
      battery-alert: 
      battery-alert-bluetooth: 
      battery-alert-variant: 
      battery-alert-variant-outline: 
      battery-arrow-down: 
      battery-arrow-down-outline: 
      battery-arrow-up: 
      battery-arrow-up-outline: 
      battery-bluetooth: 
      battery-bluetooth-variant: 
      battery-charging: 
      battery-charging-10: 
      battery-charging-100: 
      battery-charging-20: 
      battery-charging-30: 
      battery-charging-40: 
      battery-charging-50: 
      battery-charging-60: 
      battery-charging-70: 
      battery-charging-80: 
      battery-charging-90: 
      battery-charging-high: 
      battery-charging-low: 
      battery-charging-medium: 
      battery-charging-outline: 
      battery-charging-wireless: 
      battery-charging-wireless-10: 
      battery-charging-wireless-20: 
      battery-charging-wireless-30: 
      battery-charging-wireless-40: 
      battery-charging-wireless-50: 
      battery-charging-wireless-60: 
      battery-charging-wireless-70: 
      battery-charging-wireless-80: 
      battery-charging-wireless-90: 
      battery-charging-wireless-alert: 
      battery-charging-wireless-outline: 
      battery-check: 
      battery-check-outline: 
      battery-clock: 理
      battery-clock-outline: 痢
      battery-heart: 
      battery-heart-outline: 
      battery-heart-variant: 
      battery-high: 
      battery-lock: 
      battery-lock-open: 
      battery-low: 
      battery-medium: 
      battery-minus: 
      battery-minus-outline: 
      battery-minus-variant: 
      battery-negative: 
      battery-off: 
      battery-off-outline: 
      battery-outline: 
      battery-plus: 
      battery-plus-outline: 
      battery-plus-variant: 
      battery-positive: 
      battery-remove: 
      battery-remove-outline: 
      battery-sync: 
      battery-sync-outline: 
      battery-unknown: 
      battery-unknown-bluetooth: 
      beach: 
      beaker: 
      beaker-alert: 
      beaker-alert-outline: 
      beaker-check: 
      beaker-check-outline: 
      beaker-minus: 
      beaker-minus-outline: 
      beaker-outline: 
      beaker-plus: 
      beaker-plus-outline: 
      beaker-question: 
      beaker-question-outline: 
      beaker-remove: 
      beaker-remove-outline: 
      bed: 
      bed-double: 
      bed-double-outline: 
      bed-empty: 
      bed-king: 
      bed-king-outline: 
      bed-outline: 
      bed-queen: 
      bed-queen-outline: 
      bed-single: 
      bed-single-outline: 
      bee: 
      bee-flower: 
      beehive-off-outline: 
      beehive-outline: 
      beekeeper: 
      beer: 
      beer-outline: 
      bell: 
      bell-alert: 
      bell-alert-outline: 
      bell-badge: 
      bell-badge-outline: 
      bell-cancel: 
      bell-cancel-outline: 
      bell-check: 
      bell-check-outline: 
      bell-circle: 
      bell-circle-outline: 
      bell-cog: 﨨
      bell-cog-outline: 﨩
      bell-minus: 
      bell-minus-outline: 
      bell-off: 
      bell-off-outline: 
      bell-outline: 
      bell-plus: 
      bell-plus-outline: 
      bell-remove: 
      bell-remove-outline: 
      bell-ring: 
      bell-ring-outline: 
      bell-sleep: 
      bell-sleep-outline: 
      beta: 
      betamax: 
      biathlon: 
      bicycle: 
      bicycle-basket: 
      bicycle-cargo: 
      bicycle-electric: 
      bicycle-penny-farthing: 
      bike: 
      bike-fast: 
      billboard: 
      billiards: 
      billiards-rack: 
      binoculars: 
      bio: 
      biohazard: 
      bird: 
      bitbucket: 
      bitcoin: 
      black-mesa: 
      blender: 
      blender-outline: 
      blender-software: 
      blinds: 
      blinds-horizontal: 飯
      blinds-horizontal-closed: 飼
      blinds-open: 
      blinds-vertical: 館
      blinds-vertical-closed: 鶴
      block-helper: 
      blood-bag: 
      bluetooth: 
      bluetooth-audio: 
      bluetooth-connect: 
      bluetooth-off: 
      bluetooth-settings: 
      bluetooth-transfer: 
      blur: 
      blur-linear: 
      blur-off: 
      blur-radial: 
      bolt: 
      bomb: 
      bomb-off: 
      bone: 
      bone-off: 履
      book: 
      book-account: 
      book-account-outline: 
      book-alert: 
      book-alert-outline: 
      book-alphabet: 
      book-arrow-down: 
      book-arrow-down-outline: 
      book-arrow-left: 
      book-arrow-left-outline: 
      book-arrow-right: 
      book-arrow-right-outline: 
      book-arrow-up: 
      book-arrow-up-outline: 
      book-cancel: 
      book-cancel-outline: 
      book-check: 
      book-check-outline: 
      book-clock: 
      book-clock-outline: 
      book-cog: 
      book-cog-outline: 
      book-cross: 
      book-edit: 
      book-edit-outline: 
      book-education: 
      book-education-outline: 
      book-heart: 靖
      book-heart-outline: 精
      book-information-variant: 
      book-lock: 
      book-lock-open: 
      book-lock-open-outline: 
      book-lock-outline: 
      book-marker: 
      book-marker-outline: 
      book-minus: 
      book-minus-multiple: 
      book-minus-multiple-outline: 
      book-minus-outline: 
      book-multiple: 
      book-multiple-outline: 
      book-music: 
      book-music-outline: 
      book-off: 
      book-off-outline: 
      book-open: 
      book-open-blank-variant: 
      book-open-outline: 
      book-open-page-variant: 
      book-open-page-variant-outline: 
      book-open-variant: 
      book-outline: 
      book-play: 
      book-play-outline: 
      book-plus: 
      book-plus-multiple: 
      book-plus-multiple-outline: 
      book-plus-outline: 
      book-refresh: 
      book-refresh-outline: 
      book-remove: 
      book-remove-multiple: 
      book-remove-multiple-outline: 
      book-remove-outline: 
      book-search: 
      book-search-outline: 
      book-settings: 
      book-settings-outline: 
      book-sync: 
      book-sync-outline: 
      book-variant: 
      book-variant-multiple: 
      bookmark: 
      bookmark-box-multiple: 參
      bookmark-box-multiple-outline: 塞
      bookmark-check: 
      bookmark-check-outline: 
      bookmark-minus: 
      bookmark-minus-outline: 
      bookmark-multiple: 
      bookmark-multiple-outline: 
      bookmark-music: 
      bookmark-music-outline: 
      bookmark-off: 
      bookmark-off-outline: 
      bookmark-outline: 
      bookmark-plus: 
      bookmark-plus-outline: 
      bookmark-remove: 
      bookmark-remove-outline: 
      bookshelf: 
      boom-gate: 
      boom-gate-alert: 
      boom-gate-alert-outline: 
      boom-gate-arrow-down: 
      boom-gate-arrow-down-outline: 
      boom-gate-arrow-up: 
      boom-gate-arrow-up-outline: 
      boom-gate-outline: 
      boom-gate-up: 
      boom-gate-up-outline: 
      boombox: 
      boomerang: 
      bootstrap: 
      border-all: 
      border-all-variant: 
      border-bottom: 
      border-bottom-variant: 
      border-color: 
      border-horizontal: 
      border-inside: 
      border-left: 
      border-left-variant: 
      border-none: 
      border-none-variant: 
      border-outside: 
      border-right: 
      border-right-variant: 
      border-style: 
      border-top: 
      border-top-variant: 
      border-vertical: 
      bottle-soda: 
      bottle-soda-classic: 
      bottle-soda-classic-outline: 
      bottle-soda-outline: 
      bottle-tonic: 
      bottle-tonic-outline: 
      bottle-tonic-plus: 
      bottle-tonic-plus-outline: 
      bottle-tonic-skull: 
      bottle-tonic-skull-outline: 
      bottle-wine: 
      bottle-wine-outline: 
      bow-arrow: 
      bow-tie: 
      bowl: 
      bowl-mix: 
      bowl-mix-outline: 
      bowl-outline: 
      bowling: 
      box: 
      box-cutter: 
      box-cutter-off: 
      box-shadow: 
      boxing-glove: 
      braille: 
      brain: 
      bread-slice: 
      bread-slice-outline: 
      bridge: 
      briefcase: 
      briefcase-account: 
      briefcase-account-outline: 
      briefcase-arrow-left-right: 戴
      briefcase-arrow-left-right-outline: 揄
      briefcase-arrow-up-down: 搜
      briefcase-arrow-up-down-outline: 摒
      briefcase-check: 
      briefcase-check-outline: 
      briefcase-clock: 
      briefcase-clock-outline: 
      briefcase-download: 
      briefcase-download-outline: 
      briefcase-edit: 
      briefcase-edit-outline: 
      briefcase-eye: 
      briefcase-eye-outline: 
      briefcase-minus: 
      briefcase-minus-outline: 
      briefcase-off: 
      briefcase-off-outline: 
      briefcase-outline: 
      briefcase-plus: 
      briefcase-plus-outline: 
      briefcase-remove: 
      briefcase-remove-outline: 
      briefcase-search: 
      briefcase-search-outline: 
      briefcase-upload: 
      briefcase-upload-outline: 
      briefcase-variant: 
      briefcase-variant-off: 
      briefcase-variant-off-outline: 
      briefcase-variant-outline: 
      brightness-1: 
      brightness-2: 
      brightness-3: 
      brightness-4: 
      brightness-5: 
      brightness-6: 
      brightness-7: 
      brightness-auto: 
      brightness-percent: 
      broadcast: 
      broadcast-off: 
      broom: 
      brush: 
      brush-off: 
      brush-outline: 兀
      brush-variant: 
      bucket: 
      bucket-outline: 
      buffet: 
      bug: 
      bug-check: 
      bug-check-outline: 
      bug-outline: 
      bugle: 
      bulkhead-light: 郞
      bulldozer: 
      bullet: 
      bulletin-board: 
      bullhorn: 
      bullhorn-outline: 
      bullhorn-variant: 省
      bullhorn-variant-outline: 葉
      bullseye: 
      bullseye-arrow: 
      bulma: 
      bunk-bed: 
      bunk-bed-outline: 
      bus: 
      bus-alert: 
      bus-articulated-end: 
      bus-articulated-front: 
      bus-clock: 
      bus-double-decker: 
      bus-electric: 卵
      bus-marker: 
      bus-multiple: 
      bus-school: 
      bus-side: 
      bus-stop: 
      bus-stop-covered: 
      bus-stop-uncovered: 
      butterfly: 
      butterfly-outline: 
      cabin-a-frame: 
      cable-data: 
      cached: 
      cactus: 
      cake: 
      cake-layered: 
      cake-variant: 
      cake-variant-outline: 
      calculator: 
      calculator-variant: 
      calculator-variant-outline: 
      calendar: 
      calendar-account: 
      calendar-account-outline: 
      calendar-alert: 
      calendar-arrow-left: 
      calendar-arrow-right: 
      calendar-blank: 
      calendar-blank-multiple: 
      calendar-blank-outline: 
      calendar-check: 
      calendar-check-outline: 
      calendar-clock: 
      calendar-clock-outline: 
      calendar-collapse-horizontal: 
      calendar-cursor: 
      calendar-edit: 
      calendar-end: 
      calendar-expand-horizontal: 
      calendar-export: 
      calendar-heart: 
      calendar-import: 
      calendar-lock: 
      calendar-lock-outline: 
      calendar-minus: 
      calendar-month: 
      calendar-month-outline: 
      calendar-multiple: 
      calendar-multiple-check: 
      calendar-multiselect: 
      calendar-outline: 
      calendar-plus: 
      calendar-question: 
      calendar-range: 
      calendar-range-outline: 
      calendar-refresh: 
      calendar-refresh-outline: 
      calendar-remove: 
      calendar-remove-outline: 
      calendar-search: 
      calendar-star: 
      calendar-start: 
      calendar-sync: 
      calendar-sync-outline: 
      calendar-text: 
      calendar-text-outline: 
      calendar-today: 
      calendar-today-outline: 隷
      calendar-week: 
      calendar-week-begin: 
      calendar-week-begin-outline: 侮
      calendar-week-end: 僧
      calendar-week-end-outline: 免
      calendar-week-outline: 勉
      calendar-weekend: 
      calendar-weekend-outline: 
      call-made: 
      call-merge: 
      call-missed: 
      call-received: 
      call-split: 
      camcorder: 
      camcorder-off: 
      camera: 
      camera-account: 
      camera-burst: 
      camera-control: 
      camera-document: 
      camera-document-off: 
      camera-enhance: 
      camera-enhance-outline: 
      camera-flip: 
      camera-flip-outline: 
      camera-front: 
      camera-front-variant: 
      camera-gopro: 
      camera-image: 
      camera-iris: 
      camera-lock: 﨓
      camera-lock-outline: 﨔
      camera-marker: 簾
      camera-marker-outline: 獵
      camera-metering-center: 
      camera-metering-matrix: 
      camera-metering-partial: 
      camera-metering-spot: 
      camera-off: 
      camera-off-outline: 料
      camera-outline: 
      camera-party-mode: 
      camera-plus: 
      camera-plus-outline: 
      camera-rear: 
      camera-rear-variant: 
      camera-retake: 
      camera-retake-outline: 
      camera-switch: 
      camera-switch-outline: 
      camera-timer: 
      camera-wireless: 
      camera-wireless-outline: 
      campfire: 
      cancel: 
      candelabra: 
      candelabra-fire: 
      candle: 
      candy: 說
      candy-off: 殺
      candy-off-outline: 辰
      candy-outline: 沈
      candycane: 
      cannabis: 
      cannabis-off: 
      caps-lock: 
      car: 
      car-2-plus: 
      car-3-plus: 
      car-arrow-left: 
      car-arrow-right: 
      car-back: 
      car-battery: 
      car-brake-abs: 
      car-brake-alert: 
      car-brake-fluid-level: 龜
      car-brake-hold: 
      car-brake-low-pressure: 契
      car-brake-parking: 
      car-brake-retarder: 
      car-brake-temperature: 金
      car-brake-worn-linings: 喇
      car-child-seat: 
      car-clock: 拾
      car-clutch: 
      car-cog: 
      car-connected: 
      car-convertible: 
      car-coolant-level: 
      car-cruise-control: 
      car-defrost-front: 
      car-defrost-rear: 
      car-door: 
      car-door-lock: 
      car-electric: 
      car-electric-outline: 
      car-emergency: 
      car-esp: 
      car-estate: 
      car-hatchback: 
      car-info: 
      car-key: 
      car-lifted-pickup: 
      car-light-alert: 奈
      car-light-dimmed: 
      car-light-fog: 
      car-light-high: 
      car-limousine: 
      car-multiple: 
      car-off: 
      car-outline: 
      car-parking-lights: 
      car-pickup: 
      car-seat: 
      car-seat-cooler: 
      car-seat-heater: 
      car-select: 
      car-settings: 
      car-shift-pattern: 
      car-side: 
      car-speed-limiter: 懶
      car-sports: 
      car-tire-alert: 
      car-traction-control: 
      car-turbocharger: 
      car-wash: 
      car-windshield: 
      car-windshield-outline: 
      car-wireless: 
      car-wrench: 
      carabiner: 
      caravan: 
      card: 
      card-account-details: 
      card-account-details-outline: 
      card-account-details-star: 
      card-account-details-star-outline: 
      card-account-mail: 
      card-account-mail-outline: 
      card-account-phone: 
      card-account-phone-outline: 
      card-bulleted: 
      card-bulleted-off: 
      card-bulleted-off-outline: 
      card-bulleted-outline: 
      card-bulleted-settings: 
      card-bulleted-settings-outline: 
      card-minus: 
      card-minus-outline: 
      card-multiple: 
      card-multiple-outline: 
      card-off: 
      card-off-outline: 
      card-outline: 
      card-plus: 
      card-plus-outline: 
      card-remove: 
      card-remove-outline: 
      card-search: 
      card-search-outline: 
      card-text: 
      card-text-outline: 
      cards: 
      cards-club: 
      cards-club-outline: 
      cards-diamond: 
      cards-diamond-outline: 
      cards-heart: 
      cards-heart-outline: 
      cards-outline: 
      cards-playing: 
      cards-playing-club: 
      cards-playing-club-multiple: 
      cards-playing-club-multiple-outline: 
      cards-playing-club-outline: 
      cards-playing-diamond: 
      cards-playing-diamond-multiple: 
      cards-playing-diamond-multiple-outline: 
      cards-playing-diamond-outline: 
      cards-playing-heart: 
      cards-playing-heart-multiple: 
      cards-playing-heart-multiple-outline: 
      cards-playing-heart-outline: 
      cards-playing-outline: 
      cards-playing-spade: 
      cards-playing-spade-multiple: 
      cards-playing-spade-multiple-outline: 
      cards-playing-spade-outline: 
      cards-spade: 
      cards-spade-outline: 
      cards-variant: 
      carrot: 
      cart: 
      cart-arrow-down: 
      cart-arrow-right: 
      cart-arrow-up: 
      cart-check: 
      cart-heart: 
      cart-minus: 
      cart-off: 
      cart-outline: 
      cart-plus: 
      cart-remove: 
      cart-variant: 
      case-sensitive-alt: 
      cash: 
      cash-100: 
      cash-check: 
      cash-clock: 敖
      cash-fast: 
      cash-lock: 
      cash-lock-open: 
      cash-marker: 
      cash-minus: 
      cash-multiple: 
      cash-plus: 
      cash-refund: 
      cash-register: 
      cash-remove: 
      cash-sync: 晴
      cassette: 
      cast: 
      cast-audio: 
      cast-audio-variant: 
      cast-connected: 
      cast-education: 
      cast-off: 
      cast-variant: 
      castle: 
      cat: 
      cctv: 
      cctv-off: 
      ceiling-fan: 
      ceiling-fan-light: 
      ceiling-light: 
      ceiling-light-multiple: 
      ceiling-light-multiple-outline: 
      ceiling-light-outline: 
      cellphone: 
      cellphone-arrow-down: 
      cellphone-arrow-down-variant: 龍
      cellphone-basic: 
      cellphone-charging: 
      cellphone-check: 
      cellphone-cog: 
      cellphone-dock: 
      cellphone-information: 
      cellphone-key: 
      cellphone-link: 
      cellphone-link-off: 
      cellphone-lock: 
      cellphone-marker: 
      cellphone-message: 
      cellphone-message-off: 
      cellphone-nfc: 
      cellphone-nfc-off: 
      cellphone-off: 
      cellphone-play: 
      cellphone-remove: 
      cellphone-screenshot: 
      cellphone-settings: 
      cellphone-sound: 
      cellphone-text: 
      cellphone-wireless: 
      centos: 
      certificate: 
      certificate-outline: 
      chair-rolling: 
      chair-school: 
      chandelier: 
      charity: 
      chart-arc: 
      chart-areaspline: 
      chart-areaspline-variant: 
      chart-bar: 
      chart-bar-stacked: 
      chart-bell-curve: 
      chart-bell-curve-cumulative: 
      chart-box: 
      chart-box-outline: 
      chart-box-plus-outline: 
      chart-bubble: 
      chart-donut: 
      chart-donut-variant: 
      chart-gantt: 
      chart-histogram: 
      chart-line: 
      chart-line-stacked: 
      chart-line-variant: 
      chart-multiline: 
      chart-multiple: 
      chart-pie: 
      chart-ppf: 
      chart-sankey: 
      chart-sankey-variant: 
      chart-scatter-plot: 
      chart-scatter-plot-hexbin: 
      chart-timeline: 
      chart-timeline-variant: 
      chart-timeline-variant-shimmer: 
      chart-tree: 
      chart-waterfall: 珞
      chat: 
      chat-alert: 
      chat-alert-outline: 
      chat-minus: 
      chat-minus-outline: 
      chat-outline: 
      chat-plus: 
      chat-plus-outline: 
      chat-processing: 
      chat-processing-outline: 
      chat-question: 
      chat-question-outline: 
      chat-remove: 
      chat-remove-outline: 
      chat-sleep: 
      chat-sleep-outline: 
      check: 
      check-all: 
      check-bold: 
      check-circle: 
      check-circle-outline: 
      check-decagram: 
      check-decagram-outline: 
      check-network: 
      check-network-outline: 
      check-outline: 
      check-underline: 
      check-underline-circle: 
      check-underline-circle-outline: 
      checkbook: 
      checkbox-blank: 
      checkbox-blank-badge: 
      checkbox-blank-badge-outline: 
      checkbox-blank-circle: 
      checkbox-blank-circle-outline: 
      checkbox-blank-off: 
      checkbox-blank-off-outline: 
      checkbox-blank-outline: 
      checkbox-intermediate: 
      checkbox-marked: 
      checkbox-marked-circle: 
      checkbox-marked-circle-outline: 
      checkbox-marked-circle-plus-outline: 臘
      checkbox-marked-outline: 
      checkbox-multiple-blank: 
      checkbox-multiple-blank-circle: 
      checkbox-multiple-blank-circle-outline: 
      checkbox-multiple-blank-outline: 
      checkbox-multiple-marked: 
      checkbox-multiple-marked-circle: 
      checkbox-multiple-marked-circle-outline: 
      checkbox-multiple-marked-outline: 
      checkbox-multiple-outline: 
      checkbox-outline: 
      checkerboard: 
      checkerboard-minus: 
      checkerboard-plus: 
      checkerboard-remove: 
      cheese: 
      cheese-off: 
      chef-hat: 
      chemical-weapon: 
      chess-bishop: 
      chess-king: 
      chess-knight: 
      chess-pawn: 
      chess-queen: 
      chess-rook: 
      chevron-double-down: 
      chevron-double-left: 
      chevron-double-right: 
      chevron-double-up: 
      chevron-down: 
      chevron-down-box: 
      chevron-down-box-outline: 
      chevron-down-circle: 
      chevron-down-circle-outline: 
      chevron-left: 
      chevron-left-box: 
      chevron-left-box-outline: 
      chevron-left-circle: 
      chevron-left-circle-outline: 
      chevron-right: 
      chevron-right-box: 
      chevron-right-box-outline: 
      chevron-right-circle: 
      chevron-right-circle-outline: 
      chevron-triple-down: 
      chevron-triple-left: 
      chevron-triple-right: 
      chevron-triple-up: 
      chevron-up: 
      chevron-up-box: 
      chevron-up-box-outline: 
      chevron-up-circle: 
      chevron-up-circle-outline: 
      chili-alert: 
      chili-alert-outline: 
      chili-hot: 
      chili-hot-outline: 
      chili-medium: 
      chili-medium-outline: 
      chili-mild: 
      chili-mild-outline: 
      chili-off: 
      chili-off-outline: 
      chip: 
      church: 
      cigar: 
      cigar-off: 
      circle: 
      circle-box: 
      circle-box-outline: 
      circle-double: 
      circle-edit-outline: 
      circle-expand: 
      circle-half: 
      circle-half-full: 
      circle-medium: 
      circle-multiple: 
      circle-multiple-outline: 
      circle-off-outline: 
      circle-opacity: 
      circle-outline: 
      circle-slice-1: 
      circle-slice-2: 
      circle-slice-3: 
      circle-slice-4: 
      circle-slice-5: 
      circle-slice-6: 
      circle-slice-7: 
      circle-slice-8: 
      circle-small: 
      circular-saw: 
      city: 
      city-variant: 
      city-variant-outline: 
      clipboard: 
      clipboard-account: 
      clipboard-account-outline: 
      clipboard-alert: 
      clipboard-alert-outline: 
      clipboard-arrow-down: 
      clipboard-arrow-down-outline: 
      clipboard-arrow-left: 
      clipboard-arrow-left-outline: 
      clipboard-arrow-right: 
      clipboard-arrow-right-outline: 
      clipboard-arrow-up: 
      clipboard-arrow-up-outline: 
      clipboard-check: 
      clipboard-check-multiple: 
      clipboard-check-multiple-outline: 
      clipboard-check-outline: 
      clipboard-clock: 
      clipboard-clock-outline: 
      clipboard-edit: 
      clipboard-edit-outline: 
      clipboard-file: 
      clipboard-file-outline: 
      clipboard-flow: 
      clipboard-flow-outline: 
      clipboard-list: 
      clipboard-list-outline: 
      clipboard-minus: 
      clipboard-minus-outline: 
      clipboard-multiple: 
      clipboard-multiple-outline: 
      clipboard-off: 
      clipboard-off-outline: 
      clipboard-outline: 
      clipboard-play: 
      clipboard-play-multiple: 
      clipboard-play-multiple-outline: 
      clipboard-play-outline: 
      clipboard-plus: 
      clipboard-plus-outline: 
      clipboard-pulse: 
      clipboard-pulse-outline: 
      clipboard-remove: 
      clipboard-remove-outline: 
      clipboard-search: 
      clipboard-search-outline: 
      clipboard-text: 
      clipboard-text-clock: 
      clipboard-text-clock-outline: 
      clipboard-text-multiple: 
      clipboard-text-multiple-outline: 
      clipboard-text-off: 
      clipboard-text-off-outline: 
      clipboard-text-outline: 
      clipboard-text-play: 
      clipboard-text-play-outline: 
      clipboard-text-search: 
      clipboard-text-search-outline: 
      clippy: 
      clock: 
      clock-alert: 
      clock-alert-outline: 
      clock-check: 
      clock-check-outline: 
      clock-digital: 
      clock-edit: 惡
      clock-edit-outline: 了
      clock-end: 
      clock-fast: 
      clock-in: 
      clock-minus: 
      clock-minus-outline: 
      clock-out: 
      clock-outline: 
      clock-plus: 
      clock-plus-outline: 
      clock-remove: 
      clock-remove-outline: 
      clock-start: 
      clock-time-eight: 
      clock-time-eight-outline: 
      clock-time-eleven: 
      clock-time-eleven-outline: 
      clock-time-five: 
      clock-time-five-outline: 
      clock-time-four: 
      clock-time-four-outline: 
      clock-time-nine: 
      clock-time-nine-outline: 
      clock-time-one: 
      clock-time-one-outline: 
      clock-time-seven: 
      clock-time-seven-outline: 
      clock-time-six: 
      clock-time-six-outline: 
      clock-time-ten: 
      clock-time-ten-outline: 
      clock-time-three: 
      clock-time-three-outline: 
      clock-time-twelve: 
      clock-time-twelve-outline: 
      clock-time-two: 
      clock-time-two-outline: 
      close: 
      close-box: 
      close-box-multiple: 
      close-box-multiple-outline: 
      close-box-outline: 
      close-circle: 
      close-circle-multiple: 
      close-circle-multiple-outline: 
      close-circle-outline: 
      close-network: 
      close-network-outline: 
      close-octagon: 
      close-octagon-outline: 
      close-outline: 
      close-thick: 
      closed-caption: 
      closed-caption-outline: 
      cloud: 
      cloud-alert: 
      cloud-braces: 
      cloud-check: 
      cloud-check-outline: 
      cloud-circle: 
      cloud-download: 
      cloud-download-outline: 
      cloud-lock: 
      cloud-lock-outline: 
      cloud-off-outline: 
      cloud-outline: 
      cloud-percent: 勤
      cloud-percent-outline: 卑
      cloud-print: 
      cloud-print-outline: 
      cloud-question: 
      cloud-refresh: 
      cloud-search: 
      cloud-search-outline: 
      cloud-sync: 
      cloud-sync-outline: 
      cloud-tags: 
      cloud-upload: 
      cloud-upload-outline: 
      clover: 
      coach-lamp: 
      coach-lamp-variant: 喝
      coat-rack: 
      code-array: 
      code-braces: 
      code-braces-box: 
      code-brackets: 
      code-equal: 
      code-greater-than: 
      code-greater-than-or-equal: 
      code-json: 
      code-less-than: 
      code-less-than-or-equal: 
      code-not-equal: 
      code-not-equal-variant: 
      code-parentheses: 
      code-parentheses-box: 
      code-string: 
      code-tags: 
      code-tags-check: 
      codepen: 
      coffee: 
      coffee-maker: 
      coffee-maker-check: 擄
      coffee-maker-check-outline: 櫓
      coffee-maker-outline: 
      coffee-off: 
      coffee-off-outline: 
      coffee-outline: 
      coffee-to-go: 
      coffee-to-go-outline: 
      coffin: 
      cog: 
      cog-box: 
      cog-clockwise: 
      cog-counterclockwise: 
      cog-off: 
      cog-off-outline: 
      cog-outline: 
      cog-pause: 爐
      cog-pause-outline: 盧
      cog-play: 老
      cog-play-outline: 蘆
      cog-refresh: 
      cog-refresh-outline: 
      cog-stop: 虜
      cog-stop-outline: 路
      cog-sync: 
      cog-sync-outline: 
      cog-transfer: 
      cog-transfer-outline: 
      cogs: 
      collage: 
      collapse-all: 
      collapse-all-outline: 
      color-helper: 
      comma: 
      comma-box: 
      comma-box-outline: 
      comma-circle: 
      comma-circle-outline: 
      comment: 
      comment-account: 
      comment-account-outline: 
      comment-alert: 
      comment-alert-outline: 
      comment-arrow-left: 
      comment-arrow-left-outline: 
      comment-arrow-right: 
      comment-arrow-right-outline: 
      comment-bookmark: 
      comment-bookmark-outline: 
      comment-check: 
      comment-check-outline: 
      comment-edit: 
      comment-edit-outline: 
      comment-eye: 
      comment-eye-outline: 
      comment-flash: 
      comment-flash-outline: 
      comment-minus: 
      comment-minus-outline: 
      comment-multiple: 
      comment-multiple-outline: 
      comment-off: 
      comment-off-outline: 
      comment-outline: 
      comment-plus: 
      comment-plus-outline: 
      comment-processing: 
      comment-processing-outline: 
      comment-question: 
      comment-question-outline: 
      comment-quote: 
      comment-quote-outline: 
      comment-remove: 
      comment-remove-outline: 
      comment-search: 
      comment-search-outline: 
      comment-text: 
      comment-text-multiple: 
      comment-text-multiple-outline: 
      comment-text-outline: 
      compare: 
      compare-horizontal: 
      compare-remove: 
      compare-vertical: 
      compass: 
      compass-off: 
      compass-off-outline: 
      compass-outline: 
      compass-rose: 
      compost: 嘆
      cone: 屢
      cone-off: 樓
      connection: 
      console: 
      console-line: 
      console-network: 
      console-network-outline: 
      consolidate: 
      contactless-payment: 
      contactless-payment-circle: 
      contactless-payment-circle-outline: 
      contacts: 
      contacts-outline: 
      contain: 
      contain-end: 
      contain-start: 
      content-copy: 
      content-cut: 
      content-duplicate: 
      content-paste: 
      content-save: 
      content-save-alert: 
      content-save-alert-outline: 
      content-save-all: 
      content-save-all-outline: 
      content-save-check: 
      content-save-check-outline: 
      content-save-cog: 
      content-save-cog-outline: 
      content-save-edit: 
      content-save-edit-outline: 
      content-save-move: 
      content-save-move-outline: 
      content-save-off: 
      content-save-off-outline: 
      content-save-outline: 
      content-save-settings: 
      content-save-settings-outline: 
      contrast: 
      contrast-box: 
      contrast-circle: 
      controller-classic: 
      controller-classic-outline: 
      cookie: 
      cookie-alert: 
      cookie-alert-outline: 
      cookie-check: 
      cookie-check-outline: 
      cookie-clock: 
      cookie-clock-outline: 
      cookie-cog: 
      cookie-cog-outline: 
      cookie-edit: 
      cookie-edit-outline: 
      cookie-lock: 
      cookie-lock-outline: 
      cookie-minus: 
      cookie-minus-outline: 
      cookie-off: 
      cookie-off-outline: 
      cookie-outline: 
      cookie-plus: 
      cookie-plus-outline: 
      cookie-refresh: 
      cookie-refresh-outline: 
      cookie-remove: 
      cookie-remove-outline: 
      cookie-settings: 
      cookie-settings-outline: 
      coolant-temperature: 
      copyleft: 露
      copyright: 
      cordova: 
      corn: 
      corn-off: 
      cosine-wave: 
      counter: 
      countertop: 
      countertop-outline: 
      cow: 
      cow-off: 
      cpu-32-bit: 
      cpu-64-bit: 
      cradle: 力
      cradle-outline: 戀
      crane: 
      creation: 
      creative-commons: 
      credit-card: 
      credit-card-check: 
      credit-card-check-outline: 
      credit-card-chip: 癩
      credit-card-chip-outline: 羅
      credit-card-clock: 
      credit-card-clock-outline: 
      credit-card-edit: 
      credit-card-edit-outline: 
      credit-card-fast: 蘿
      credit-card-fast-outline: 螺
      credit-card-lock: 
      credit-card-lock-outline: 
      credit-card-marker: 
      credit-card-marker-outline: 
      credit-card-minus: 
      credit-card-minus-outline: 
      credit-card-multiple: 
      credit-card-multiple-outline: 
      credit-card-off: 
      credit-card-off-outline: 
      credit-card-outline: 
      credit-card-plus: 
      credit-card-plus-outline: 
      credit-card-refresh: 
      credit-card-refresh-outline: 
      credit-card-refund: 
      credit-card-refund-outline: 
      credit-card-remove: 
      credit-card-remove-outline: 
      credit-card-scan: 
      credit-card-scan-outline: 
      credit-card-search: 
      credit-card-search-outline: 
      credit-card-settings: 
      credit-card-settings-outline: 
      credit-card-sync: 
      credit-card-sync-outline: 
      credit-card-wireless: 
      credit-card-wireless-off: 
      credit-card-wireless-off-outline: 
      credit-card-wireless-outline: 
      cricket: 
      crop: 
      crop-free: 
      crop-landscape: 
      crop-portrait: 
      crop-rotate: 
      crop-square: 
      cross: 
      cross-bolnisi: 
      cross-celtic: 
      cross-outline: 
      crosshairs: 
      crosshairs-gps: 
      crosshairs-off: 
      crosshairs-question: 
      crowd: 若
      crown: 
      crown-circle: 
      crown-circle-outline: 
      crown-outline: 
      cryengine: 
      crystal-ball: 
      cube: 
      cube-off: 
      cube-off-outline: 
      cube-outline: 
      cube-scan: 
      cube-send: 
      cube-unfolded: 
      cup: 
      cup-off: 
      cup-off-outline: 
      cup-outline: 
      cup-water: 
      cupboard: 
      cupboard-outline: 
      cupcake: 
      curling: 
      currency-bdt: 
      currency-brl: 
      currency-btc: 
      currency-cny: 
      currency-eth: 
      currency-eur: 
      currency-eur-off: 
      currency-fra: 器
      currency-gbp: 
      currency-ils: 
      currency-inr: 
      currency-jpy: 
      currency-krw: 
      currency-kzt: 
      currency-mnt: 
      currency-ngn: 
      currency-php: 
      currency-rial: 
      currency-rub: 
      currency-rupee: 掠
      currency-sign: 
      currency-try: 
      currency-twd: 
      currency-usd: 
      currency-usd-off: 
      current-ac: 
      current-dc: 
      cursor-default: 
      cursor-default-click: 
      cursor-default-click-outline: 
      cursor-default-gesture: 
      cursor-default-gesture-outline: 
      cursor-default-outline: 
      cursor-move: 
      cursor-pointer: 
      cursor-text: 
      curtains: 
      curtains-closed: 
      cylinder: 淚
      cylinder-off: 漏
      dance-ballroom: 
      dance-pole: 
      data-matrix: 
      data-matrix-edit: 
      data-matrix-minus: 
      data-matrix-plus: 
      data-matrix-remove: 
      data-matrix-scan: 
      database: 
      database-alert: 
      database-alert-outline: 
      database-arrow-down: 
      database-arrow-down-outline: 
      database-arrow-left: 
      database-arrow-left-outline: 
      database-arrow-right: 
      database-arrow-right-outline: 
      database-arrow-up: 
      database-arrow-up-outline: 
      database-check: 
      database-check-outline: 
      database-clock: 
      database-clock-outline: 
      database-cog: 
      database-cog-outline: 
      database-edit: 
      database-edit-outline: 
      database-export: 
      database-export-outline: 
      database-eye: 爛
      database-eye-off: 蘭
      database-eye-off-outline: 鸞
      database-eye-outline: 嵐
      database-import: 
      database-import-outline: 
      database-lock: 
      database-lock-outline: 
      database-marker: 
      database-marker-outline: 
      database-minus: 
      database-minus-outline: 
      database-off: 
      database-off-outline: 
      database-outline: 
      database-plus: 
      database-plus-outline: 
      database-refresh: 
      database-refresh-outline: 
      database-remove: 
      database-remove-outline: 
      database-search: 
      database-search-outline: 
      database-settings: 
      database-settings-outline: 
      database-sync: 
      database-sync-outline: 
      death-star: 
      death-star-variant: 
      deathly-hallows: 
      debian: 
      debug-step-into: 
      debug-step-out: 
      debug-step-over: 
      decagram: 
      decagram-outline: 
      decimal: 
      decimal-comma: 
      decimal-comma-decrease: 
      decimal-comma-increase: 
      decimal-decrease: 
      decimal-increase: 
      delete: 
      delete-alert: 
      delete-alert-outline: 
      delete-circle: 
      delete-circle-outline: 
      delete-clock: 
      delete-clock-outline: 
      delete-empty: 
      delete-empty-outline: 
      delete-forever: 
      delete-forever-outline: 
      delete-off: 
      delete-off-outline: 
      delete-outline: 
      delete-restore: 
      delete-sweep: 
      delete-sweep-outline: 
      delete-variant: 
      delta: 
      desk: 
      desk-lamp: 
      deskphone: 
      desktop-classic: 
      desktop-mac: 
      desktop-mac-dashboard: 
      desktop-tower: 
      desktop-tower-monitor: 
      details: 
      dev-to: 
      developer-board: 
      deviantart: 
      devices: 
      dharmachakra: 
      diabetes: 
      dialpad: 
      diameter: 
      diameter-outline: 
      diameter-variant: 
      diamond: 
      diamond-outline: 
      diamond-stone: 
      dice-1: 
      dice-1-outline: 
      dice-2: 
      dice-2-outline: 
      dice-3: 
      dice-3-outline: 
      dice-4: 
      dice-4-outline: 
      dice-5: 
      dice-5-outline: 
      dice-6: 
      dice-6-outline: 
      dice-d10: 
      dice-d10-outline: 
      dice-d12: 
      dice-d12-outline: 
      dice-d20: 
      dice-d20-outline: 
      dice-d4: 
      dice-d4-outline: 
      dice-d6: 
      dice-d6-outline: 
      dice-d8: 
      dice-d8-outline: 
      dice-multiple: 
      dice-multiple-outline: 
      digital-ocean: 
      dip-switch: 
      directions: 
      directions-fork: 
      disc: 
      disc-alert: 
      disc-player: 
      discord: 
      dishwasher: 
      dishwasher-alert: 
      dishwasher-off: 
      disqus: 
      distribute-horizontal-center: 
      distribute-horizontal-left: 
      distribute-horizontal-right: 
      distribute-vertical-bottom: 
      distribute-vertical-center: 
      distribute-vertical-top: 
      diversify: 
      diving: 略
      diving-flippers: 
      diving-helmet: 
      diving-scuba: 
      diving-scuba-flag: 
      diving-scuba-tank: 
      diving-scuba-tank-multiple: 
      diving-snorkel: 
      division: 
      division-box: 
      dlna: 
      dna: 
      dns: 
      dns-outline: 
      dock-bottom: 
      dock-left: 
      dock-right: 
      dock-top: 
      dock-window: 
      docker: 
      doctor: 
      dog: 
      dog-service: 
      dog-side: 
      dog-side-off: 
      dolby: 
      dolly: 
      dolphin: 
      domain: 
      domain-off: 
      domain-plus: 
      domain-remove: 
      dome-light: 
      domino-mask: 
      donkey: 
      door: 
      door-closed: 
      door-closed-lock: 
      door-open: 
      door-sliding: 
      door-sliding-lock: 
      door-sliding-open: 
      doorbell: 
      doorbell-video: 
      dot-net: 
      dots-circle: 亮
      dots-grid: 
      dots-hexagon: 
      dots-horizontal: 
      dots-horizontal-circle: 
      dots-horizontal-circle-outline: 
      dots-square: 
      dots-triangle: 
      dots-vertical: 
      dots-vertical-circle: 
      dots-vertical-circle-outline: 
      download: 
      download-box: 
      download-box-outline: 
      download-circle: 
      download-circle-outline: 
      download-lock: 
      download-lock-outline: 
      download-multiple: 
      download-network: 
      download-network-outline: 
      download-off: 
      download-off-outline: 
      download-outline: 
      drag: 
      drag-horizontal: 
      drag-horizontal-variant: 
      drag-variant: 
      drag-vertical: 
      drag-vertical-variant: 
      drama-masks: 
      draw: 
      draw-pen: 隸
      drawing: 
      drawing-box: 
      dresser: 
      dresser-outline: 
      drone: 
      dropbox: 
      drupal: 
      duck: 
      dumbbell: 
      dump-truck: 
      ear-hearing: 
      ear-hearing-loop: 﫭
      ear-hearing-off: 
      earbuds: 
      earbuds-off: 
      earbuds-off-outline: 
      earbuds-outline: 
      earth: 
      earth-arrow-right: 
      earth-box: 
      earth-box-minus: 
      earth-box-off: 
      earth-box-plus: 
      earth-box-remove: 
      earth-minus: 
      earth-off: 
      earth-plus: 
      earth-remove: 
      egg: 
      egg-easter: 
      egg-fried: 
      egg-off: 
      egg-off-outline: 
      egg-outline: 
      eiffel-tower: 
      eight-track: 
      eject: 
      eject-outline: 
      electric-switch: 
      electric-switch-closed: 
      electron-framework: 
      elephant: 
      elevation-decline: 
      elevation-rise: 
      elevator: 
      elevator-down: 
      elevator-passenger: 
      elevator-passenger-off: 兩
      elevator-passenger-off-outline: 凉
      elevator-passenger-outline: 梁
      elevator-up: 
      ellipse: 
      ellipse-outline: 
      email: 
      email-alert: 
      email-alert-outline: 
      email-box: 
      email-check: 
      email-check-outline: 
      email-edit: 
      email-edit-outline: 
      email-fast: 
      email-fast-outline: 
      email-lock: 
      email-mark-as-unread: 
      email-minus: 
      email-minus-outline: 
      email-multiple: 
      email-multiple-outline: 
      email-newsletter: 
      email-off: 
      email-off-outline: 
      email-open: 
      email-open-multiple: 
      email-open-multiple-outline: 
      email-open-outline: 
      email-outline: 
      email-plus: 
      email-plus-outline: 
      email-receive: 
      email-receive-outline: 
      email-remove: 
      email-remove-outline: 
      email-seal: 讀
      email-seal-outline: 拏
      email-search: 
      email-search-outline: 
      email-send: 
      email-send-outline: 
      email-sync: 
      email-sync-outline: 
      email-variant: 
      ember: 
      emby: 
      emoticon: 
      emoticon-angry: 
      emoticon-angry-outline: 
      emoticon-confused: 
      emoticon-confused-outline: 
      emoticon-cool: 
      emoticon-cool-outline: 
      emoticon-cry: 
      emoticon-cry-outline: 
      emoticon-dead: 
      emoticon-dead-outline: 
      emoticon-devil: 
      emoticon-devil-outline: 
      emoticon-excited: 
      emoticon-excited-outline: 
      emoticon-frown: 
      emoticon-frown-outline: 
      emoticon-happy: 
      emoticon-happy-outline: 
      emoticon-kiss: 
      emoticon-kiss-outline: 
      emoticon-lol: 
      emoticon-lol-outline: 
      emoticon-neutral: 
      emoticon-neutral-outline: 
      emoticon-outline: 
      emoticon-poop: 
      emoticon-poop-outline: 
      emoticon-sad: 
      emoticon-sad-outline: 
      emoticon-sick: 
      emoticon-sick-outline: 
      emoticon-tongue: 
      emoticon-tongue-outline: 
      emoticon-wink: 
      emoticon-wink-outline: 
      engine: 
      engine-off: 
      engine-off-outline: 
      engine-outline: 
      epsilon: 
      equal: 
      equal-box: 
      equalizer: 
      equalizer-outline: 
      eraser: 
      eraser-variant: 
      escalator: 
      escalator-box: 
      escalator-down: 
      escalator-up: 
      eslint: 
      et: 
      ethereum: 
      ethernet: 
      ethernet-cable: 
      ethernet-cable-off: 
      ev-plug-ccs1: 
      ev-plug-ccs2: 
      ev-plug-chademo: 
      ev-plug-tesla: 
      ev-plug-type1: 
      ev-plug-type2: 
      ev-station: 
      evernote: 
      excavator: 
      exclamation: 
      exclamation-thick: 
      exit-run: 
      exit-to-app: 
      expand-all: 
      expand-all-outline: 
      expansion-card: 
      expansion-card-variant: 
      exponent: 
      exponent-box: 
      export: 
      export-variant: 
      eye: 
      eye-arrow-left: 
      eye-arrow-left-outline: 
      eye-arrow-right: 
      eye-arrow-right-outline: 
      eye-check: 
      eye-check-outline: 
      eye-circle: 
      eye-circle-outline: 
      eye-minus: 
      eye-minus-outline: 
      eye-off: 
      eye-off-outline: 
      eye-outline: 
      eye-plus: 
      eye-plus-outline: 
      eye-refresh: 糧
      eye-refresh-outline: 良
      eye-remove: 
      eye-remove-outline: 
      eye-settings: 
      eye-settings-outline: 
      eyedropper: 
      eyedropper-minus: 
      eyedropper-off: 
      eyedropper-plus: 
      eyedropper-remove: 
      eyedropper-variant: 
      face-agent: 
      face-man: 
      face-man-outline: 
      face-man-profile: 
      face-man-shimmer: 
      face-man-shimmer-outline: 
      face-mask: 
      face-mask-outline: 
      face-recognition: 
      face-woman: 
      face-woman-outline: 
      face-woman-profile: 
      face-woman-shimmer: 
      face-woman-shimmer-outline: 
      facebook: 
      facebook-gaming: 
      facebook-messenger: 
      facebook-workplace: 
      factory: 
      family-tree: 
      fan: 
      fan-alert: 
      fan-auto: 
      fan-chevron-down: 
      fan-chevron-up: 
      fan-clock: 塀
      fan-minus: 
      fan-off: 
      fan-plus: 
      fan-remove: 
      fan-speed-1: 
      fan-speed-2: 
      fan-speed-3: 
      fast-forward: 
      fast-forward-10: 
      fast-forward-15: 魯
      fast-forward-30: 
      fast-forward-5: 
      fast-forward-60: 
      fast-forward-outline: 
      fax: 
      feather: 
      feature-search: 
      feature-search-outline: 
      fedora: 
      fence: 
      fence-electric: 
      fencing: 
      ferris-wheel: 
      ferry: 
      file: 
      file-account: 
      file-account-outline: 
      file-alert: 
      file-alert-outline: 
      file-arrow-left-right: 朗
      file-arrow-left-right-outline: 望
      file-arrow-up-down: 杖
      file-arrow-up-down-outline: 歹
      file-cabinet: 
      file-cad: 
      file-cad-box: 
      file-cancel: 
      file-cancel-outline: 
      file-certificate: 
      file-certificate-outline: 
      file-chart: 
      file-chart-check: 暈
      file-chart-check-outline: 阮
      file-chart-outline: 
      file-check: 
      file-check-outline: 
      file-clock: 
      file-clock-outline: 
      file-cloud: 
      file-cloud-outline: 
      file-code: 
      file-code-outline: 
      file-cog: 
      file-cog-outline: 
      file-compare: 
      file-delimited: 
      file-delimited-outline: 
      file-document: 
      file-document-alert: 殺
      file-document-alert-outline: 流
      file-document-check: 滛
      file-document-check-outline: 滋
      file-document-edit: 
      file-document-edit-outline: 
      file-document-minus: 漢
      file-document-minus-outline: 瀞
      file-document-multiple: 
      file-document-multiple-outline: 
      file-document-outline: 
      file-document-plus: 煮
      file-document-plus-outline: 瞧
      file-document-remove: 爵
      file-document-remove-outline: 犯
      file-download: 
      file-download-outline: 
      file-edit: 
      file-edit-outline: 
      file-excel: 
      file-excel-box: 
      file-excel-box-outline: 
      file-excel-outline: 
      file-export: 
      file-export-outline: 
      file-eye: 
      file-eye-outline: 
      file-find: 
      file-find-outline: 
      file-gif-box: 
      file-hidden: 
      file-image: 
      file-image-marker: 
      file-image-marker-outline: 
      file-image-minus: 鷺
      file-image-minus-outline: 碌
      file-image-outline: 
      file-image-plus: 祿
      file-image-plus-outline: 綠
      file-image-remove: 菉
      file-image-remove-outline: 錄
      file-import: 
      file-import-outline: 
      file-jpg-box: 
      file-key: 
      file-key-outline: 
      file-link: 
      file-link-outline: 
      file-lock: 
      file-lock-open: 劉
      file-lock-open-outline: 杻
      file-lock-outline: 
      file-marker: 
      file-marker-outline: 
      file-minus: 猪
      file-minus-outline: 瑱
      file-move: 
      file-move-outline: 
      file-multiple: 
      file-multiple-outline: 
      file-music: 
      file-music-outline: 
      file-outline: 
      file-pdf-box: 
      file-percent: 
      file-percent-outline: 
      file-phone: 
      file-phone-outline: 
      file-plus: 
      file-plus-outline: 
      file-png-box: 
      file-powerpoint: 
      file-powerpoint-box: 
      file-powerpoint-box-outline: 
      file-powerpoint-outline: 
      file-presentation-box: 
      file-question: 
      file-question-outline: 
      file-refresh: 
      file-refresh-outline: 
      file-remove: 
      file-remove-outline: 
      file-replace: 
      file-replace-outline: 
      file-restore: 
      file-restore-outline: 
      file-rotate-left: 墨
      file-rotate-left-outline: 層
      file-rotate-right: 屮
      file-rotate-right-outline: 悔
      file-search: 
      file-search-outline: 
      file-send: 
      file-send-outline: 
      file-settings: 
      file-settings-outline: 
      file-sign: 蓼
      file-star: 
      file-star-outline: 
      file-swap: 
      file-swap-outline: 
      file-sync: 
      file-sync-outline: 
      file-table: 
      file-table-box: 
      file-table-box-multiple: 
      file-table-box-multiple-outline: 
      file-table-box-outline: 
      file-table-outline: 
      file-tree: 
      file-tree-outline: 
      file-undo: 
      file-undo-outline: 
      file-upload: 
      file-upload-outline: 
      file-video: 
      file-video-outline: 
      file-word: 
      file-word-box: 
      file-word-box-outline: 
      file-word-outline: 
      film: 
      filmstrip: 
      filmstrip-box: 
      filmstrip-box-multiple: 
      filmstrip-off: 
      filter: 
      filter-check: 
      filter-check-outline: 
      filter-cog: 甆
      filter-cog-outline: 画
      filter-menu: 
      filter-menu-outline: 
      filter-minus: 
      filter-minus-outline: 
      filter-multiple: 慨
      filter-multiple-outline: 憎
      filter-off: 
      filter-off-outline: 
      filter-outline: 
      filter-plus: 
      filter-plus-outline: 
      filter-remove: 
      filter-remove-outline: 
      filter-settings: 瘝
      filter-settings-outline: 瘟
      filter-variant: 
      filter-variant-minus: 
      filter-variant-plus: 
      filter-variant-remove: 
      finance: 
      find-replace: 
      fingerprint: 
      fingerprint-off: 
      fire: 
      fire-alert: 
      fire-circle: 
      fire-extinguisher: 
      fire-hydrant: 
      fire-hydrant-alert: 
      fire-hydrant-off: 
      fire-off: 
      fire-truck: 
      firebase: 
      firefox: 
      fireplace: 
      fireplace-off: 
      firewire: 
      firework: 
      firework-off: 
      fish: 
      fish-off: 
      fishbowl: 
      fishbowl-outline: 
      fit-to-page: 
      fit-to-page-outline: 
      fit-to-screen: 
      fit-to-screen-outline: 
      flag: 
      flag-checkered: 
      flag-minus: 
      flag-minus-outline: 
      flag-off: 
      flag-off-outline: 
      flag-outline: 
      flag-plus: 
      flag-plus-outline: 
      flag-remove: 
      flag-remove-outline: 
      flag-triangle: 
      flag-variant: 
      flag-variant-outline: 
      flare: 
      flash: 
      flash-alert: 
      flash-alert-outline: 
      flash-auto: 
      flash-off: 
      flash-outline: 
      flash-red-eye: 
      flashlight: 
      flashlight-off: 
      flask: 
      flask-empty: 
      flask-empty-minus: 
      flask-empty-minus-outline: 
      flask-empty-off: 
      flask-empty-off-outline: 
      flask-empty-outline: 
      flask-empty-plus: 
      flask-empty-plus-outline: 
      flask-empty-remove: 
      flask-empty-remove-outline: 
      flask-minus: 
      flask-minus-outline: 
      flask-off: 
      flask-off-outline: 
      flask-outline: 
      flask-plus: 
      flask-plus-outline: 
      flask-remove: 
      flask-remove-outline: 
      flask-round-bottom: 
      flask-round-bottom-empty: 
      flask-round-bottom-empty-outline: 
      flask-round-bottom-outline: 
      fleur-de-lis: 
      flip-horizontal: 
      flip-to-back: 
      flip-to-front: 
      flip-vertical: 
      floor-lamp: 
      floor-lamp-dual: 
      floor-lamp-dual-outline: 
      floor-lamp-outline: 
      floor-lamp-torchiere: 
      floor-lamp-torchiere-outline: 
      floor-lamp-torchiere-variant: 
      floor-lamp-torchiere-variant-outline: 
      floor-plan: 
      floppy: 
      floppy-variant: 
      flower: 
      flower-outline: 
      flower-pollen: 
      flower-pollen-outline: 
      flower-poppy: 
      flower-tulip: 
      flower-tulip-outline: 
      focus-auto: 
      focus-field: 
      focus-field-horizontal: 
      focus-field-vertical: 
      folder: 
      folder-account: 
      folder-account-outline: 
      folder-alert: 
      folder-alert-outline: 
      folder-arrow-down: 裏
      folder-arrow-down-outline: 裡
      folder-arrow-left: 里
      folder-arrow-left-outline: 離
      folder-arrow-left-right: 匿
      folder-arrow-left-right-outline: 溺
      folder-arrow-right: 吝
      folder-arrow-right-outline: 燐
      folder-arrow-up: 璘
      folder-arrow-up-down: 藺
      folder-arrow-up-down-outline: 隣
      folder-arrow-up-outline: 鱗
      folder-cancel: 麟
      folder-cancel-outline: 林
      folder-check: 諒
      folder-check-outline: 量
      folder-clock: 
      folder-clock-outline: 
      folder-cog: 
      folder-cog-outline: 
      folder-download: 
      folder-download-outline: 
      folder-edit: 
      folder-edit-outline: 
      folder-eye: 
      folder-eye-outline: 
      folder-file: 淋
      folder-file-outline: 臨
      folder-google-drive: 
      folder-heart: 
      folder-heart-outline: 
      folder-hidden: 
      folder-home: 
      folder-home-outline: 
      folder-image: 
      folder-information: 
      folder-information-outline: 
      folder-key: 
      folder-key-network: 
      folder-key-network-outline: 
      folder-key-outline: 
      folder-lock: 
      folder-lock-open: 
      folder-lock-open-outline: 益
      folder-lock-outline: 盛
      folder-marker: 
      folder-marker-outline: 
      folder-move: 
      folder-move-outline: 
      folder-multiple: 
      folder-multiple-image: 
      folder-multiple-outline: 
      folder-multiple-plus: 
      folder-multiple-plus-outline: 
      folder-music: 
      folder-music-outline: 
      folder-network: 
      folder-network-outline: 
      folder-off: 立
      folder-off-outline: 笠
      folder-open: 
      folder-open-outline: 
      folder-outline: 
      folder-play: 粒
      folder-play-outline: 狀
      folder-plus: 
      folder-plus-outline: 
      folder-pound: 
      folder-pound-outline: 
      folder-question: 柳
      folder-question-outline: 流
      folder-refresh: 
      folder-refresh-outline: 
      folder-remove: 
      folder-remove-outline: 
      folder-search: 
      folder-search-outline: 
      folder-settings: 
      folder-settings-outline: 
      folder-star: 
      folder-star-multiple: 
      folder-star-multiple-outline: 
      folder-star-outline: 
      folder-swap: 
      folder-swap-outline: 
      folder-sync: 
      folder-sync-outline: 
      folder-table: 
      folder-table-outline: 
      folder-text: 
      folder-text-outline: 
      folder-upload: 
      folder-upload-outline: 
      folder-wrench: 炙
      folder-wrench-outline: 識
      folder-zip: 
      folder-zip-outline: 
      font-awesome: 
      food: 
      food-apple: 
      food-apple-outline: 
      food-croissant: 
      food-drumstick: 
      food-drumstick-off: 
      food-drumstick-off-outline: 
      food-drumstick-outline: 
      food-fork-drink: 
      food-halal: 
      food-hot-dog: 
      food-kosher: 
      food-off: 
      food-off-outline: 樂
      food-outline: 洛
      food-steak: 
      food-steak-off: 
      food-takeout-box: 
      food-takeout-box-outline: 
      food-turkey: 
      food-variant: 
      food-variant-off: 
      foot-print: 
      football: 
      football-australian: 
      football-helmet: 
      forest: 
      forklift: 
      form-dropdown: 
      form-select: 
      form-textarea: 
      form-textbox: 
      form-textbox-lock: 
      form-textbox-password: 
      format-align-bottom: 
      format-align-center: 
      format-align-justify: 
      format-align-left: 
      format-align-middle: 
      format-align-right: 
      format-align-top: 
      format-annotation-minus: 
      format-annotation-plus: 
      format-bold: 
      format-clear: 
      format-color-fill: 
      format-color-highlight: 
      format-color-marker-cancel: 
      format-color-text: 
      format-columns: 
      format-float-center: 
      format-float-left: 
      format-float-none: 
      format-float-right: 
      format-font: 
      format-font-size-decrease: 
      format-font-size-increase: 
      format-header-1: 
      format-header-2: 
      format-header-3: 
      format-header-4: 
      format-header-5: 
      format-header-6: 
      format-header-decrease: 
      format-header-equal: 
      format-header-increase: 
      format-header-pound: 
      format-horizontal-align-center: 
      format-horizontal-align-left: 
      format-horizontal-align-right: 
      format-indent-decrease: 
      format-indent-increase: 
      format-italic: 
      format-letter-case: 
      format-letter-case-lower: 
      format-letter-case-upper: 
      format-letter-ends-with: 
      format-letter-matches: 
      format-letter-spacing: 凌
      format-letter-starts-with: 
      format-line-spacing: 
      format-line-style: 
      format-line-weight: 
      format-list-bulleted: 
      format-list-bulleted-square: 
      format-list-bulleted-triangle: 
      format-list-bulleted-type: 
      format-list-checkbox: 
      format-list-checks: 
      format-list-group: 
      format-list-numbered: 
      format-list-numbered-rtl: 
      format-list-text: 
      format-overline: 
      format-page-break: 
      format-page-split: 烙
      format-paint: 
      format-paragraph: 
      format-pilcrow: 
      format-quote-close: 
      format-quote-close-outline: 
      format-quote-open: 
      format-quote-open-outline: 
      format-rotate-90: 
      format-section: 
      format-size: 
      format-strikethrough: 
      format-strikethrough-variant: 
      format-subscript: 
      format-superscript: 
      format-text: 
      format-text-rotation-angle-down: 
      format-text-rotation-angle-up: 
      format-text-rotation-down: 
      format-text-rotation-down-vertical: 
      format-text-rotation-none: 
      format-text-rotation-up: 
      format-text-rotation-vertical: 
      format-text-variant: 
      format-text-variant-outline: 
      format-text-wrapping-clip: 
      format-text-wrapping-overflow: 
      format-text-wrapping-wrap: 
      format-textbox: 
      format-textdirection-l-to-r: 
      format-textdirection-r-to-l: 
      format-title: 
      format-underline: 
      format-underline-wavy: 
      format-vertical-align-bottom: 
      format-vertical-align-center: 
      format-vertical-align-top: 
      format-wrap-inline: 
      format-wrap-square: 
      format-wrap-tight: 
      format-wrap-top-bottom: 
      forum: 
      forum-minus: 直
      forum-minus-outline: 睊
      forum-outline: 
      forum-plus: 着
      forum-plus-outline: 磌
      forum-remove: 窱
      forum-remove-outline: 節
      forward: 
      forwardburger: 
      fountain: 
      fountain-pen: 
      fountain-pen-tip: 
      fraction-one-half: 撚
      freebsd: 
      french-fries: 稜
      frequently-asked-questions: 
      fridge: 
      fridge-alert: 
      fridge-alert-outline: 
      fridge-bottom: 
      fridge-industrial: 
      fridge-industrial-alert: 
      fridge-industrial-alert-outline: 
      fridge-industrial-off: 
      fridge-industrial-off-outline: 
      fridge-industrial-outline: 
      fridge-off: 
      fridge-off-outline: 
      fridge-outline: 
      fridge-top: 
      fridge-variant: 
      fridge-variant-alert: 
      fridge-variant-alert-outline: 
      fridge-variant-off: 
      fridge-variant-off-outline: 
      fridge-variant-outline: 
      fruit-cherries: 
      fruit-cherries-off: 
      fruit-citrus: 
      fruit-citrus-off: 
      fruit-grapes: 
      fruit-grapes-outline: 
      fruit-pear: 嗀
      fruit-pineapple: 
      fruit-watermelon: 
      fuel: 
      fuel-cell: 
      fullscreen: 
      fullscreen-exit: 
      function: 
      function-variant: 
      furigana-horizontal: 
      furigana-vertical: 
      fuse: 
      fuse-alert: 
      fuse-blade: 
      fuse-off: 
      gamepad: 
      gamepad-circle: 
      gamepad-circle-down: 
      gamepad-circle-left: 
      gamepad-circle-outline: 
      gamepad-circle-right: 
      gamepad-circle-up: 
      gamepad-down: 
      gamepad-left: 
      gamepad-outline: 落
      gamepad-right: 
      gamepad-round: 
      gamepad-round-down: 
      gamepad-round-left: 
      gamepad-round-outline: 
      gamepad-round-right: 
      gamepad-round-up: 
      gamepad-square: 
      gamepad-square-outline: 
      gamepad-up: 
      gamepad-variant: 
      gamepad-variant-outline: 
      gamma: 
      gantry-crane: 
      garage: 
      garage-alert: 
      garage-alert-variant: 
      garage-lock: 
      garage-open: 
      garage-open-variant: 
      garage-variant: 
      garage-variant-lock: 
      gas-burner: 祥
      gas-cylinder: 
      gas-station: 
      gas-station-off: 
      gas-station-off-outline: 
      gas-station-outline: 
      gate: 
      gate-alert: 
      gate-and: 
      gate-arrow-left: 
      gate-arrow-right: 
      gate-nand: 
      gate-nor: 
      gate-not: 
      gate-open: 
      gate-or: 
      gate-xnor: 
      gate-xor: 
      gatsby: 
      gauge: 
      gauge-empty: 
      gauge-full: 
      gauge-low: 
      gavel: 
      gender-female: 
      gender-male: 
      gender-male-female: 
      gender-male-female-variant: 
      gender-non-binary: 
      gender-transgender: 
      gentoo: 
      gesture: 
      gesture-double-tap: 
      gesture-pinch: 
      gesture-spread: 
      gesture-swipe: 
      gesture-swipe-down: 
      gesture-swipe-horizontal: 
      gesture-swipe-left: 
      gesture-swipe-right: 
      gesture-swipe-up: 
      gesture-swipe-vertical: 
      gesture-tap: 
      gesture-tap-box: 
      gesture-tap-button: 
      gesture-tap-hold: 
      gesture-two-double-tap: 
      gesture-two-tap: 
      ghost: 
      ghost-off: 
      ghost-off-outline: 
      ghost-outline: 
      gift: 
      gift-off: 
      gift-off-outline: 
      gift-open: 
      gift-open-outline: 
      gift-outline: 
      git: 
      github: 
      gitlab: 
      glass-cocktail: 
      glass-cocktail-off: 
      glass-flute: 
      glass-fragile: 
      glass-mug: 
      glass-mug-off: 
      glass-mug-variant: 
      glass-mug-variant-off: 
      glass-pint-outline: 
      glass-stange: 
      glass-tulip: 
      glass-wine: 
      glasses: 
      globe-light: 
      globe-model: 
      gmail: 
      gnome: 
      go-kart: 
      go-kart-track: 
      gog: 
      gold: 
      golf: 
      golf-cart: 
      golf-tee: 
      gondola: 
      goodreads: 
      google: 
      google-ads: 
      google-analytics: 
      google-assistant: 
      google-cardboard: 
      google-chrome: 
      google-circles: 
      google-circles-communities: 
      google-circles-extended: 
      google-circles-group: 
      google-classroom: 
      google-cloud: 
      google-controller: 
      google-controller-off: 
      google-downasaur: 
      google-drive: 
      google-earth: 
      google-fit: 
      google-glass: 
      google-hangouts: 
      google-home: 
      google-keep: 
      google-lens: 
      google-maps: 
      google-my-business: 
      google-nearby: 
      google-play: 
      google-plus: 
      google-podcast: 
      google-spreadsheet: 
      google-street-view: 
      google-translate: 
      gradient-horizontal: 
      gradient-vertical: 
      grain: 
      graph: 
      graph-outline: 
      graphql: 
      grass: 
      grave-stone: 
      grease-pencil: 
      greater-than: 
      greater-than-or-equal: 
      greenhouse: 
      grid: 
      grid-large: 
      grid-off: 
      grill: 
      grill-outline: 
      group: 
      guitar-acoustic: 
      guitar-electric: 
      guitar-pick: 
      guitar-pick-outline: 
      guy-fawkes-mask: 
      gymnastics: 懲
      hail: 
      hair-dryer: 
      hair-dryer-outline: 
      halloween: 
      hamburger: 
      hamburger-check: 
      hamburger-minus: 
      hamburger-off: 
      hamburger-plus: 
      hamburger-remove: 
      hammer: 
      hammer-screwdriver: 
      hammer-sickle: 
      hammer-wrench: 
      hand-back-left: 
      hand-back-left-off: 
      hand-back-left-off-outline: 
      hand-back-left-outline: 
      hand-back-right: 
      hand-back-right-off: 
      hand-back-right-off-outline: 
      hand-back-right-outline: 
      hand-clap: 壘
      hand-clap-off: 敏
      hand-coin: 
      hand-coin-outline: 
      hand-extended: 
      hand-extended-outline: 
      hand-front-left: 
      hand-front-left-outline: 
      hand-front-right: 
      hand-front-right-outline: 
      hand-heart: 
      hand-heart-outline: 
      hand-okay: 
      hand-peace: 
      hand-peace-variant: 
      hand-pointing-down: 
      hand-pointing-left: 
      hand-pointing-right: 
      hand-pointing-up: 
      hand-saw: 
      hand-wash: 
      hand-wash-outline: 
      hand-water: 
      hand-wave: 
      hand-wave-outline: 
      handball: 
      handcuffs: 
      hands-pray: 
      handshake: 
      handshake-outline: 
      hanger: 
      hard-hat: 
      harddisk: 
      harddisk-plus: 
      harddisk-remove: 
      hat-fedora: 
      hazard-lights: 
      hdr: 
      hdr-off: 
      head: 
      head-alert: 
      head-alert-outline: 
      head-check: 
      head-check-outline: 
      head-cog: 
      head-cog-outline: 
      head-dots-horizontal: 
      head-dots-horizontal-outline: 
      head-flash: 
      head-flash-outline: 
      head-heart: 
      head-heart-outline: 
      head-lightbulb: 
      head-lightbulb-outline: 
      head-minus: 
      head-minus-outline: 
      head-outline: 
      head-plus: 
      head-plus-outline: 
      head-question: 
      head-question-outline: 
      head-remove: 
      head-remove-outline: 
      head-snowflake: 
      head-snowflake-outline: 
      head-sync: 
      head-sync-outline: 
      headphones: 
      headphones-bluetooth: 
      headphones-box: 
      headphones-off: 
      headphones-settings: 
      headset: 
      headset-dock: 
      headset-off: 
      heart: 
      heart-box: 
      heart-box-outline: 
      heart-broken: 
      heart-broken-outline: 
      heart-circle: 
      heart-circle-outline: 
      heart-cog: 
      heart-cog-outline: 
      heart-flash: 
      heart-half: 
      heart-half-full: 
      heart-half-outline: 
      heart-minus: 
      heart-minus-outline: 
      heart-multiple: 
      heart-multiple-outline: 
      heart-off: 
      heart-off-outline: 
      heart-outline: 
      heart-plus: 
      heart-plus-outline: 
      heart-pulse: 
      heart-remove: 
      heart-remove-outline: 
      heart-settings: 
      heart-settings-outline: 
      heat-pump: 既
      heat-pump-outline: 暑
      heat-wave: 梅
      heating-coil: 类
      helicopter: 
      help: 
      help-box: 
      help-circle: 
      help-circle-outline: 
      help-network: 
      help-network-outline: 
      help-rhombus: 
      help-rhombus-outline: 
      hexadecimal: 
      hexagon: 
      hexagon-multiple: 
      hexagon-multiple-outline: 
      hexagon-outline: 
      hexagon-slice-1: 
      hexagon-slice-2: 
      hexagon-slice-3: 
      hexagon-slice-4: 
      hexagon-slice-5: 
      hexagon-slice-6: 
      hexagram: 
      hexagram-outline: 
      high-definition: 
      high-definition-box: 
      highway: 
      hiking: 
      history: 
      hockey-puck: 
      hockey-sticks: 
      hololens: 
      home: 
      home-account: 
      home-alert: 
      home-alert-outline: 
      home-analytics: 
      home-assistant: 
      home-automation: 
      home-battery: 豈
      home-battery-outline: 更
      home-circle: 
      home-circle-outline: 
      home-city: 
      home-city-outline: 
      home-clock: 﨑
      home-clock-outline: 晴
      home-edit: 
      home-edit-outline: 
      home-export-outline: 
      home-flood: 
      home-floor-0: 
      home-floor-1: 
      home-floor-2: 
      home-floor-3: 
      home-floor-a: 
      home-floor-b: 
      home-floor-g: 
      home-floor-l: 
      home-floor-negative-1: 
      home-group: 
      home-group-minus: 燎
      home-group-plus: 樂
      home-group-remove: 療
      home-heart: 
      home-import-outline: 
      home-lightbulb: 
      home-lightbulb-outline: 
      home-lightning-bolt: 車
      home-lightning-bolt-outline: 賈
      home-lock: 
      home-lock-open: 
      home-map-marker: 
      home-minus: 
      home-minus-outline: 
      home-modern: 
      home-off: 海
      home-off-outline: 渚
      home-outline: 
      home-plus: 
      home-plus-outline: 
      home-remove: 
      home-remove-outline: 
      home-roof: 
      home-search: 
      home-search-outline: 
      home-switch: 
      home-switch-outline: 
      home-thermometer: 
      home-thermometer-outline: 
      home-variant: 
      home-variant-outline: 
      hook: 
      hook-off: 
      hoop-house: 
      hops: 
      horizontal-rotate-clockwise: 
      horizontal-rotate-counterclockwise: 
      horse: 
      horse-human: 
      horse-variant: 
      horse-variant-fast: 
      horseshoe: 
      hospital: 
      hospital-box: 
      hospital-box-outline: 
      hospital-building: 
      hospital-marker: 
      hot-tub: 
      hours-24: 
      hubspot: 
      hulu: 
      human: 
      human-baby-changing-table: 
      human-cane: 
      human-capacity-decrease: 
      human-capacity-increase: 
      human-child: 
      human-dolly: 勵
      human-edit: 
      human-female: 
      human-female-boy: 
      human-female-dance: 
      human-female-female: 
      human-female-girl: 
      human-greeting: 
      human-greeting-proximity: 
      human-greeting-variant: 
      human-handsdown: 
      human-handsup: 
      human-male: 
      human-male-board: 
      human-male-board-poll: 
      human-male-boy: 
      human-male-child: 
      human-male-female: 
      human-male-female-child: 
      human-male-girl: 
      human-male-height: 
      human-male-height-variant: 
      human-male-male: 
      human-non-binary: 
      human-pregnant: 
      human-queue: 
      human-scooter: 
      human-wheelchair: 
      human-white-cane: 呂
      humble-bundle: 
      hvac: 
      hvac-off: 
      hydraulic-oil-level: 
      hydraulic-oil-temperature: 
      hydro-power: 
      hydrogen-station: 
      ice-cream: 
      ice-cream-off: 
      ice-pop: 
      id-card: 
      identifier: 
      ideogram-cjk: 
      ideogram-cjk-variant: 
      image: 
      image-album: 
      image-area: 
      image-area-close: 
      image-auto-adjust: 
      image-broken: 
      image-broken-variant: 
      image-edit: 
      image-edit-outline: 
      image-filter-black-white: 
      image-filter-center-focus: 
      image-filter-center-focus-strong: 
      image-filter-center-focus-strong-outline: 
      image-filter-center-focus-weak: 
      image-filter-drama: 
      image-filter-frames: 
      image-filter-hdr: 
      image-filter-none: 
      image-filter-tilt-shift: 
      image-filter-vintage: 
      image-frame: 
      image-lock: 絛
      image-lock-outline: 練
      image-marker: 
      image-marker-outline: 
      image-minus: 
      image-move: 
      image-multiple: 
      image-multiple-outline: 
      image-off: 
      image-off-outline: 
      image-outline: 
      image-plus: 
      image-refresh: 什
      image-refresh-outline: 茶
      image-remove: 
      image-search: 
      image-search-outline: 
      image-size-select-actual: 
      image-size-select-large: 
      image-size-select-small: 
      image-sync: 刺
      image-sync-outline: 切
      image-text: 
      import: 
      inbox: 
      inbox-arrow-down: 
      inbox-arrow-down-outline: 
      inbox-arrow-up: 
      inbox-arrow-up-outline: 
      inbox-full: 
      inbox-full-outline: 
      inbox-multiple: 
      inbox-multiple-outline: 
      inbox-outline: 
      inbox-remove: 
      inbox-remove-outline: 
      incognito: 
      incognito-circle: 
      incognito-circle-off: 
      incognito-off: 
      induction: 
      infinity: 
      information: 
      information-off: 
      information-off-outline: 
      information-outline: 
      information-variant: 
      instagram: 
      instrument-triangle: 
      integrated-circuit-chip: 裸
      invert-colors: 
      invert-colors-off: 
      iobroker: 
      ip: 
      ip-network: 
      ip-network-outline: 
      ip-outline: 女
      ipod: 
      iron: 
      iron-board: 
      iron-outline: 
      island: 
      iv-bag: 
      jabber: 
      jeepney: 
      jellyfish: 
      jellyfish-outline: 
      jira: 
      jquery: 
      jsfiddle: 
      jump-rope: 
      kabaddi: 
      kangaroo: 
      karate: 
      kayaking: 
      keg: 
      kettle: 
      kettle-alert: 
      kettle-alert-outline: 
      kettle-off: 
      kettle-off-outline: 
      kettle-outline: 
      kettle-pour-over: 
      kettle-steam: 
      kettle-steam-outline: 
      kettlebell: 
      key: 
      key-alert: 廬
      key-alert-outline: 旅
      key-arrow-right: 
      key-chain: 
      key-chain-variant: 
      key-change: 
      key-link: 
      key-minus: 
      key-outline: 
      key-plus: 
      key-remove: 
      key-star: 
      key-variant: 
      key-wireless: 
      keyboard: 
      keyboard-backspace: 
      keyboard-caps: 
      keyboard-close: 
      keyboard-esc: 
      keyboard-f1: 
      keyboard-f10: 
      keyboard-f11: 
      keyboard-f12: 
      keyboard-f2: 
      keyboard-f3: 
      keyboard-f4: 
      keyboard-f5: 
      keyboard-f6: 
      keyboard-f7: 
      keyboard-f8: 
      keyboard-f9: 
      keyboard-off: 
      keyboard-off-outline: 
      keyboard-outline: 
      keyboard-return: 
      keyboard-settings: 
      keyboard-settings-outline: 
      keyboard-space: 
      keyboard-tab: 
      keyboard-tab-reverse: 
      keyboard-variant: 
      khanda: 
      kickstarter: 
      kite: 濾
      kite-outline: 礪
      kitesurfing: 
      klingon: 
      knife: 
      knife-military: 
      koala: 
      kodi: 
      kubernetes: 
      label: 
      label-multiple: 
      label-multiple-outline: 
      label-off: 
      label-off-outline: 
      label-outline: 
      label-percent: 
      label-percent-outline: 
      label-variant: 
      label-variant-outline: 
      ladder: 
      ladybug: 
      lambda: 
      lamp: 
      lamp-outline: 
      lamps: 
      lamps-outline: 
      lan: 
      lan-check: 
      lan-connect: 
      lan-disconnect: 
      lan-pending: 
      land-fields: 缾
      land-plots: 者
      land-plots-circle: 荒
      land-plots-circle-variant: 華
      land-rows-horizontal: 蝹
      land-rows-vertical: 襁
      landslide: 漢
      landslide-outline: 煮
      language-c: 
      language-cpp: 
      language-csharp: 
      language-css3: 
      language-fortran: 
      language-go: 
      language-haskell: 
      language-html5: 
      language-java: 
      language-javascript: 
      language-kotlin: 
      language-lua: 
      language-markdown: 
      language-markdown-outline: 
      language-php: 
      language-python: 
      language-r: 
      language-ruby: 
      language-ruby-on-rails: 
      language-rust: 
      language-swift: 
      language-typescript: 
      language-xaml: 
      laptop: 
      laptop-account: 爫
      laptop-off: 
      laravel: 
      laser-pointer: 
      lasso: 
      lastpass: 
      latitude: 
      launch: 
      lava-lamp: 
      layers: 
      layers-edit: 
      layers-minus: 
      layers-off: 
      layers-off-outline: 
      layers-outline: 
      layers-plus: 
      layers-remove: 
      layers-search: 
      layers-search-outline: 
      layers-triple: 
      layers-triple-outline: 
      lead-pencil: 
      leaf: 
      leaf-circle: 滑
      leaf-circle-outline: 串
      leaf-maple: 
      leaf-maple-off: 
      leaf-off: 
      leak: 
      leak-off: 
      lecturn: 﫯
      led-off: 
      led-on: 
      led-outline: 
      led-strip: 
      led-strip-variant: 
      led-strip-variant-off: 琢
      led-variant-off: 
      led-variant-on: 
      led-variant-outline: 
      leek: 
      less-than: 
      less-than-or-equal: 
      library: 
      library-outline: 﨡
      library-shelves: 
      license: 
      lifebuoy: 
      light-flood-down: 閭
      light-flood-up: 驪
      light-recessed: 
      light-switch: 
      light-switch-off: 﨣
      lightbulb: 
      lightbulb-alert: 易
      lightbulb-alert-outline: 李
      lightbulb-auto: 
      lightbulb-auto-outline: 
      lightbulb-cfl: 
      lightbulb-cfl-off: 
      lightbulb-cfl-spiral: 
      lightbulb-cfl-spiral-off: 
      lightbulb-fluorescent-tube: 
      lightbulb-fluorescent-tube-outline: 
      lightbulb-group: 
      lightbulb-group-off: 
      lightbulb-group-off-outline: 
      lightbulb-group-outline: 
      lightbulb-multiple: 
      lightbulb-multiple-off: 
      lightbulb-multiple-off-outline: 
      lightbulb-multiple-outline: 
      lightbulb-night: 碑
      lightbulb-night-outline: 社
      lightbulb-off: 
      lightbulb-off-outline: 
      lightbulb-on: 
      lightbulb-on-10: 祉
      lightbulb-on-20: 祈
      lightbulb-on-30: 祐
      lightbulb-on-40: 祖
      lightbulb-on-50: 祝
      lightbulb-on-60: 禍
      lightbulb-on-70: 禎
      lightbulb-on-80: 穀
      lightbulb-on-90: 突
      lightbulb-on-outline: 
      lightbulb-outline: 
      lightbulb-question: 梨
      lightbulb-question-outline: 泥
      lightbulb-spot: 
      lightbulb-spot-off: 
      lightbulb-variant: 
      lightbulb-variant-outline: 
      lighthouse: 
      lighthouse-on: 
      lightning-bolt: 
      lightning-bolt-circle: 
      lightning-bolt-outline: 
      line-scan: 
      lingerie: 
      link: 
      link-box: 
      link-box-outline: 
      link-box-variant: 
      link-box-variant-outline: 
      link-lock: 
      link-off: 
      link-plus: 
      link-variant: 
      link-variant-minus: 
      link-variant-off: 
      link-variant-plus: 
      link-variant-remove: 
      linkedin: 
      linux: 
      linux-mint: 
      lipstick: 
      liquid-spot: 
      liquor: 欄
      list-status: 
      litecoin: 
      loading: 
      location-enter: 
      location-exit: 
      lock: 
      lock-alert: 
      lock-alert-outline: 
      lock-check: 
      lock-check-outline: 
      lock-clock: 
      lock-minus: 
      lock-minus-outline: 
      lock-off: 
      lock-off-outline: 
      lock-open: 
      lock-open-alert: 
      lock-open-alert-outline: 
      lock-open-check: 
      lock-open-check-outline: 
      lock-open-minus: 
      lock-open-minus-outline: 
      lock-open-outline: 
      lock-open-plus: 
      lock-open-plus-outline: 
      lock-open-remove: 
      lock-open-remove-outline: 
      lock-open-variant: 
      lock-open-variant-outline: 
      lock-outline: 
      lock-pattern: 
      lock-plus: 
      lock-plus-outline: 
      lock-question: 
      lock-remove: 
      lock-remove-outline: 
      lock-reset: 
      lock-smart: 
      locker: 
      locker-multiple: 
      login: 
      login-variant: 
      logout: 
      logout-variant: 
      longitude: 
      looks: 
      lotion: 
      lotion-outline: 
      lotion-plus: 
      lotion-plus-outline: 
      loupe: 
      lumx: 
      lungs: 
      mace: 
      magazine-pistol: 
      magazine-rifle: 
      magic-staff: 
      magnet: 
      magnet-on: 
      magnify: 
      magnify-close: 
      magnify-expand: 
      magnify-minus: 
      magnify-minus-cursor: 
      magnify-minus-outline: 
      magnify-plus: 
      magnify-plus-cursor: 
      magnify-plus-outline: 
      magnify-remove-cursor: 
      magnify-remove-outline: 
      magnify-scan: 
      mail: 
      mailbox: 
      mailbox-open: 
      mailbox-open-outline: 
      mailbox-open-up: 
      mailbox-open-up-outline: 
      mailbox-outline: 
      mailbox-up: 
      mailbox-up-outline: 
      manjaro: 
      map: 
      map-check: 
      map-check-outline: 
      map-clock: 
      map-clock-outline: 
      map-legend: 
      map-marker: 
      map-marker-account: 
      map-marker-account-outline: 
      map-marker-alert: 
      map-marker-alert-outline: 
      map-marker-check: 
      map-marker-check-outline: 
      map-marker-circle: 
      map-marker-distance: 
      map-marker-down: 
      map-marker-left: 
      map-marker-left-outline: 
      map-marker-minus: 
      map-marker-minus-outline: 
      map-marker-multiple: 
      map-marker-multiple-outline: 
      map-marker-off: 
      map-marker-off-outline: 
      map-marker-outline: 
      map-marker-path: 
      map-marker-plus: 
      map-marker-plus-outline: 
      map-marker-question: 
      map-marker-question-outline: 
      map-marker-radius: 
      map-marker-radius-outline: 
      map-marker-remove: 
      map-marker-remove-outline: 
      map-marker-remove-variant: 
      map-marker-right: 
      map-marker-right-outline: 
      map-marker-star: 
      map-marker-star-outline: 
      map-marker-up: 
      map-minus: 
      map-outline: 
      map-plus: 
      map-search: 
      map-search-outline: 
      mapbox: 
      margin: 
      marker: 
      marker-cancel: 
      marker-check: 
      mastodon: 
      material-design: 
      material-ui: 
      math-compass: 
      math-cos: 
      math-integral: 
      math-integral-box: 
      math-log: 
      math-norm: 
      math-norm-box: 
      math-sin: 
      math-tan: 
      matrix: 
      medal: 
      medal-outline: 
      medical-bag: 
      medical-cotton-swab: 覆
      meditation: 
      memory: 
      menorah: 
      menorah-fire: 
      menu: 
      menu-down: 
      menu-down-outline: 
      menu-left: 
      menu-left-outline: 
      menu-open: 
      menu-right: 
      menu-right-outline: 
      menu-swap: 
      menu-swap-outline: 
      menu-up: 
      menu-up-outline: 
      merge: 
      message: 
      message-alert: 
      message-alert-outline: 
      message-arrow-left: 
      message-arrow-left-outline: 
      message-arrow-right: 
      message-arrow-right-outline: 
      message-badge: 鹿
      message-badge-outline: 論
      message-bookmark: 
      message-bookmark-outline: 
      message-bulleted: 
      message-bulleted-off: 
      message-cog: 
      message-cog-outline: 
      message-draw: 
      message-fast: 溜
      message-fast-outline: 琉
      message-flash: 
      message-flash-outline: 
      message-image: 
      message-image-outline: 
      message-lock: 
      message-lock-outline: 
      message-minus: 
      message-minus-outline: 
      message-off: 
      message-off-outline: 
      message-outline: 
      message-plus: 
      message-plus-outline: 
      message-processing: 
      message-processing-outline: 
      message-question: 
      message-question-outline: 
      message-reply: 
      message-reply-outline: 
      message-reply-text: 
      message-reply-text-outline: 
      message-settings: 
      message-settings-outline: 
      message-star: 
      message-star-outline: 
      message-text: 
      message-text-clock: 
      message-text-clock-outline: 
      message-text-fast: 留
      message-text-fast-outline: 硫
      message-text-lock: 
      message-text-lock-outline: 
      message-text-outline: 
      message-video: 
      meteor: 
      meter-electric: 節
      meter-electric-outline: 練
      meter-gas: 縉
      meter-gas-outline: 繁
      metronome: 
      metronome-tick: 
      micro-sd: 
      microphone: 
      microphone-minus: 
      microphone-off: 
      microphone-outline: 
      microphone-plus: 
      microphone-question: 麗
      microphone-question-outline: 黎
      microphone-settings: 
      microphone-variant: 
      microphone-variant-off: 
      microscope: 
      microsoft: 
      microsoft-access: 
      microsoft-azure: 
      microsoft-azure-devops: 
      microsoft-bing: 
      microsoft-dynamics-365: 
      microsoft-edge: 
      microsoft-excel: 
      microsoft-internet-explorer: 
      microsoft-office: 
      microsoft-onedrive: 
      microsoft-onenote: 
      microsoft-outlook: 
      microsoft-powerpoint: 
      microsoft-sharepoint: 
      microsoft-teams: 
      microsoft-visual-studio: 
      microsoft-visual-studio-code: 
      microsoft-windows: 
      microsoft-windows-classic: 
      microsoft-word: 
      microsoft-xbox: 
      microsoft-xbox-controller: 
      microsoft-xbox-controller-battery-alert: 
      microsoft-xbox-controller-battery-charging: 
      microsoft-xbox-controller-battery-empty: 
      microsoft-xbox-controller-battery-full: 
      microsoft-xbox-controller-battery-low: 
      microsoft-xbox-controller-battery-medium: 
      microsoft-xbox-controller-battery-unknown: 
      microsoft-xbox-controller-menu: 
      microsoft-xbox-controller-off: 
      microsoft-xbox-controller-view: 
      microwave: 
      microwave-off: 
      middleware: 
      middleware-outline: 
      midi: 
      midi-port: 
      mine: 
      minecraft: 
      mini-sd: 
      minidisc: 
      minus: 
      minus-box: 
      minus-box-multiple: 
      minus-box-multiple-outline: 
      minus-box-outline: 
      minus-circle: 
      minus-circle-multiple: 
      minus-circle-multiple-outline: 
      minus-circle-off: 
      minus-circle-off-outline: 
      minus-circle-outline: 
      minus-network: 
      minus-network-outline: 
      minus-thick: 
      mirror: 
      mirror-rectangle: 
      mirror-variant: 
      mixed-martial-arts: 
      mixed-reality: 
      molecule: 
      molecule-co: 
      molecule-co2: 
      monitor: 
      monitor-account: 署
      monitor-arrow-down: 紐
      monitor-arrow-down-variant: 類
      monitor-cellphone: 
      monitor-cellphone-star: 
      monitor-dashboard: 
      monitor-edit: 
      monitor-eye: 
      monitor-lock: 
      monitor-multiple: 
      monitor-off: 
      monitor-screenshot: 
      monitor-share: 
      monitor-shimmer: 
      monitor-small: 
      monitor-speaker: 
      monitor-speaker-off: 
      monitor-star: 
      moon-first-quarter: 
      moon-full: 
      moon-last-quarter: 
      moon-new: 
      moon-waning-crescent: 
      moon-waning-gibbous: 
      moon-waxing-crescent: 
      moon-waxing-gibbous: 
      moped: 
      moped-electric: 
      moped-electric-outline: 
      moped-outline: 
      more: 
      mortar-pestle: 
      mortar-pestle-plus: 
      mosque: 
      mother-heart: 
      mother-nurse: 
      motion: 
      motion-outline: 
      motion-pause: 
      motion-pause-outline: 
      motion-play: 
      motion-play-outline: 
      motion-sensor: 
      motion-sensor-off: 
      motorbike: 
      motorbike-electric: 
      mouse: 
      mouse-bluetooth: 
      mouse-move-down: 
      mouse-move-up: 
      mouse-move-vertical: 
      mouse-off: 
      mouse-variant: 
      mouse-variant-off: 
      move-resize: 
      move-resize-variant: 
      movie: 
      movie-check: 
      movie-check-outline: 
      movie-cog: 
      movie-cog-outline: 
      movie-edit: 
      movie-edit-outline: 
      movie-filter: 
      movie-filter-outline: 
      movie-minus: 
      movie-minus-outline: 
      movie-off: 
      movie-off-outline: 
      movie-open: 
      movie-open-check: 
      movie-open-check-outline: 
      movie-open-cog: 
      movie-open-cog-outline: 
      movie-open-edit: 
      movie-open-edit-outline: 
      movie-open-minus: 
      movie-open-minus-outline: 
      movie-open-off: 
      movie-open-off-outline: 
      movie-open-outline: 
      movie-open-play: 
      movie-open-play-outline: 
      movie-open-plus: 
      movie-open-plus-outline: 
      movie-open-remove: 
      movie-open-remove-outline: 
      movie-open-settings: 
      movie-open-settings-outline: 
      movie-open-star: 
      movie-open-star-outline: 
      movie-outline: 
      movie-play: 
      movie-play-outline: 
      movie-plus: 
      movie-plus-outline: 
      movie-remove: 
      movie-remove-outline: 
      movie-roll: 
      movie-search: 
      movie-search-outline: 
      movie-settings: 
      movie-settings-outline: 
      movie-star: 
      movie-star-outline: 
      mower: 
      mower-bag: 
      muffin: 
      multicast: 
      multiplication: 
      multiplication-box: 
      mushroom: 
      mushroom-off: 
      mushroom-off-outline: 
      mushroom-outline: 
      music: 
      music-accidental-double-flat: 
      music-accidental-double-sharp: 
      music-accidental-flat: 
      music-accidental-natural: 
      music-accidental-sharp: 
      music-box: 
      music-box-multiple: 
      music-box-multiple-outline: 
      music-box-outline: 
      music-circle: 
      music-circle-outline: 
      music-clef-alto: 
      music-clef-bass: 
      music-clef-treble: 
      music-note: 
      music-note-bluetooth: 
      music-note-bluetooth-off: 
      music-note-eighth: 
      music-note-eighth-dotted: 
      music-note-half: 
      music-note-half-dotted: 
      music-note-off: 
      music-note-off-outline: 
      music-note-outline: 
      music-note-plus: 
      music-note-quarter: 
      music-note-quarter-dotted: 
      music-note-sixteenth: 
      music-note-sixteenth-dotted: 
      music-note-whole: 
      music-note-whole-dotted: 
      music-off: 
      music-rest-eighth: 
      music-rest-half: 
      music-rest-quarter: 
      music-rest-sixteenth: 
      music-rest-whole: 
      mustache: 
      nail: 
      nas: 
      nativescript: 
      nature: 
      nature-people: 
      navigation: 
      navigation-outline: 
      navigation-variant: 
      navigation-variant-outline: 
      near-me: 
      necklace: 
      needle: 
      needle-off: 六
      netflix: 
      network: 
      network-off: 
      network-off-outline: 
      network-outline: 
      network-pos: 響
      network-strength-1: 
      network-strength-1-alert: 
      network-strength-2: 
      network-strength-2-alert: 
      network-strength-3: 
      network-strength-3-alert: 
      network-strength-4: 
      network-strength-4-alert: 
      network-strength-4-cog: 酪
      network-strength-off: 
      network-strength-off-outline: 
      network-strength-outline: 
      new-box: 
      newspaper: 
      newspaper-check: 壟
      newspaper-minus: 
      newspaper-plus: 
      newspaper-remove: 弄
      newspaper-variant: 
      newspaper-variant-multiple: 
      newspaper-variant-multiple-outline: 
      newspaper-variant-outline: 
      nfc: 
      nfc-search-variant: 
      nfc-tap: 
      nfc-variant: 
      nfc-variant-off: 
      ninja: 
      nintendo-game-boy: 
      nintendo-switch: 
      nintendo-wii: 
      nintendo-wiiu: 
      nix: 
      nodejs: 
      noodles: 
      not-equal: 
      not-equal-variant: 
      note: 
      note-alert: 
      note-alert-outline: 
      note-check: 
      note-check-outline: 
      note-edit: 
      note-edit-outline: 
      note-minus: 
      note-minus-outline: 
      note-multiple: 
      note-multiple-outline: 
      note-off: 
      note-off-outline: 
      note-outline: 
      note-plus: 
      note-plus-outline: 
      note-remove: 
      note-remove-outline: 
      note-search: 
      note-search-outline: 
      note-text: 
      note-text-outline: 
      notebook: 
      notebook-check: 
      notebook-check-outline: 
      notebook-edit: 
      notebook-edit-outline: 
      notebook-heart: 見
      notebook-heart-outline: 廓
      notebook-minus: 
      notebook-minus-outline: 
      notebook-multiple: 
      notebook-outline: 
      notebook-plus: 
      notebook-plus-outline: 
      notebook-remove: 
      notebook-remove-outline: 
      notification-clear-all: 
      npm: 
      nuke: 
      null: 
      numeric: 
      numeric-0: 
      numeric-0-box: 
      numeric-0-box-multiple: 
      numeric-0-box-multiple-outline: 
      numeric-0-box-outline: 
      numeric-0-circle: 
      numeric-0-circle-outline: 
      numeric-1: 
      numeric-1-box: 
      numeric-1-box-multiple: 
      numeric-1-box-multiple-outline: 
      numeric-1-box-outline: 
      numeric-1-circle: 
      numeric-1-circle-outline: 
      numeric-10: 
      numeric-10-box: 
      numeric-10-box-multiple: 
      numeric-10-box-multiple-outline: 
      numeric-10-box-outline: 
      numeric-10-circle: 
      numeric-10-circle-outline: 
      numeric-2: 
      numeric-2-box: 
      numeric-2-box-multiple: 
      numeric-2-box-multiple-outline: 
      numeric-2-box-outline: 
      numeric-2-circle: 
      numeric-2-circle-outline: 
      numeric-3: 
      numeric-3-box: 
      numeric-3-box-multiple: 
      numeric-3-box-multiple-outline: 
      numeric-3-box-outline: 
      numeric-3-circle: 
      numeric-3-circle-outline: 
      numeric-4: 
      numeric-4-box: 
      numeric-4-box-multiple: 
      numeric-4-box-multiple-outline: 
      numeric-4-box-outline: 
      numeric-4-circle: 
      numeric-4-circle-outline: 
      numeric-5: 
      numeric-5-box: 
      numeric-5-box-multiple: 
      numeric-5-box-multiple-outline: 
      numeric-5-box-outline: 
      numeric-5-circle: 
      numeric-5-circle-outline: 
      numeric-6: 
      numeric-6-box: 
      numeric-6-box-multiple: 
      numeric-6-box-multiple-outline: 
      numeric-6-box-outline: 
      numeric-6-circle: 
      numeric-6-circle-outline: 
      numeric-7: 
      numeric-7-box: 
      numeric-7-box-multiple: 
      numeric-7-box-multiple-outline: 
      numeric-7-box-outline: 
      numeric-7-circle: 
      numeric-7-circle-outline: 
      numeric-8: 
      numeric-8-box: 
      numeric-8-box-multiple: 
      numeric-8-box-multiple-outline: 
      numeric-8-box-outline: 
      numeric-8-circle: 
      numeric-8-circle-outline: 
      numeric-9: 
      numeric-9-box: 
      numeric-9-box-multiple: 
      numeric-9-box-multiple-outline: 
      numeric-9-box-outline: 
      numeric-9-circle: 
      numeric-9-circle-outline: 
      numeric-9-plus: 
      numeric-9-plus-box: 
      numeric-9-plus-box-multiple: 
      numeric-9-plus-box-multiple-outline: 
      numeric-9-plus-box-outline: 
      numeric-9-plus-circle: 
      numeric-9-plus-circle-outline: 
      numeric-negative-1: 
      numeric-off: 戮
      numeric-positive-1: 
      nut: 
      nutrition: 
      nuxt: 
      oar: 
      ocarina: 
      oci: 
      ocr: 
      octagon: 
      octagon-outline: 
      octagram: 
      octagram-outline: 
      octahedron: 累
      octahedron-off: 縷
      odnoklassniki: 
      offer: 
      office-building: 
      office-building-cog: 賂
      office-building-cog-outline: 雷
      office-building-marker: 
      office-building-marker-outline: 
      office-building-outline: 
      oil: 
      oil-lamp: 
      oil-level: 
      oil-temperature: 
      om: 
      omega: 
      one-up: 
      onepassword: 
      opacity: 
      open-in-app: 
      open-in-new: 
      open-source-initiative: 
      openid: 
      opera: 
      orbit: 
      orbit-variant: 
      order-alphabetical-ascending: 
      order-alphabetical-descending: 
      order-bool-ascending: 
      order-bool-ascending-variant: 
      order-bool-descending: 
      order-bool-descending-variant: 
      order-numeric-ascending: 
      order-numeric-descending: 
      origin: 
      ornament: 
      ornament-variant: 
      outdoor-lamp: 
      overscan: 
      owl: 
      pac-man: 
      package: 
      package-down: 
      package-up: 
      package-variant: 
      package-variant-closed: 
      package-variant-closed-minus: 陸
      package-variant-closed-plus: 倫
      package-variant-closed-remove: 崙
      package-variant-minus: 淪
      package-variant-plus: 輪
      package-variant-remove: 律
      page-first: 
      page-last: 
      page-layout-body: 
      page-layout-footer: 
      page-layout-header: 
      page-layout-header-footer: 
      page-layout-sidebar-left: 
      page-layout-sidebar-right: 
      page-next: 
      page-next-outline: 
      page-previous: 
      page-previous-outline: 
      pail: 
      pail-minus: 
      pail-minus-outline: 
      pail-off: 
      pail-off-outline: 
      pail-outline: 
      pail-plus: 
      pail-plus-outline: 
      pail-remove: 
      pail-remove-outline: 
      palette: 
      palette-advanced: 
      palette-outline: 
      palette-swatch: 
      palette-swatch-outline: 
      palette-swatch-variant: 陵
      palm-tree: 
      pan: 
      pan-bottom-left: 
      pan-bottom-right: 
      pan-down: 
      pan-horizontal: 
      pan-left: 
      pan-right: 
      pan-top-left: 
      pan-top-right: 
      pan-up: 
      pan-vertical: 
      panda: 
      pandora: 
      panorama: 
      panorama-fisheye: 
      panorama-horizontal: 蠟
      panorama-horizontal-outline: 
      panorama-outline: 曆
      panorama-sphere: 歷
      panorama-sphere-outline: 轢
      panorama-variant: 年
      panorama-variant-outline: 憐
      panorama-vertical: 廊
      panorama-vertical-outline: 
      panorama-wide-angle: 丹
      panorama-wide-angle-outline: 
      paper-cut-vertical: 
      paper-roll: 
      paper-roll-outline: 
      paperclip: 
      paperclip-check: 鉶
      paperclip-lock: 慄
      paperclip-minus: 陼
      paperclip-off: 難
      paperclip-plus: 靖
      paperclip-remove: 韛
      parachute: 
      parachute-outline: 
      paragliding: 
      parking: 
      party-popper: 
      passport: 
      passport-biometric: 
      pasta: 
      patio-heater: 
      patreon: 
      pause: 
      pause-circle: 
      pause-circle-outline: 
      pause-octagon: 
      pause-octagon-outline: 
      paw: 
      paw-off: 
      paw-off-outline: 
      paw-outline: 
      peace: 
      peanut: 
      peanut-off: 
      peanut-off-outline: 
      peanut-outline: 
      pen: 
      pen-lock: 
      pen-minus: 
      pen-off: 
      pen-plus: 
      pen-remove: 
      pencil: 
      pencil-box: 
      pencil-box-multiple: 
      pencil-box-multiple-outline: 
      pencil-box-outline: 
      pencil-circle: 
      pencil-circle-outline: 
      pencil-lock: 
      pencil-lock-outline: 
      pencil-minus: 
      pencil-minus-outline: 
      pencil-off: 
      pencil-off-outline: 
      pencil-outline: 
      pencil-plus: 
      pencil-plus-outline: 
      pencil-remove: 
      pencil-remove-outline: 
      pencil-ruler: 
      penguin: 
      pentagon: 
      pentagon-outline: 
      pentagram: 
      percent: 
      percent-box: 度
      percent-box-outline: 拓
      percent-circle: 糖
      percent-circle-outline: 宅
      percent-outline: 
      periodic-table: 
      perspective-less: 
      perspective-more: 
      ph: 
      phone: 
      phone-alert: 
      phone-alert-outline: 
      phone-bluetooth: 
      phone-bluetooth-outline: 
      phone-cancel: 
      phone-cancel-outline: 
      phone-check: 
      phone-check-outline: 
      phone-classic: 
      phone-classic-off: 
      phone-clock: 栗
      phone-dial: 
      phone-dial-outline: 
      phone-forward: 
      phone-forward-outline: 
      phone-hangup: 
      phone-hangup-outline: 
      phone-in-talk: 
      phone-in-talk-outline: 
      phone-incoming: 
      phone-incoming-outline: 
      phone-lock: 
      phone-lock-outline: 
      phone-log: 
      phone-log-outline: 
      phone-message: 
      phone-message-outline: 
      phone-minus: 
      phone-minus-outline: 
      phone-missed: 
      phone-missed-outline: 
      phone-off: 
      phone-off-outline: 
      phone-outgoing: 
      phone-outgoing-outline: 
      phone-outline: 
      phone-paused: 
      phone-paused-outline: 
      phone-plus: 
      phone-plus-outline: 
      phone-refresh: 漣
      phone-refresh-outline: 煉
      phone-remove: 
      phone-remove-outline: 
      phone-return: 
      phone-return-outline: 
      phone-ring: 
      phone-ring-outline: 
      phone-rotate-landscape: 
      phone-rotate-portrait: 
      phone-settings: 
      phone-settings-outline: 
      phone-sync: 璉
      phone-sync-outline: 秊
      phone-voip: 
      pi: 
      pi-box: 
      pi-hole: 
      piano: 
      piano-off: 
      pickaxe: 
      picture-in-picture-bottom-right: 
      picture-in-picture-bottom-right-outline: 
      picture-in-picture-top-right: 
      picture-in-picture-top-right-outline: 
      pier: 
      pier-crane: 
      pig: 
      pig-variant: 
      pig-variant-outline: 
      piggy-bank: 
      piggy-bank-outline: 
      pill: 
      pill-off: 者
      pillar: 
      pin: 
      pin-off: 
      pin-off-outline: 
      pin-outline: 
      pine-tree: 
      pine-tree-box: 
      pine-tree-fire: 
      pinterest: 
      pinwheel: 
      pinwheel-outline: 
      pipe: 
      pipe-disconnected: 
      pipe-leak: 
      pipe-valve: 
      pipe-wrench: 
      pirate: 
      pistol: 
      piston: 
      pitchfork: 
      pizza: 
      play: 
      play-box: 
      play-box-lock: 凞
      play-box-lock-open: 猪
      play-box-lock-open-outline: 益
      play-box-lock-outline: 礼
      play-box-multiple: 
      play-box-multiple-outline: 
      play-box-outline: 
      play-circle: 
      play-circle-outline: 
      play-network: 
      play-network-outline: 
      play-outline: 
      play-pause: 
      play-protected-content: 
      play-speed: 
      playlist-check: 
      playlist-edit: 
      playlist-minus: 
      playlist-music: 
      playlist-music-outline: 
      playlist-play: 
      playlist-plus: 
      playlist-remove: 
      playlist-star: 
      plex: 
      pliers: 念
      plus: 
      plus-box: 
      plus-box-multiple: 
      plus-box-multiple-outline: 
      plus-box-outline: 
      plus-circle: 
      plus-circle-multiple: 
      plus-circle-multiple-outline: 
      plus-circle-outline: 
      plus-lock: 臭
      plus-lock-open: 艹
      plus-minus: 
      plus-minus-box: 
      plus-minus-variant: 
      plus-network: 
      plus-network-outline: 
      plus-outline: 
      plus-thick: 
      podcast: 
      podium: 
      podium-bronze: 
      podium-gold: 
      podium-silver: 
      point-of-sale: 
      pokeball: 
      pokemon-go: 
      poker-chip: 
      polaroid: 
      police-badge: 
      police-badge-outline: 
      police-station: 
      poll: 
      polo: 
      polymer: 
      pool: 
      pool-thermometer: 艹
      popcorn: 
      post: 
      post-lamp: 著
      post-outline: 
      postage-stamp: 
      pot: 
      pot-mix: 
      pot-mix-outline: 
      pot-outline: 
      pot-steam: 
      pot-steam-outline: 
      pound: 
      pound-box: 
      pound-box-outline: 
      power: 
      power-cycle: 
      power-off: 
      power-on: 
      power-plug: 
      power-plug-off: 
      power-plug-off-outline: 
      power-plug-outline: 
      power-settings: 
      power-sleep: 
      power-socket: 
      power-socket-au: 
      power-socket-ch: 
      power-socket-de: 
      power-socket-eu: 
      power-socket-fr: 
      power-socket-it: 
      power-socket-jp: 
      power-socket-uk: 
      power-socket-us: 
      power-standby: 
      powershell: 
      prescription: 
      presentation: 
      presentation-play: 
      pretzel: 
      printer: 
      printer-3d: 
      printer-3d-nozzle: 
      printer-3d-nozzle-alert: 
      printer-3d-nozzle-alert-outline: 
      printer-3d-nozzle-heat: 
      printer-3d-nozzle-heat-outline: 
      printer-3d-nozzle-outline: 
      printer-alert: 
      printer-check: 
      printer-eye: 
      printer-off: 
      printer-off-outline: 
      printer-outline: 
      printer-pos: 
      printer-search: 
      printer-settings: 
      printer-wireless: 
      priority-high: 
      priority-low: 
      professional-hexagon: 
      progress-alert: 
      progress-check: 
      progress-clock: 
      progress-close: 
      progress-download: 
      progress-pencil: 
      progress-question: 
      progress-star: 
      progress-upload: 
      progress-wrench: 
      projector: 
      projector-off: 諸
      projector-screen: 
      projector-screen-off: 
      projector-screen-off-outline: 
      projector-screen-outline: 
      projector-screen-variant: 
      projector-screen-variant-off: 
      projector-screen-variant-off-outline: 
      projector-screen-variant-outline: 
      propane-tank: 
      propane-tank-outline: 
      protocol: 
      publish: 
      publish-off: 籠
      pulse: 
      pump: 
      pumpkin: 
      purse: 
      purse-outline: 
      puzzle: 
      puzzle-check: 
      puzzle-check-outline: 
      puzzle-edit: 
      puzzle-edit-outline: 
      puzzle-heart: 
      puzzle-heart-outline: 
      puzzle-minus: 
      puzzle-minus-outline: 
      puzzle-outline: 
      puzzle-plus: 
      puzzle-plus-outline: 
      puzzle-remove: 
      puzzle-remove-outline: 
      puzzle-star: 
      puzzle-star-outline: 
      pyramid: 陋
      pyramid-off: 勒
      qi: 
      qqchat: 
      qrcode: 
      qrcode-edit: 
      qrcode-minus: 
      qrcode-plus: 
      qrcode-remove: 
      qrcode-scan: 
      quadcopter: 
      quality-high: 
      quality-low: 
      quality-medium: 
      quora: 
      rabbit: 
      rabbit-variant: 褐
      rabbit-variant-outline: 視
      racing-helmet: 
      racquetball: 
      radar: 
      radiator: 
      radiator-disabled: 
      radiator-off: 
      radio: 
      radio-am: 
      radio-fm: 
      radio-handheld: 
      radio-off: 
      radio-tower: 
      radioactive: 
      radioactive-circle: 
      radioactive-circle-outline: 
      radioactive-off: 
      radiobox-blank: 
      radiobox-marked: 
      radiology-box: 
      radiology-box-outline: 
      radius: 
      radius-outline: 
      railroad-light: 
      rake: 
      raspberry-pi: 
      raw: 﨎
      raw-off: 﨏
      ray-end: 
      ray-end-arrow: 
      ray-start: 
      ray-start-arrow: 
      ray-start-end: 
      ray-start-vertex-end: 
      ray-vertex: 
      razor-double-edge: 練
      razor-single-edge: 聯
      react: 
      read: 
      receipt: 
      receipt-outline: 率
      receipt-text-check: 謁
      receipt-text-check-outline: 謹
      receipt-text-minus: 賓
      receipt-text-minus-outline: 贈
      receipt-text-plus: 辶
      receipt-text-plus-outline: 逸
      receipt-text-remove: 難
      receipt-text-remove-outline: 響
      record: 
      record-circle: 
      record-circle-outline: 
      record-player: 
      record-rec: 
      rectangle: 
      rectangle-outline: 
      recycle: 
      recycle-variant: 
      reddit: 
      redhat: 
      redo: 
      redo-variant: 
      reflect-horizontal: 
      reflect-vertical: 
      refresh: 
      refresh-auto: 
      refresh-circle: 
      regex: 
      registered-trademark: 
      reiterate: 
      relation-many-to-many: 
      relation-many-to-one: 
      relation-many-to-one-or-many: 
      relation-many-to-only-one: 
      relation-many-to-zero-or-many: 
      relation-many-to-zero-or-one: 
      relation-one-or-many-to-many: 
      relation-one-or-many-to-one: 
      relation-one-or-many-to-one-or-many: 
      relation-one-or-many-to-only-one: 
      relation-one-or-many-to-zero-or-many: 
      relation-one-or-many-to-zero-or-one: 
      relation-one-to-many: 
      relation-one-to-one: 
      relation-one-to-one-or-many: 
      relation-one-to-only-one: 
      relation-one-to-zero-or-many: 
      relation-one-to-zero-or-one: 
      relation-only-one-to-many: 
      relation-only-one-to-one: 
      relation-only-one-to-one-or-many: 
      relation-only-one-to-only-one: 
      relation-only-one-to-zero-or-many: 
      relation-only-one-to-zero-or-one: 
      relation-zero-or-many-to-many: 
      relation-zero-or-many-to-one: 
      relation-zero-or-many-to-one-or-many: 
      relation-zero-or-many-to-only-one: 
      relation-zero-or-many-to-zero-or-many: 
      relation-zero-or-many-to-zero-or-one: 
      relation-zero-or-one-to-many: 
      relation-zero-or-one-to-one: 
      relation-zero-or-one-to-one-or-many: 
      relation-zero-or-one-to-only-one: 
      relation-zero-or-one-to-zero-or-many: 
      relation-zero-or-one-to-zero-or-one: 
      relative-scale: 
      reload: 
      reload-alert: 
      reminder: 
      remote: 
      remote-desktop: 
      remote-off: 
      remote-tv: 
      remote-tv-off: 
      rename-box: 
      reorder-horizontal: 
      reorder-vertical: 
      repeat: 
      repeat-off: 
      repeat-once: 
      repeat-variant: 
      replay: 
      reply: 
      reply-all: 
      reply-all-outline: 
      reply-circle: 
      reply-outline: 
      reproduction: 
      resistor: 
      resistor-nodes: 
      resize: 
      resize-bottom-right: 
      responsive: 
      restart: 
      restart-alert: 
      restart-off: 
      restore: 
      restore-alert: 
      rewind: 
      rewind-10: 
      rewind-15: 聾
      rewind-30: 
      rewind-5: 
      rewind-60: 
      rewind-outline: 
      rhombus: 
      rhombus-medium: 
      rhombus-medium-outline: 
      rhombus-outline: 
      rhombus-split: 
      rhombus-split-outline: 
      ribbon: 
      rice: 
      rickshaw: 
      rickshaw-electric: 
      ring: 
      rivet: 
      road: 
      road-variant: 
      robber: 
      robot: 
      robot-angry: 
      robot-angry-outline: 
      robot-confused: 
      robot-confused-outline: 
      robot-dead: 
      robot-dead-outline: 
      robot-excited: 
      robot-excited-outline: 
      robot-happy: 
      robot-happy-outline: 
      robot-industrial: 
      robot-industrial-outline: 神
      robot-love: 
      robot-love-outline: 
      robot-mower: 
      robot-mower-outline: 
      robot-off: 
      robot-off-outline: 
      robot-outline: 
      robot-vacuum: 
      robot-vacuum-variant: 
      rocket: 
      rocket-launch: 
      rocket-launch-outline: 
      rocket-outline: 
      rodent: 
      roller-shade: 頻
      roller-shade-closed: 恵
      roller-skate: 
      roller-skate-off: 
      rollerblade: 
      rollerblade-off: 
      rollupjs: 
      rolodex: 視
      rolodex-outline: 調
      roman-numeral-1: 
      roman-numeral-10: 
      roman-numeral-2: 
      roman-numeral-3: 
      roman-numeral-4: 
      roman-numeral-5: 
      roman-numeral-6: 
      roman-numeral-7: 
      roman-numeral-8: 
      roman-numeral-9: 
      room-service: 
      room-service-outline: 
      rotate-360: 輦
      rotate-3d: 
      rotate-3d-variant: 
      rotate-left: 
      rotate-left-variant: 
      rotate-orbit: 
      rotate-right: 
      rotate-right-variant: 
      rounded-corner: 
      router: 
      router-network: 
      router-wireless: 
      router-wireless-off: 
      router-wireless-settings: 
      routes: 
      routes-clock: 
      rowing: 
      rss: 
      rss-box: 
      rss-off: 
      rug: 
      rugby: 
      ruler: 
      ruler-square: 
      ruler-square-compass: 
      run: 
      run-fast: 
      rv-truck: 
      sack: 
      sack-percent: 
      safe: 
      safe-square: 
      safe-square-outline: 
      safety-goggles: 
      sail-boat: 
      sail-boat-sink: 﫮
      sale: 
      sale-outline: 洞
      salesforce: 
      sass: 
      satellite: 
      satellite-uplink: 
      satellite-variant: 
      sausage: 
      sausage-off: 
      saw-blade: 
      sawtooth-wave: 
      saxophone: 
      scale: 
      scale-balance: 
      scale-bathroom: 
      scale-off: 
      scale-unbalanced: 醴
      scan-helper: 
      scanner: 
      scanner-off: 
      scatter-plot: 
      scatter-plot-outline: 
      scent: 綾
      scent-off: 菱
      school: 
      school-outline: 
      scissors-cutting: 
      scooter: 
      scooter-electric: 
      scoreboard: 
      scoreboard-outline: 
      screen-rotation: 
      screen-rotation-lock: 
      screw-flat-top: 
      screw-lag: 
      screw-machine-flat-top: 
      screw-machine-round-top: 
      screw-round-top: 
      screwdriver: 
      script: 
      script-outline: 
      script-text: 
      script-text-key: 
      script-text-key-outline: 
      script-text-outline: 
      script-text-play: 
      script-text-play-outline: 
      sd: 
      seal: 
      seal-variant: 
      search-web: 
      seat: 
      seat-flat: 
      seat-flat-angled: 
      seat-individual-suite: 
      seat-legroom-extra: 
      seat-legroom-normal: 
      seat-legroom-reduced: 
      seat-outline: 
      seat-passenger: 
      seat-recline-extra: 
      seat-recline-normal: 
      seatbelt: 
      security: 
      security-network: 
      seed: 
      seed-off: 
      seed-off-outline: 
      seed-outline: 
      seed-plus: 𤋮
      seed-plus-outline: 舘
      seesaw: 
      segment: 
      select: 
      select-all: 
      select-color: 
      select-compare: 
      select-drag: 
      select-group: 
      select-inverse: 
      select-marker: 
      select-multiple: 
      select-multiple-marker: 
      select-off: 
      select-place: 
      select-remove: 
      select-search: 
      selection: 
      selection-drag: 
      selection-ellipse: 
      selection-ellipse-arrow-inside: 
      selection-ellipse-remove: 
      selection-marker: 
      selection-multiple: 
      selection-multiple-marker: 
      selection-off: 
      selection-remove: 
      selection-search: 
      semantic-web: 
      send: 
      send-check: 
      send-check-outline: 
      send-circle: 
      send-circle-outline: 
      send-clock: 
      send-clock-outline: 
      send-lock: 
      send-lock-outline: 
      send-outline: 
      serial-port: 
      server: 
      server-minus: 
      server-network: 
      server-network-off: 
      server-off: 
      server-plus: 
      server-remove: 
      server-security: 
      set-all: 
      set-center: 
      set-center-right: 
      set-left: 
      set-left-center: 
      set-left-right: 
      set-merge: 
      set-none: 
      set-right: 
      set-split: 
      set-square: 
      set-top-box: 
      settings-helper: 
      shaker: 
      shaker-outline: 
      shape: 
      shape-circle-plus: 
      shape-outline: 
      shape-oval-plus: 
      shape-plus: 
      shape-polygon-plus: 
      shape-rectangle-plus: 
      shape-square-plus: 
      shape-square-rounded-plus: 
      share: 
      share-all: 
      share-all-outline: 
      share-circle: 
      share-off: 
      share-off-outline: 
      share-outline: 
      share-variant: 
      share-variant-outline: 
      shark: 
      shark-fin: 
      shark-fin-outline: 
      shark-off: 
      sheep: 
      shield: 
      shield-account: 
      shield-account-outline: 
      shield-account-variant: 
      shield-account-variant-outline: 
      shield-airplane: 
      shield-airplane-outline: 
      shield-alert: 
      shield-alert-outline: 
      shield-bug: 
      shield-bug-outline: 
      shield-car: 
      shield-check: 
      shield-check-outline: 
      shield-cross: 
      shield-cross-outline: 
      shield-crown: 
      shield-crown-outline: 
      shield-edit: 
      shield-edit-outline: 
      shield-half: 
      shield-half-full: 
      shield-home: 
      shield-home-outline: 
      shield-key: 
      shield-key-outline: 
      shield-link-variant: 
      shield-link-variant-outline: 
      shield-lock: 
      shield-lock-open: 蓮
      shield-lock-open-outline: 連
      shield-lock-outline: 
      shield-moon: 
      shield-moon-outline: 
      shield-off: 
      shield-off-outline: 
      shield-outline: 
      shield-plus: 
      shield-plus-outline: 
      shield-refresh: 
      shield-refresh-outline: 
      shield-remove: 
      shield-remove-outline: 
      shield-search: 
      shield-star: 
      shield-star-outline: 
      shield-sun: 
      shield-sun-outline: 
      shield-sword: 
      shield-sword-outline: 
      shield-sync: 
      shield-sync-outline: 
      shimmer: 
      ship-wheel: 
      shipping-pallet: 
      shoe-ballet: 
      shoe-cleat: 
      shoe-formal: 
      shoe-heel: 
      shoe-print: 
      shoe-sneaker: 
      shopping: 
      shopping-music: 
      shopping-outline: 
      shopping-search: 
      shopping-search-outline: 﩮
      shore: 
      shovel: 
      shovel-off: 
      shower: 
      shower-head: 
      shredder: 
      shuffle: 
      shuffle-disabled: 
      shuffle-variant: 
      shuriken: 
      sickle: 
      sigma: 
      sigma-lower: 
      sign-caution: 
      sign-direction: 
      sign-direction-minus: 
      sign-direction-plus: 
      sign-direction-remove: 
      sign-pole: 
      sign-real-estate: 
      sign-text: 
      signal: 
      signal-2g: 
      signal-3g: 
      signal-4g: 
      signal-5g: 
      signal-cellular-1: 
      signal-cellular-2: 
      signal-cellular-3: 
      signal-cellular-outline: 
      signal-distance-variant: 
      signal-hspa: 
      signal-hspa-plus: 
      signal-off: 
      signal-variant: 
      signature: 
      signature-freehand: 
      signature-image: 
      signature-text: 
      silo: 
      silverware: 
      silverware-clean: 
      silverware-fork: 
      silverware-fork-knife: 
      silverware-spoon: 
      silverware-variant: 
      sim: 
      sim-alert: 
      sim-alert-outline: 
      sim-off: 
      sim-off-outline: 
      sim-outline: 
      simple-icons: 
      sina-weibo: 
      sine-wave: 
      sitemap: 
      sitemap-outline: 鍊
      size-l: 
      size-m: 
      size-s: 
      size-xl: 
      size-xs: 
      size-xxl: 
      size-xxs: 
      size-xxxl: 
      skate: 
      skate-off: 
      skateboard: 
      skateboarding: 
      skew-less: 
      skew-more: 
      ski: 
      ski-cross-country: 
      ski-water: 
      skip-backward: 
      skip-backward-outline: 
      skip-forward: 
      skip-forward-outline: 
      skip-next: 
      skip-next-circle: 
      skip-next-circle-outline: 
      skip-next-outline: 
      skip-previous: 
      skip-previous-circle: 
      skip-previous-circle-outline: 
      skip-previous-outline: 
      skull: 
      skull-crossbones: 
      skull-crossbones-outline: 
      skull-outline: 
      skull-scan: 
      skull-scan-outline: 
      skype: 
      skype-business: 
      slack: 
      slash-forward: 
      slash-forward-box: 
      sledding: 
      sleep: 
      sleep-off: 
      slide: 
      slope-downhill: 
      slope-uphill: 
      slot-machine: 
      slot-machine-outline: 
      smart-card: 
      smart-card-off: 
      smart-card-off-outline: 
      smart-card-outline: 
      smart-card-reader: 
      smart-card-reader-outline: 
      smog: 
      smoke: 
      smoke-detector: 
      smoke-detector-alert: 來
      smoke-detector-alert-outline: 冷
      smoke-detector-off: 
      smoke-detector-off-outline: 
      smoke-detector-outline: 
      smoke-detector-variant: 
      smoke-detector-variant-alert: 勞
      smoke-detector-variant-off: 
      smoking: 
      smoking-off: 
      smoking-pipe: 
      smoking-pipe-off: 
      snail: 
      snake: 
      snapchat: 
      snowboard: 
      snowflake: 
      snowflake-alert: 
      snowflake-check: 﩯
      snowflake-melt: 
      snowflake-off: 
      snowflake-thermometer: 並
      snowflake-variant: 
      snowman: 
      snowmobile: 
      snowshoeing: 况
      soccer: 
      soccer-field: 
      social-distance-2-meters: 
      social-distance-6-feet: 
      sofa: 
      sofa-outline: 
      sofa-single: 
      sofa-single-outline: 
      solar-panel: 
      solar-panel-large: 
      solar-power: 
      solar-power-variant: 全
      solar-power-variant-outline: 侀
      soldering-iron: 
      solid: 
      sony-playstation: 
      sort: 
      sort-alphabetical-ascending: 
      sort-alphabetical-ascending-variant: 
      sort-alphabetical-descending: 
      sort-alphabetical-descending-variant: 
      sort-alphabetical-variant: 
      sort-ascending: 
      sort-bool-ascending: 
      sort-bool-ascending-variant: 
      sort-bool-descending: 
      sort-bool-descending-variant: 
      sort-calendar-ascending: 
      sort-calendar-descending: 
      sort-clock-ascending: 
      sort-clock-ascending-outline: 
      sort-clock-descending: 
      sort-clock-descending-outline: 
      sort-descending: 
      sort-numeric-ascending: 
      sort-numeric-ascending-variant: 
      sort-numeric-descending: 
      sort-numeric-descending-variant: 
      sort-numeric-variant: 
      sort-reverse-variant: 
      sort-variant: 
      sort-variant-lock: 
      sort-variant-lock-open: 
      sort-variant-off: 諸
      sort-variant-remove: 
      soundbar: 
      soundcloud: 
      source-branch: 
      source-branch-check: 
      source-branch-minus: 
      source-branch-plus: 
      source-branch-refresh: 
      source-branch-remove: 
      source-branch-sync: 
      source-commit: 
      source-commit-end: 
      source-commit-end-local: 
      source-commit-local: 
      source-commit-next-local: 
      source-commit-start: 
      source-commit-start-next-local: 
      source-fork: 
      source-merge: 
      source-pull: 
      source-repository: 
      source-repository-multiple: 
      soy-sauce: 
      soy-sauce-off: 
      spa: 
      spa-outline: 
      space-invaders: 
      space-station: 
      spade: 
      speaker: 
      speaker-bluetooth: 
      speaker-multiple: 
      speaker-off: 
      speaker-wireless: 
      spear: 
      speedometer: 
      speedometer-medium: 
      speedometer-slow: 
      spellcheck: 
      sphere: 肋
      sphere-off: 凜
      spider: 
      spider-thread: 
      spider-web: 
      spirit-level: 
      spoon-sugar: 
      spotify: 
      spotlight: 
      spotlight-beam: 
      spray: 
      spray-bottle: 
      sprinkler: 
      sprinkler-fire: 列
      sprinkler-variant: 
      sprout: 
      sprout-outline: 
      square: 
      square-circle: 
      square-edit-outline: 
      square-medium: 
      square-medium-outline: 
      square-off: 
      square-off-outline: 
      square-opacity: 
      square-outline: 
      square-root: 
      square-root-box: 
      square-rounded: 
      square-rounded-badge: 暴
      square-rounded-badge-outline: 輻
      square-rounded-outline: 
      square-small: 
      square-wave: 
      squeegee: 
      ssh: 
      stack-exchange: 
      stack-overflow: 
      stackpath: 
      stadium: 
      stadium-variant: 
      stairs: 
      stairs-box: 
      stairs-down: 
      stairs-up: 
      stamper: 
      standard-definition: 
      star: 
      star-box: 
      star-box-multiple: 
      star-box-multiple-outline: 
      star-box-outline: 
      star-check: 
      star-check-outline: 
      star-circle: 
      star-circle-outline: 
      star-cog: 
      star-cog-outline: 
      star-crescent: 
      star-david: 
      star-face: 
      star-four-points: 
      star-four-points-outline: 
      star-half: 
      star-half-full: 
      star-minus: 
      star-minus-outline: 
      star-off: 
      star-off-outline: 
      star-outline: 
      star-plus: 
      star-plus-outline: 
      star-remove: 
      star-remove-outline: 
      star-settings: 
      star-settings-outline: 
      star-shooting: 
      star-shooting-outline: 
      star-three-points: 
      star-three-points-outline: 
      state-machine: 
      steam: 
      steering: 
      steering-off: 
      step-backward: 
      step-backward-2: 
      step-forward: 
      step-forward-2: 
      stethoscope: 
      sticker: 
      sticker-alert: 
      sticker-alert-outline: 
      sticker-check: 
      sticker-check-outline: 
      sticker-circle-outline: 
      sticker-emoji: 
      sticker-minus: 
      sticker-minus-outline: 
      sticker-outline: 
      sticker-plus: 
      sticker-plus-outline: 
      sticker-remove: 
      sticker-remove-outline: 
      sticker-text: 
      sticker-text-outline: 
      stocking: 
      stomach: 
      stool: 樂
      stool-outline: 諾
      stop: 
      stop-circle: 
      stop-circle-outline: 
      storage-tank: 充
      storage-tank-outline: 冀
      store: 
      store-24-hour: 
      store-alert: 
      store-alert-outline: 
      store-check: 
      store-check-outline: 
      store-clock: 
      store-clock-outline: 
      store-cog: 
      store-cog-outline: 
      store-edit: 
      store-edit-outline: 
      store-marker: 
      store-marker-outline: 
      store-minus: 
      store-minus-outline: 
      store-off: 
      store-off-outline: 
      store-outline: 
      store-plus: 
      store-plus-outline: 
      store-remove: 
      store-remove-outline: 
      store-search: 
      store-search-outline: 
      store-settings: 
      store-settings-outline: 
      storefront: 
      storefront-outline: 
      stove: 
      strategy: 
      stretch-to-page: 
      stretch-to-page-outline: 
      string-lights: 
      string-lights-off: 
      subdirectory-arrow-left: 
      subdirectory-arrow-right: 
      submarine: 
      subtitles: 
      subtitles-outline: 
      subway: 
      subway-alert-variant: 
      subway-variant: 
      summit: 
      sun-clock: 勇
      sun-clock-outline: 勺
      sun-compass: 捻
      sun-snowflake: 
      sun-snowflake-variant: 喝
      sun-thermometer: 
      sun-thermometer-outline: 
      sun-wireless: 
      sun-wireless-outline: 
      sunglasses: 
      surfing: 
      surround-sound: 
      surround-sound-2-0: 
      surround-sound-2-1: 
      surround-sound-3-1: 
      surround-sound-5-1: 
      surround-sound-5-1-2: 
      surround-sound-7-1: 
      svg: 
      swap-horizontal: 
      swap-horizontal-bold: 
      swap-horizontal-circle: 
      swap-horizontal-circle-outline: 
      swap-horizontal-variant: 
      swap-vertical: 
      swap-vertical-bold: 
      swap-vertical-circle: 
      swap-vertical-circle-outline: 
      swap-vertical-variant: 
      swim: 
      switch: 
      sword: 
      sword-cross: 
      syllabary-hangul: 
      syllabary-hiragana: 
      syllabary-katakana: 
      syllabary-katakana-halfwidth: 
      symbol: 
      symfony: 
      sync: 
      sync-alert: 
      sync-circle: 
      sync-off: 
      tab: 
      tab-minus: 
      tab-plus: 
      tab-remove: 
      tab-search: 劣
      tab-unselected: 
      table: 
      table-account: 
      table-alert: 
      table-arrow-down: 
      table-arrow-left: 
      table-arrow-right: 
      table-arrow-up: 
      table-border: 
      table-cancel: 
      table-chair: 
      table-check: 
      table-clock: 
      table-cog: 
      table-column: 
      table-column-plus-after: 
      table-column-plus-before: 
      table-column-remove: 
      table-column-width: 
      table-edit: 
      table-eye: 
      table-eye-off: 
      table-furniture: 
      table-headers-eye: 
      table-headers-eye-off: 
      table-heart: 
      table-key: 
      table-large: 
      table-large-plus: 
      table-large-remove: 
      table-lock: 
      table-merge-cells: 
      table-minus: 
      table-multiple: 
      table-network: 
      table-of-contents: 
      table-off: 
      table-picnic: 
      table-pivot: 
      table-plus: 
      table-refresh: 
      table-remove: 
      table-row: 
      table-row-height: 
      table-row-plus-after: 
      table-row-plus-before: 
      table-row-remove: 
      table-search: 
      table-settings: 
      table-split-cell: 
      table-star: 
      table-sync: 
      table-tennis: 
      tablet: 
      tablet-android: 
      tablet-cellphone: 
      tablet-dashboard: 
      taco: 
      tag: 
      tag-arrow-down: 
      tag-arrow-down-outline: 
      tag-arrow-left: 
      tag-arrow-left-outline: 
      tag-arrow-right: 
      tag-arrow-right-outline: 
      tag-arrow-up: 
      tag-arrow-up-outline: 
      tag-check: 啕
      tag-check-outline: 喙
      tag-faces: 
      tag-heart: 
      tag-heart-outline: 
      tag-minus: 
      tag-minus-outline: 
      tag-multiple: 
      tag-multiple-outline: 
      tag-off: 
      tag-off-outline: 
      tag-outline: 
      tag-plus: 
      tag-plus-outline: 
      tag-remove: 
      tag-remove-outline: 
      tag-search: 句
      tag-search-outline: 龜
      tag-text: 
      tag-text-outline: 
      tailwind: 
      tally-mark-1: 請
      tally-mark-2: 謁
      tally-mark-3: 諾
      tally-mark-4: 諭
      tally-mark-5: 謹
      tangram: 
      tank: 
      tanker-truck: 
      tape-drive: 
      tape-measure: 
      target: 
      target-account: 
      target-variant: 
      taxi: 
      tea: 
      tea-outline: 
      teamviewer: 
      teddy-bear: 
      telescope: 
      television: 
      television-ambient-light: 
      television-box: 
      television-classic: 
      television-classic-off: 
      television-guide: 
      television-off: 
      television-pause: 
      television-play: 
      television-shimmer: 
      television-stop: 
      temperature-celsius: 
      temperature-fahrenheit: 
      temperature-kelvin: 
      tennis: 
      tennis-ball: 
      tent: 
      terraform: 
      terrain: 
      test-tube: 
      test-tube-empty: 
      test-tube-off: 
      text: 
      text-account: 
      text-box: 
      text-box-check: 
      text-box-check-outline: 
      text-box-edit: 嗢
      text-box-edit-outline: 塚
      text-box-minus: 
      text-box-minus-outline: 
      text-box-multiple: 
      text-box-multiple-outline: 
      text-box-outline: 
      text-box-plus: 
      text-box-plus-outline: 
      text-box-remove: 
      text-box-remove-outline: 
      text-box-search: 
      text-box-search-outline: 
      text-long: 
      text-recognition: 
      text-search: 
      text-search-variant: 墳
      text-shadow: 
      text-short: 
      text-to-speech: 
      text-to-speech-off: 
      texture: 
      texture-box: 
      theater: 
      theme-light-dark: 
      thermometer: 
      thermometer-alert: 
      thermometer-bluetooth: 
      thermometer-check: 奄
      thermometer-chevron-down: 
      thermometer-chevron-up: 
      thermometer-high: 
      thermometer-lines: 
      thermometer-low: 
      thermometer-minus: 
      thermometer-off: 
      thermometer-plus: 
      thermometer-water: 奔
      thermostat: 
      thermostat-box: 
      thought-bubble: 
      thought-bubble-outline: 
      thumb-down: 
      thumb-down-outline: 
      thumb-up: 
      thumb-up-outline: 
      thumbs-up-down: 
      thumbs-up-down-outline: 邏
      ticket: 
      ticket-account: 
      ticket-confirmation: 
      ticket-confirmation-outline: 
      ticket-outline: 
      ticket-percent: 
      ticket-percent-outline: 
      tie: 
      tilde: 
      tilde-off: 
      timelapse: 
      timeline: 
      timeline-alert: 
      timeline-alert-outline: 
      timeline-check: 
      timeline-check-outline: 
      timeline-clock: 
      timeline-clock-outline: 
      timeline-help: 
      timeline-help-outline: 
      timeline-minus: 
      timeline-minus-outline: 
      timeline-outline: 
      timeline-plus: 
      timeline-plus-outline: 
      timeline-remove: 
      timeline-remove-outline: 
      timeline-text: 
      timeline-text-outline: 
      timer: 
      timer-10: 
      timer-3: 
      timer-alert: 頋
      timer-alert-outline: 頻
      timer-cancel: 鬒
      timer-cancel-outline: 龜
      timer-check: 𢡊
      timer-check-outline: 𢡄
      timer-cog: 襤
      timer-cog-outline: 拉
      timer-edit: 𣏕
      timer-edit-outline: 㮝
      timer-lock: 䀘
      timer-lock-open: 䀹
      timer-lock-open-outline: 𥉉
      timer-lock-outline: 𥳐
      timer-marker: 𧻓
      timer-marker-outline: 齃
      timer-minus: 龎
      timer-minus-outline: 﫚
      timer-music: 﫛
      timer-music-outline: 﫜
      timer-off: 
      timer-off-outline: 
      timer-outline: 
      timer-pause: 﫝
      timer-pause-outline: 﫞
      timer-play: 﫟
      timer-play-outline: 﫠
      timer-plus: 﫡
      timer-plus-outline: 﫢
      timer-refresh: 﫣
      timer-refresh-outline: 﫤
      timer-remove: 﫥
      timer-remove-outline: 﫦
      timer-sand: 
      timer-sand-complete: 咽
      timer-sand-empty: 
      timer-sand-full: 
      timer-sand-paused: 烈
      timer-settings: 濫
      timer-settings-outline: 藍
      timer-star: 﫧
      timer-star-outline: 﫨
      timer-stop: 﫩
      timer-stop-outline: 﫪
      timer-sync: 﫫
      timer-sync-outline: 﫬
      timetable: 
      tire: 
      toaster: 
      toaster-off: 
      toaster-oven: 
      toggle-switch: 
      toggle-switch-off: 
      toggle-switch-off-outline: 
      toggle-switch-outline: 
      toggle-switch-variant: 﨤
      toggle-switch-variant-off: 逸
      toilet: 
      toolbox: 
      toolbox-outline: 
      tools: 
      tooltip: 
      tooltip-account: 
      tooltip-cellphone: 
      tooltip-check: 
      tooltip-check-outline: 
      tooltip-edit: 
      tooltip-edit-outline: 
      tooltip-image: 
      tooltip-image-outline: 
      tooltip-minus: 
      tooltip-minus-outline: 
      tooltip-outline: 
      tooltip-plus: 
      tooltip-plus-outline: 
      tooltip-remove: 
      tooltip-remove-outline: 
      tooltip-text: 
      tooltip-text-outline: 
      tooth: 
      tooth-outline: 
      toothbrush: 
      toothbrush-electric: 
      toothbrush-paste: 
      torch: 
      tortoise: 
      toslink: 
      tournament: 
      tow-truck: 
      tower-beach: 
      tower-fire: 
      town-hall: 
      toy-brick: 
      toy-brick-marker: 
      toy-brick-marker-outline: 
      toy-brick-minus: 
      toy-brick-minus-outline: 
      toy-brick-outline: 
      toy-brick-plus: 
      toy-brick-plus-outline: 
      toy-brick-remove: 
      toy-brick-remove-outline: 
      toy-brick-search: 
      toy-brick-search-outline: 
      track-light: 
      trackpad: 
      trackpad-lock: 
      tractor: 
      tractor-variant: 
      trademark: 
      traffic-cone: 
      traffic-light: 
      traffic-light-outline: 
      train: 
      train-car: 
      train-car-passenger: 
      train-car-passenger-door: 
      train-car-passenger-door-open: 
      train-car-passenger-variant: 
      train-variant: 
      tram: 
      tram-side: 
      transcribe: 
      transcribe-close: 
      transfer: 
      transfer-down: 
      transfer-left: 
      transfer-right: 
      transfer-up: 
      transit-connection: 
      transit-connection-horizontal: 
      transit-connection-variant: 
      transit-detour: 
      transit-skip: 
      transit-transfer: 
      transition: 
      transition-masked: 
      translate: 
      translate-off: 
      transmission-tower: 
      transmission-tower-export: 狼
      transmission-tower-import: 郎
      transmission-tower-off: 隆
      trash-can: 
      trash-can-outline: 
      tray: 
      tray-alert: 
      tray-arrow-down: 
      tray-arrow-up: 
      tray-full: 
      tray-minus: 
      tray-plus: 
      tray-remove: 
      treasure-chest: 
      tree: 
      tree-outline: 
      trello: 
      trending-down: 
      trending-neutral: 
      trending-up: 
      triangle: 
      triangle-outline: 
      triangle-small-down: 行
      triangle-small-up: 降
      triangle-wave: 
      triforce: 
      trophy: 
      trophy-award: 
      trophy-broken: 
      trophy-outline: 
      trophy-variant: 
      trophy-variant-outline: 
      truck: 
      truck-alert: 利
      truck-alert-outline: 吏
      truck-cargo-container: 
      truck-check: 
      truck-check-outline: 
      truck-delivery: 
      truck-delivery-outline: 
      truck-fast: 
      truck-fast-outline: 
      truck-flatbed: 
      truck-minus: 玲
      truck-minus-outline: 寮
      truck-outline: 
      truck-plus: 怜
      truck-plus-outline: 僚
      truck-remove: 瑩
      truck-remove-outline: 尿
      truck-snowflake: 殮
      truck-trailer: 
      trumpet: 
      tshirt-crew: 
      tshirt-crew-outline: 
      tshirt-v: 
      tshirt-v-outline: 
      tsunami: 婢
      tumble-dryer: 
      tumble-dryer-alert: 
      tumble-dryer-off: 
      tune: 
      tune-variant: 
      tune-vertical: 
      tune-vertical-variant: 
      tunnel: 
      tunnel-outline: 
      turbine: 嬨
      turkey: 
      turnstile: 
      turnstile-outline: 
      turtle: 
      twitch: 
      twitter: 
      two-factor-authentication: 
      typewriter: 
      ubisoft: 
      ubuntu: 
      ufo: 
      ufo-outline: 
      ultra-high-definition: 
      umbraco: 
      umbrella: 
      umbrella-beach: 
      umbrella-beach-outline: 
      umbrella-closed: 
      umbrella-closed-outline: 
      umbrella-closed-variant: 
      umbrella-outline: 
      undo: 
      undo-variant: 
      unfold-less-horizontal: 
      unfold-less-vertical: 
      unfold-more-horizontal: 
      unfold-more-vertical: 
      ungroup: 
      unicode: 
      unicorn: 
      unicorn-variant: 
      unicycle: 
      unity: 
      unreal: 
      update: 
      upload: 
      upload-lock: 
      upload-lock-outline: 
      upload-multiple: 
      upload-network: 
      upload-network-outline: 
      upload-off: 
      upload-off-outline: 
      upload-outline: 
      usb: 
      usb-flash-drive: 
      usb-flash-drive-outline: 
      usb-port: 
      vacuum: 裂
      vacuum-outline: 說
      valve: 
      valve-closed: 
      valve-open: 
      van-passenger: 
      van-utility: 
      vanish: 
      vanish-quarter: 
      vanity-light: 
      variable: 
      variable-box: 
      vector-arrange-above: 
      vector-arrange-below: 
      vector-bezier: 
      vector-circle: 
      vector-circle-variant: 
      vector-combine: 
      vector-curve: 
      vector-difference: 
      vector-difference-ab: 
      vector-difference-ba: 
      vector-ellipse: 
      vector-intersection: 
      vector-line: 
      vector-link: 
      vector-point: 
      vector-polygon: 
      vector-polygon-variant: 
      vector-polyline: 
      vector-polyline-edit: 
      vector-polyline-minus: 
      vector-polyline-plus: 
      vector-polyline-remove: 
      vector-radius: 
      vector-rectangle: 
      vector-selection: 
      vector-square: 
      vector-square-close: 
      vector-square-edit: 
      vector-square-minus: 
      vector-square-open: 
      vector-square-plus: 
      vector-square-remove: 
      vector-triangle: 
      vector-union: 
      vhs: 
      vibrate: 
      vibrate-off: 
      video: 
      video-2d: 福
      video-3d: 
      video-3d-off: 
      video-3d-variant: 
      video-4k-box: 
      video-account: 
      video-box: 
      video-box-off: 
      video-check: 
      video-check-outline: 
      video-high-definition: 
      video-image: 
      video-input-antenna: 
      video-input-component: 
      video-input-hdmi: 
      video-input-scart: 
      video-input-svideo: 
      video-marker: 令
      video-marker-outline: 囹
      video-minus: 
      video-minus-outline: 
      video-off: 
      video-off-outline: 
      video-outline: 
      video-plus: 
      video-plus-outline: 
      video-stabilization: 
      video-switch: 
      video-switch-outline: 
      video-vintage: 
      video-wireless: 
      video-wireless-outline: 
      view-agenda: 
      view-agenda-outline: 
      view-array: 
      view-array-outline: 
      view-carousel: 
      view-carousel-outline: 
      view-column: 
      view-column-outline: 
      view-comfy: 
      view-comfy-outline: 
      view-compact: 
      view-compact-outline: 
      view-dashboard: 
      view-dashboard-edit: 牢
      view-dashboard-edit-outline: 磊
      view-dashboard-outline: 
      view-dashboard-variant: 
      view-dashboard-variant-outline: 
      view-day: 
      view-day-outline: 
      view-gallery: 
      view-gallery-outline: 
      view-grid: 
      view-grid-outline: 
      view-grid-plus: 
      view-grid-plus-outline: 
      view-headline: 
      view-list: 
      view-list-outline: 
      view-module: 
      view-module-outline: 
      view-parallel: 
      view-parallel-outline: 
      view-quilt: 
      view-quilt-outline: 
      view-sequential: 
      view-sequential-outline: 
      view-split-horizontal: 
      view-split-vertical: 
      view-stream: 
      view-stream-outline: 
      view-week: 
      view-week-outline: 
      vimeo: 
      violin: 
      virtual-reality: 
      virus: 
      virus-off: 
      virus-off-outline: 
      virus-outline: 
      vlc: 
      voicemail: 
      volcano: 廒
      volcano-outline: 廙
      volleyball: 
      volume-high: 
      volume-low: 
      volume-medium: 
      volume-minus: 
      volume-mute: 
      volume-off: 
      volume-plus: 
      volume-source: 
      volume-variant-off: 
      volume-vibrate: 
      vote: 
      vote-outline: 
      vpn: 
      vuejs: 
      vuetify: 
      walk: 
      wall: 
      wall-fire: 塚
      wall-sconce: 
      wall-sconce-flat: 
      wall-sconce-flat-outline: 
      wall-sconce-flat-variant: 
      wall-sconce-flat-variant-outline: 
      wall-sconce-outline: 
      wall-sconce-round: 
      wall-sconce-round-outline: 
      wall-sconce-round-variant: 
      wall-sconce-round-variant-outline: 
      wallet: 
      wallet-giftcard: 
      wallet-membership: 
      wallet-outline: 
      wallet-plus: 
      wallet-plus-outline: 
      wallet-travel: 
      wallpaper: 
      wan: 
      wardrobe: 
      wardrobe-outline: 
      warehouse: 
      washing-machine: 
      washing-machine-alert: 
      washing-machine-off: 
      watch: 
      watch-export: 
      watch-export-variant: 
      watch-import: 
      watch-import-variant: 
      watch-variant: 
      watch-vibrate: 
      watch-vibrate-off: 
      water: 
      water-alert: 
      water-alert-outline: 
      water-boiler: 
      water-boiler-alert: 
      water-boiler-off: 
      water-check: 
      water-check-outline: 
      water-circle: 
      water-minus: 
      water-minus-outline: 
      water-off: 
      water-off-outline: 
      water-opacity: 
      water-outline: 
      water-percent: 
      water-percent-alert: 
      water-plus: 
      water-plus-outline: 
      water-polo: 
      water-pump: 
      water-pump-off: 
      water-remove: 
      water-remove-outline: 
      water-sync: 
      water-thermometer: 彩
      water-thermometer-outline: 徭
      water-well: 
      water-well-outline: 
      waterfall: 
      watering-can: 
      watering-can-outline: 
      watermark: 
      wave: 
      waveform: 
      waves: 
      waves-arrow-left: 
      waves-arrow-right: 
      waves-arrow-up: 
      waze: 
      weather-cloudy: 
      weather-cloudy-alert: 
      weather-cloudy-arrow-right: 
      weather-cloudy-clock: 
      weather-fog: 
      weather-hail: 
      weather-hazy: 
      weather-hurricane: 
      weather-lightning: 
      weather-lightning-rainy: 
      weather-night: 
      weather-night-partly-cloudy: 
      weather-partly-cloudy: 
      weather-partly-lightning: 
      weather-partly-rainy: 
      weather-partly-snowy: 
      weather-partly-snowy-rainy: 
      weather-pouring: 
      weather-rainy: 
      weather-snowy: 
      weather-snowy-heavy: 
      weather-snowy-rainy: 
      weather-sunny: 
      weather-sunny-alert: 
      weather-sunny-off: 
      weather-sunset: 
      weather-sunset-down: 
      weather-sunset-up: 
      weather-tornado: 
      weather-windy: 
      weather-windy-variant: 
      web: 
      web-box: 
      web-cancel: 
      web-check: 
      web-clock: 
      web-minus: 
      web-off: 
      web-plus: 
      web-refresh: 
      web-remove: 
      web-sync: 
      webcam: 
      webcam-off: 
      webhook: 
      webpack: 
      webrtc: 
      wechat: 
      weight: 
      weight-gram: 
      weight-kilogram: 
      weight-lifter: 
      weight-pound: 
      whatsapp: 
      wheel-barrow: 
      wheelchair: 惘
      wheelchair-accessibility: 
      whistle: 
      whistle-outline: 
      white-balance-auto: 
      white-balance-incandescent: 
      white-balance-iridescent: 
      white-balance-sunny: 
      widgets: 
      widgets-outline: 
      wifi: 
      wifi-alert: 
      wifi-arrow-down: 
      wifi-arrow-left: 
      wifi-arrow-left-right: 
      wifi-arrow-right: 
      wifi-arrow-up: 
      wifi-arrow-up-down: 
      wifi-cancel: 
      wifi-check: 
      wifi-cog: 
      wifi-lock: 
      wifi-lock-open: 
      wifi-marker: 
      wifi-minus: 
      wifi-off: 
      wifi-plus: 
      wifi-refresh: 
      wifi-remove: 
      wifi-settings: 
      wifi-star: 
      wifi-strength-1: 
      wifi-strength-1-alert: 
      wifi-strength-1-lock: 
      wifi-strength-1-lock-open: 
      wifi-strength-2: 
      wifi-strength-2-alert: 
      wifi-strength-2-lock: 
      wifi-strength-2-lock-open: 
      wifi-strength-3: 
      wifi-strength-3-alert: 
      wifi-strength-3-lock: 
      wifi-strength-3-lock-open: 
      wifi-strength-4: 
      wifi-strength-4-alert: 
      wifi-strength-4-lock: 
      wifi-strength-4-lock-open: 
      wifi-strength-alert-outline: 
      wifi-strength-lock-open-outline: 
      wifi-strength-lock-outline: 
      wifi-strength-off: 
      wifi-strength-off-outline: 
      wifi-strength-outline: 
      wifi-sync: 
      wikipedia: 
      wind-power: 慎
      wind-power-outline: 愈
      wind-turbine: 
      wind-turbine-alert: 寧
      wind-turbine-check: 嶺
      window-close: 
      window-closed: 
      window-closed-variant: 
      window-maximize: 
      window-minimize: 
      window-open: 
      window-open-variant: 
      window-restore: 
      window-shutter: 
      window-shutter-alert: 
      window-shutter-cog: 憎
      window-shutter-open: 
      window-shutter-settings: 慠
      windsock: 
      wiper: 
      wiper-wash: 
      wiper-wash-alert: 
      wizard-hat: 
      wordpress: 
      wrap: 
      wrap-disabled: 
      wrench: 
      wrench-clock: 廉
      wrench-outline: 
      xamarin: 
      xml: 
      xmpp: 
      yahoo: 
      yeast: 
      yin-yang: 
      yoga: 
      youtube: 
      youtube-gaming: 
      youtube-studio: 
      youtube-subscription: 
      youtube-tv: 
      yurt: 
      z-wave: 
      zend: 
      zigbee: 
      zip-box: 
      zip-box-outline: 
      zip-disk: 
      zodiac-aquarius: 
      zodiac-aries: 
      zodiac-cancer: 
      zodiac-capricorn: 
      zodiac-gemini: 
      zodiac-leo: 
      zodiac-libra: 
      zodiac-pisces: 
      zodiac-sagittarius: 
      zodiac-scorpio: 
      zodiac-taurus: 
      zodiac-virgo: 
    nextion:
      color:
        blue:
        - 0
        - 128
        - 248
        grey_dark:
        - 40
        - 44
        - 40
        grey_light:
        - 128
        - 128
        - 128
        grey_super_light:
        - 200
        - 204
        - 200
        grey_white:
        - 225
        - 225
        - 225
        red:
        - 248
        - 0
        - 0
        white:
        - 255
        - 255
        - 255
        yellow:
        - 248
        - 248
        - 0
        green:
        - 76
        - 175
        - 80
        orange:
        - 255
        - 152
        - 0
        cyan:
        - 0
        - 188
        - 212
        deep_orange:
        - 255
        - 87
        - 34
        amber:
        - 255
        - 193
        - 7
        'on': !input icon_color_fallback_on
        'off': !input icon_color_fallback_off
        disabled:
        - 189
        - 189
        - 189
        unknown:
        - 3
        - 6
        - 3
        unavailable:
        - 3
        - 6
        - 3
      icon:
        domain:
          air_quality: 
          alarm_control_panel: 
          alert: 
          automation: 
          binary_sensor: 
          button: 
          calendar: 
          camera: 
          climate: 
          configurator: 
          conversation: 
          counter: 
          cover: 
          device_tracker: 
          event: 
          fan: 
          datetime: 
          date: 
          demo: 
          google_assistant: 
          group: 
          homeassistant: 
          homekit: 
          humidifier: 
          image: 
          image_processing: 
          input_boolean: 
          input_button: 
          input_datetime: 
          input_number: 
          input_select: 
          input_text: 
          lawn_mower: 
          light: 
          mailbox: 
          media_player: 
          notify: 
          number: 
          persistent_notification: 
          person: 
          plant: 
          proximity: 
          remote: 
          scene: 
          schedule: 
          script: 
          select: 
          sensor: 
          simple_alarm: 
          siren: 
          stt: 
          sun: '{{ "\uE598" if sun_is_up else "\uE593" }}'
          switch: 
          text: 
          todo: 
          time: 
          timer: 
          tts: 
          update: 
          updater: 
          vacuum: 
          wake_word: 
          weather: 
          zone: 
          unknown: 
        weather:
          lightning: 
          protect: 
          rain: 
          sun: 
          wind: 
          gauge: 
        unknown: 
      pic:
        button:
          'off': 35
          'on': 36
        weather:
          sunny: '{{ 2 if sun_is_up else 15}}'
          cloudy: 3
          rainy: 4
          pouring: 5
          snowy: 6
          hail: 7
          snowy_rainy: 7
          snowy-rainy: 7
          fog: 8
          windy: 9
          windy_variant: 9
          windy-variant: 9
          lightning: 10
          partlycloudy: '{{ 11 if sun_is_up else 12}}'
          lightning_rainy: '{{ 13 if sun_is_up else 14}}'
          lightning-rainy: '{{ 13 if sun_is_up else 14}}'
          execptional: '{{ 13 if sun_is_up else 14}}'
          clear_night: 15
          clear-night: 15
          unknown: 1
          unavailable: 1
    language_tmp: !input language
    language: "{{\n  language_tmp\n  if language_tmp is string\n    and language_tmp
      in [\"ar\", \"bg\", \"hr\", \"cs\", \"da\", \"nl\", \"et\", \"fi\", \"fr\",
      \"de\", \"el\", \"he\", \"hu\", \"id\", \"it\", \"ja\",\n                          \"ko\",
      \"lv\", \"lt\", \"nb\", \"pl\", \"pt\", \"ro\", \"ru\", \"sk\", \"sl\", \"es\",
      \"sv\", \"tr\", \"uk\", \"zh-tw\"]\n  else \"en\"\n}}\n"
    mui:
      ar:
        bytes_per_char: 2
        weekdays:
          mon: الاثنين
          tue: الثلاثاء
          wed: الأربعاء
          thu: الخميس
          fri: الجمعة
          sat: السبت
          sun: الأحد
        weekdays_short:
          mon: اثن
          tue: ثلا
          wed: أرب
          thu: خمي
          fri: جمع
          sat: سبت
          sun: أحد
        months:
          jan: يناير
          feb: فبراير
          mar: مارس
          apr: أبريل
          may: مايو
          jun: يونيو
          jul: يوليو
          aug: أغسطس
          sep: سبتمبر
          oct: أكتوبر
          nov: نوفمبر
          dec: ديسمبر
        months_short:
          jan: ينا
          feb: فبر
          mar: مار
          apr: أبر
          may: ماي
          jun: يون
          jul: يول
          aug: أغس
          sep: سبت
          oct: أكت
          nov: نوف
          dec: ديس
        relative_day:
          today: اليوم
          tomorrow: غدًا
          in_2_days: بعد يومين
          in_3_days: بعد ثلاثة أيام
          in_4_days: بعد أربعة أيام
        climate:
          states:
            'on': مشغل
            'off': مطفأ
          heat: تدفئة
        please_confirm: يرجى التأكيد
        unavailable: غير متاح
        unknown: مجهول
        no_name: بدون اسم
        alarm:
          home: في المنزل
          away: بعيد
          night: ليل
          vacation: إجازة
          bypass: تجاوز
          disarm: نزع السلاح
        settings:
          reboot: إعادة تشغيل
          sleep: وضع النوم
          brightness: سطوع
          bright: مشرق
          dimming: تعتيم
          dim: خافت
        meridiem:
          am: صباحاً
          pm: مساءً
      bg:
        bytes_per_char: 1
        weekdays:
          mon: Понеделник
          tue: Вторник
          wed: Сряда
          thu: Четвъртък
          fri: Петък
          sat: Събота
          sun: Неделя
        weekdays_short:
          mon: Пон
          tue: Вто
          wed: Сря
          thu: Чет
          fri: Пет
          sat: Съб
          sun: Нед
        months:
          jan: Януари
          feb: Февруари
          mar: Март
          apr: Април
          may: Май
          jun: Юни
          jul: Юли
          aug: Август
          sep: Септември
          oct: Октомври
          nov: Ноември
          dec: Декември
        months_short:
          jan: Яну
          feb: Фев
          mar: Мар
          apr: Апр
          may: Май
          jun: Юни
          jul: Юли
          aug: Авг
          sep: Сеп
          oct: Окт
          nov: Ное
          dec: Дек
        relative_day:
          today: Днес
          tomorrow: Утре
          in_2_days: След 2 дни
          in_3_days: След 3 дни
          in_4_days: След 4 дни
        climate:
          states:
            'on': Включен
            'off': Изключен
          heat: Отопление
        please_confirm: Моля, потвърдете
        unavailable: Недостъпен
        unknown: Неизвестен
        no_name: Няма име
        alarm:
          home: Вкъщи
          away: Навън
          night: Нощ
          vacation: Ваканция
          bypass: Заобикаляне
          disarm: Разоръжаване
        settings:
          reboot: Рестартиране
          sleep: Сън
          brightness: Яркост
          bright: Ярък
          dimming: Затъмняване
          dim: Тъмен
        meridiem:
          am: AM
          pm: PM
      cs:
        bytes_per_char: 1
        weekdays:
          mon: Pondělí
          tue: Úterý
          wed: Středa
          thu: Čtvrtek
          fri: Pátek
          sat: Sobota
          sun: Neděle
        weekdays_short:
          mon: Po
          tue: Út
          wed: St
          thu: Čt
          fri: Pá
          sat: So
          sun: Ne
        months:
          jan: Leden
          feb: Únor
          mar: Březen
          apr: Duben
          may: Květen
          jun: Červen
          jul: Červenec
          aug: Srpen
          sep: Září
          oct: Říjen
          nov: Listopad
          dec: Prosinec
        months_short:
          jan: Led
          feb: Úno
          mar: Bře
          apr: Dub
          may: Kvě
          jun: Čvn
          jul: Čvc
          aug: Srp
          sep: Zář
          oct: Říj
          nov: Lis
          dec: Pro
        relative_day:
          today: Dnes
          tomorrow: Zítra
          in_2_days: Za 2 dny
          in_3_days: Za 3 dny
          in_4_days: Za 4 dny
        climate:
          states:
            'on': Zapnuto
            'off': Vypnuto
          heat: Topení
        please_confirm: Prosím, potvrďte
        unavailable: Nedostupné
        unknown: Neznámý
        no_name: Bez názvu
        alarm:
          home: Doma
          away: Pryč
          night: Noc
          vacation: Dovolená
          bypass: Obcházet
          disarm: Odjistit
        settings:
          reboot: Restart
          sleep: Spánek
          brightness: Jas
          bright: Světlý
          dimming: Ztmavení
          dim: Tmavý
        meridiem:
          am: dop.
          pm: odp.
      da:
        bytes_per_char: 1
        weekdays:
          mon: Mandag
          tue: Tirsdag
          wed: Onsdag
          thu: Torsdag
          fri: Fredag
          sat: Lørdag
          sun: Søndag
        weekdays_short:
          mon: Man
          tue: Tir
          wed: Ons
          thu: Tor
          fri: Fre
          sat: Lør
          sun: Søn
        months:
          jan: Januar
          feb: Februar
          mar: Marts
          apr: April
          may: Maj
          jun: Juni
          jul: Juli
          aug: August
          sep: September
          oct: Oktober
          nov: November
          dec: December
        months_short:
          jan: Jan
          feb: Feb
          mar: Mar
          apr: Apr
          may: Maj
          jun: Jun
          jul: Jul
          aug: Aug
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Dec
        relative_day:
          today: I dag
          tomorrow: I morgen
          in_2_days: Om 2 dage
          in_3_days: Om 3 dage
          in_4_days: Om 4 dage
        climate:
          states:
            'on': Tændt
            'off': Slukket
          heat: Varme
        please_confirm: Bekræft venligst
        unavailable: Utilgængelig
        unknown: Ukendt
        no_name: Intet navn
        alarm:
          home: Hjemme
          away: Væk
          night: Nat
          vacation: Ferie
          bypass: Omkørsel
          disarm: Afvæbne
        settings:
          reboot: Genstart
          sleep: Sove
          brightness: Lysstyrke
          bright: Lys
          dimming: Dæmpning
          dim: Dæmpet
        meridiem:
          am: FM
          pm: EM
      de:
        bytes_per_char: 1
        weekdays:
          mon: Montag
          tue: Dienstag
          wed: Mittwoch
          thu: Donnerstag
          fri: Freitag
          sat: Samstag
          sun: Sonntag
        weekdays_short:
          mon: Mo
          tue: Di
          wed: Mi
          thu: Do
          fri: Fr
          sat: Sa
          sun: So
        months:
          jan: Januar
          feb: Februar
          mar: März
          apr: April
          may: Mai
          jun: Juni
          jul: Juli
          aug: August
          sep: September
          oct: Oktober
          nov: November
          dec: Dezember
        months_short:
          jan: Jan
          feb: Feb
          mar: Mär
          apr: Apr
          may: Mai
          jun: Jun
          jul: Jul
          aug: Aug
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Dez
        relative_day:
          today: Heute
          tomorrow: Morgen
          in_2_days: In 2 Tagen
          in_3_days: In 3 Tagen
          in_4_days: In 4 Tagen
        climate:
          states:
            'on': Ein
            'off': Aus
          heat: Heizen
        please_confirm: Bitte bestätigen
        unavailable: Nicht verfügbar
        unknown: Unbekannt
        no_name: Kein Name
        alarm:
          home: Zuhause
          away: Abwesend
          night: Nacht
          vacation: Urlaub
          bypass: Umgehen
          disarm: Entwaffnen
        settings:
          reboot: Neustart
          sleep: Schlafmodus
          brightness: Helligkeit
          bright: Hell
          dimming: Dimmen
          dim: Gedimmt
        meridiem:
          am: vorm.
          pm: nachm.
      el:
        bytes_per_char: 2
        weekdays:
          mon: Δευτέρα
          tue: Τρίτη
          wed: Τετάρτη
          thu: Πέμπτη
          fri: Παρασκευή
          sat: Σάββατο
          sun: Κυριακή
        weekdays_short:
          mon: Δευ
          tue: Τρι
          wed: Τετ
          thu: Πεμ
          fri: Παρ
          sat: Σαβ
          sun: Κυρ
        months:
          jan: Ιανουάριος
          feb: Φεβρουάριος
          mar: Μάρτιος
          apr: Απρίλιος
          may: Μάιος
          jun: Ιούνιος
          jul: Ιούλιος
          aug: Αύγουστος
          sep: Σεπτέμβριος
          oct: Οκτώβριος
          nov: Νοέμβριος
          dec: Δεκέμβριος
        months_short:
          jan: Ιαν
          feb: Φεβ
          mar: Μαρ
          apr: Απρ
          may: Μαι
          jun: Ιουν
          jul: Ιουλ
          aug: Αυγ
          sep: Σεπ
          oct: Οκτ
          nov: Νοε
          dec: Δεκ
        relative_day:
          today: Σήμερα
          tomorrow: Αύριο
          in_2_days: σε 2 ημέρες
          in_3_days: σε 3 ημέρες
          in_4_days: σε 4 ημέρες
        climate:
          states:
            'on': Ενεργό
            'off': Ανενεργό
          heat: Θέρμανση
        please_confirm: Παρακαλώ επιβεβαιώστε
        unavailable: Μη διαθέσιμο
        unknown: Άγνωστο
        no_name: Χωρίς όνομα
        alarm:
          home: Σπίτι
          away: Μακριά
          night: Νύχτα
          vacation: Διακοπές
          bypass: Παράκαμψη
          disarm: Αφοπλισμός
        settings:
          reboot: Επανεκκίνηση
          sleep: Ύπνος
          brightness: Φωτεινότητα
          bright: Φωτεινό
          dimming: Σκίαση
          dim: Σκοτεινό
        meridiem:
          am: πμ
          pm: μμ
      en:
        bytes_per_char: 1
        weekdays:
          mon: Monday
          tue: Tuesday
          wed: Wednesday
          thu: Thursday
          fri: Friday
          sat: Saturday
          sun: Sunday
        weekdays_short:
          mon: Mon
          tue: Tue
          wed: Wed
          thu: Thu
          fri: Fri
          sat: Sat
          sun: Sun
        months:
          jan: January
          feb: February
          mar: March
          apr: April
          may: May
          jun: June
          jul: July
          aug: August
          sep: September
          oct: October
          nov: November
          dec: December
        months_short:
          jan: Jan
          feb: Feb
          mar: Mar
          apr: Apr
          may: May
          jun: Jun
          jul: Jul
          aug: Aug
          sep: Sep
          oct: Oct
          nov: Nov
          dec: Dec
        relative_day:
          today: Today
          tomorrow: Tomorrow
          in_2_days: In 2 days
          in_3_days: In 3 days
          in_4_days: In 4 days
        climate:
          states:
            'on': 'on'
            'off': 'off'
          heat: heat
        please_confirm: Please confirm
        unavailable: Unavailable
        unknown: Unknown
        no_name: No name
        alarm:
          home: Home
          away: Away
          night: Night
          vacation: Holiday
          bypass: Custom bypass
          disarm: Disarm
        settings:
          reboot: Reboot
          sleep: Sleep mode
          brightness: Brightness
          bright: Bright
          dimming: Dimming
          dim: Dim
        meridiem:
          am: AM
          pm: PM
      es:
        bytes_per_char: 1
        weekdays:
          mon: Lunes
          tue: Martes
          wed: Miércoles
          thu: Jueves
          fri: Viernes
          sat: Sábado
          sun: Domingo
        weekdays_short:
          mon: Lun
          tue: Mar
          wed: Mié
          thu: Jue
          fri: Vie
          sat: Sáb
          sun: Dom
        months:
          jan: Enero
          feb: Febrero
          mar: Marzo
          apr: Abril
          may: Mayo
          jun: Junio
          jul: Julio
          aug: Agosto
          sep: Septiembre
          oct: Octubre
          nov: Noviembre
          dec: Diciembre
        months_short:
          jan: Ene
          feb: Feb
          mar: Mar
          apr: Abr
          may: May
          jun: Jun
          jul: Jul
          aug: Ago
          sep: Sep
          oct: Oct
          nov: Nov
          dec: Dic
        relative_day:
          today: Hoy
          tomorrow: Mañana
          in_2_days: En 2 días
          in_3_days: En 3 días
          in_4_days: En 4 días
        climate:
          states:
            'on': Encendido
            'off': Apagado
          heat: Calentar
        please_confirm: Por favor, confirme
        unavailable: No disponible
        unknown: Desconocido
        no_name: Sin nombre
        alarm:
          home: Casa
          away: Fuera
          night: Noche
          vacation: Vacaciones
          bypass: Bypass
          disarm: Desarmar
        settings:
          reboot: Reiniciar
          sleep: Dormir
          brightness: Brillo
          bright: Brillante
          dimming: Atenuación
          dim: Oscuro
        meridiem:
          am: a.m.
          pm: p.m.
      et:
        bytes_per_char: 1
        weekdays:
          mon: Esmaspäev
          tue: Teisipäev
          wed: Kolmapäev
          thu: Neljapäev
          fri: Reede
          sat: Laupäev
          sun: Pühapäev
        weekdays_short:
          mon: E
          tue: T
          wed: K
          thu: N
          fri: R
          sat: L
          sun: P
        months:
          jan: Jaanuar
          feb: Veebruar
          mar: Märts
          apr: Aprill
          may: Mai
          jun: Juuni
          jul: Juuli
          aug: August
          sep: September
          oct: Oktoober
          nov: November
          dec: Detsember
        months_short:
          jan: Jan
          feb: Veb
          mar: Mär
          apr: Apr
          may: Mai
          jun: Jun
          jul: Jul
          aug: Aug
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Dets
        relative_day:
          today: Täna
          tomorrow: Homme
          in_2_days: 2 päeva pärast
          in_3_days: 3 päeva pärast
          in_4_days: 4 päeva pärast
        climate:
          states:
            'on': sees
            'off': väljas
          heat: kütte
        please_confirm: Palun kinnitage
        unavailable: Pole saadaval
        unknown: Tundmatu
        no_name: Nime pole
        alarm:
          home: Kodus
          away: Ära
          night: Öö
          vacation: Puhkus
          bypass: Möödaviik
          disarm: Desarmeerima
        settings:
          reboot: Taaskäivita
          sleep: Uni
          brightness: Heledus
          bright: Ere
          dimming: Hämardamine
          dim: Hämar
        meridiem:
          am: e.l.
          pm: p.l.
      fi:
        bytes_per_char: 1
        weekdays:
          mon: maanantai
          tue: tiistai
          wed: keskiviikko
          thu: torstai
          fri: perjantai
          sat: lauantai
          sun: sunnuntai
        weekdays_short:
          mon: ma
          tue: ti
          wed: ke
          thu: to
          fri: pe
          sat: la
          sun: su
        months:
          jan: tammikuu
          feb: helmikuu
          mar: maaliskuu
          apr: huhtikuu
          may: toukokuu
          jun: kesäkuu
          jul: heinäkuu
          aug: elokuu
          sep: syyskuu
          oct: lokakuu
          nov: marraskuu
          dec: joulukuu
        months_short:
          jan: tammi
          feb: helmi
          mar: maalis
          apr: huhti
          may: touko
          jun: kesä
          jul: heinä
          aug: elo
          sep: syys
          oct: loka
          nov: marras
          dec: joulu
        relative_day:
          today: Tänään
          tomorrow: Huomenna
          in_2_days: 2 päivän päästä
          in_3_days: 3 päivän päästä
          in_4_days: 4 päivän päästä
        climate:
          states:
            'on': päällä
            'off': pois päältä
          heat: lämpö
        please_confirm: Vahvista
        unavailable: Ei saatavilla
        unknown: Tuntematon
        no_name: Nimeämätön
        alarm:
          home: Kotona
          away: Poissa
          night: Yö
          vacation: Loma
          bypass: Ohitus
          disarm: Pois päältä
        settings:
          reboot: Käynnistä uudelleen
          sleep: Lepotila
          brightness: Kirkkaus
          bright: Kirkas
          dimming: Himmennys
          dim: Himmeä
        meridiem:
          am: aamupäivä
          pm: iltapäivä
      fr:
        bytes_per_char: 1
        weekdays:
          mon: Lundi
          tue: Mardi
          wed: Mercredi
          thu: Jeudi
          fri: Vendredi
          sat: Samedi
          sun: Dimanche
        weekdays_short:
          mon: Lun
          tue: Mar
          wed: Mer
          thu: Jeu
          fri: Ven
          sat: Sam
          sun: Dim
        months:
          jan: Janvier
          feb: Février
          mar: Mars
          apr: Avril
          may: Mai
          jun: Juin
          jul: Juillet
          aug: Août
          sep: Septembre
          oct: Octobre
          nov: Novembre
          dec: Décembre
        months_short:
          jan: Jan
          feb: Fév
          mar: Mar
          apr: Avr
          may: Mai
          jun: Jun
          jul: Jul
          aug: Aoû
          sep: Sep
          oct: Oct
          nov: Nov
          dec: Déc
        relative_day:
          today: Aujourd'hui
          tomorrow: Demain
          in_2_days: Dans 2 jours
          in_3_days: Dans 3 jours
          in_4_days: Dans 4 jours
        climate:
          states:
            'on': Activé
            'off': Désactivé
          heat: Chauffage
        please_confirm: Veuillez confirmer
        unavailable: Indisponible
        unknown: Inconnu
        no_name: Sans nom
        alarm:
          home: À la maison
          away: Absent
          night: Nuit
          vacation: Vacances
          bypass: Contournement
          disarm: Désarmer
        settings:
          reboot: Redémarrer
          sleep: Veille
          brightness: Luminosité
          bright: Lumineux
          dimming: Atténuation
          dim: Sombre
        meridiem:
          am: AM
          pm: PM
      he:
        bytes_per_char: 2
        weekdays:
          mon: ינש
          tue: ישילש
          wed: יעיבר
          thu: ישימח
          fri: ישיש
          sat: תבש
          sun: ןושאר
        weekdays_short:
          mon: ב'
          tue: ג'
          wed: ד'
          thu: ה'
          fri: ו'
          sat: ש'
          sun: א'
        months:
          jan: נאוני
          feb: ראורבפ
          mar: ץרמ
          apr: לירפא
          may: יאמ
          jun: ינוי
          jul: ילוי
          aug: טסוגוא
          sep: רבמטפס
          oct: רבוטקוא
          nov: רבמבונ
          dec: רבמצד
        months_short:
          jan: וני'
          feb: רבפ'
          mar: ץרמ
          apr: רפא'
          may: יאמ
          jun: נוי'
          jul: לוי'
          aug: גוא'
          sep: טפס'
          oct: קוא'
          nov: בונ'
          dec: מצד'
        relative_day:
          today: םויה
          tomorrow: רחמ
          in_2_days: םיימוי דוע
          in_3_days: םימי 3 דוע
          in_4_days: םימי 4 דוע
        climate:
          states:
            'on': ליעפ
            'off': יובכ
          heat: םומיח
        please_confirm: רשא אנא
        unavailable: ןימז אל
        unknown: עודי אל
        no_name: םש אלל
        alarm:
          home: תיבב
          away: הצוחה
          night: הליל
          vacation: השפוח
          bypass: הפיקע
          disarm: לורטנ
        settings:
          reboot: שדחמ הלעפה
          sleep: הניש
          brightness: תוריהב
          bright: ריהב
          dimming: הכשחה
          dim: ההכ
        meridiem:
          am: צ"הנפל
          pm: צ"החא
      hr:
        bytes_per_char: 1
        weekdays:
          mon: Ponedjeljak
          tue: Utorak
          wed: Srijeda
          thu: Četvrtak
          fri: Petak
          sat: Subota
          sun: Nedjelja
        weekdays_short:
          mon: Pon
          tue: Uto
          wed: Sri
          thu: Čet
          fri: Pet
          sat: Sub
          sun: Ned
        months:
          jan: Siječanj
          feb: Veljača
          mar: Ožujak
          apr: Travanj
          may: Svibanj
          jun: Lipanj
          jul: Srpanj
          aug: Kolovoz
          sep: Rujan
          oct: Listopad
          nov: Studeni
          dec: Prosinac
        months_short:
          jan: Sij
          feb: Velj
          mar: Ožu
          apr: Tra
          may: Svi
          jun: Lip
          jul: Srp
          aug: Kol
          sep: Ruj
          oct: Lis
          nov: Stu
          dec: Pro
        relative_day:
          today: Danas
          tomorrow: Sutra
          in_2_days: Za 2 dana
          in_3_days: Za 3 dana
          in_4_days: Za 4 dana
        climate:
          states:
            'on': Uključeno
            'off': Isključeno
          heat: Grijanje
        please_confirm: Molimo potvrdite
        unavailable: Nedostupno
        unknown: Nepoznato
        no_name: Bez imena
        alarm:
          home: Kod kuće
          away: Odsutan
          night: Noć
          vacation: Odmor
          bypass: Zaobići
          disarm: Razoružati
        settings:
          reboot: Ponovno pokretanje
          sleep: Spavanje
          brightness: Svjetlina
          bright: Svijetlo
          dimming: Zatamnjenje
          dim: Tamno
        meridiem:
          am: AM
          pm: PM
      hu:
        bytes_per_char: 1
        weekdays:
          mon: Hétfő
          tue: Kedd
          wed: Szerda
          thu: Csütörtök
          fri: Péntek
          sat: Szombat
          sun: Vasárnap
        weekdays_short:
          mon: H
          tue: K
          wed: Sze
          thu: Cs
          fri: P
          sat: Szo
          sun: V
        months:
          jan: Január
          feb: Február
          mar: Március
          apr: Április
          may: Május
          jun: Június
          jul: Július
          aug: Augusztus
          sep: Szeptember
          oct: Október
          nov: November
          dec: December
        months_short:
          jan: Jan
          feb: Feb
          mar: Márc
          apr: Ápr
          may: Máj
          jun: Jún
          jul: Júl
          aug: Aug
          sep: Szep
          oct: Okt
          nov: Nov
          dec: Dec
        relative_day:
          today: Ma
          tomorrow: Holnap
          in_2_days: 2 nap múlva
          in_3_days: 3 nap múlva
          in_4_days: 4 nap múlva
        climate:
          states:
            'on': Bekapcsolva
            'off': Kikapcsolva
          heat: Fűtés
        please_confirm: Kérjük, erősítse meg
        unavailable: Nem elérhető
        unknown: Ismeretlen
        no_name: Névtelen
        alarm:
          home: Otthon
          away: Távol
          night: Éjszaka
          vacation: Szabadság
          bypass: Kerülő
          disarm: Hatástalanítás
        settings:
          reboot: Újraindítás
          sleep: Alvás
          brightness: Fényerő
          bright: Világos
          dimming: Sötétítés
          dim: Sötét
        meridiem:
          am: DE
          pm: DU
      id:
        bytes_per_char: 1
        weekdays:
          mon: Senin
          tue: Selasa
          wed: Rabu
          thu: Kamis
          fri: Jumat
          sat: Sabtu
          sun: Minggu
        weekdays_short:
          mon: Sen
          tue: Sel
          wed: Rab
          thu: Kam
          fri: Jum
          sat: Sab
          sun: Min
        months:
          jan: Januari
          feb: Februari
          mar: Maret
          apr: April
          may: Mei
          jun: Juni
          jul: Juli
          aug: Agustus
          sep: September
          oct: Oktober
          nov: November
          dec: Desember
        months_short:
          jan: Jan
          feb: Feb
          mar: Mar
          apr: Apr
          may: Mei
          jun: Jun
          jul: Jul
          aug: Agu
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Des
        relative_day:
          today: Hari ini
          tomorrow: Besok
          in_2_days: Dalam 2 hari
          in_3_days: Dalam 3 hari
          in_4_days: Dalam 4 hari
        climate:
          states:
            'on': Menyala
            'off': Mati
          heat: Pemanas
        please_confirm: Mohon konfirmasi
        unavailable: Tidak tersedia
        unknown: Tidak diketahui
        no_name: Tanpa nama
        alarm:
          home: Di rumah
          away: Jauh
          night: Malam
          vacation: Liburan
          bypass: Bypass
          disarm: Menonaktifkan
        settings:
          reboot: Mulai ulang
          sleep: Tidur
          brightness: Kecerahan
          bright: Terang
          dimming: Redup
          dim: Redup
        meridiem:
          am: AM
          pm: PM
      it:
        bytes_per_char: 1
        weekdays:
          mon: Lunedì
          tue: Martedì
          wed: Mercoledì
          thu: Giovedì
          fri: Venerdì
          sat: Sabato
          sun: Domenica
        weekdays_short:
          mon: Lun
          tue: Mar
          wed: Mer
          thu: Gio
          fri: Ven
          sat: Sab
          sun: Dom
        months:
          jan: Gennaio
          feb: Febbraio
          mar: Marzo
          apr: Aprile
          may: Maggio
          jun: Giugno
          jul: Luglio
          aug: Agosto
          sep: Settembre
          oct: Ottobre
          nov: Novembre
          dec: Dicembre
        months_short:
          jan: Gen
          feb: Feb
          mar: Mar
          apr: Apr
          may: Mag
          jun: Giu
          jul: Lug
          aug: Ago
          sep: Set
          oct: Ott
          nov: Nov
          dec: Dic
        relative_day:
          today: Oggi
          tomorrow: Domani
          in_2_days: Dopodomani
          in_3_days: In 3 giorni
          in_4_days: In 4 giorni
        climate:
          states:
            'on': Acceso
            'off': Spento
          heat: Riscaldamento
        please_confirm: Confermare
        unavailable: Non disponibile
        unknown: Sconosciuto
        no_name: Senza nome
        alarm:
          home: Casa
          away: Fuori casa
          night: Notte
          vacation: Vacanza
          bypass: Bypass
          disarm: Disarmato
        settings:
          reboot: Riavvio
          sleep: Modalità ECO
          brightness: Luminosità
          bright: Luminoso
          dimming: Diminuzione
          dim: Diminuito
        meridiem:
          am: AM
          pm: PM
      ja:
        bytes_per_char: 3
        weekdays:
          mon: 月曜日
          tue: 火曜日
          wed: 水曜日
          thu: 木曜日
          fri: 金曜日
          sat: 土曜日
          sun: 日曜日
        weekdays_short:
          mon: 月
          tue: 火
          wed: 水
          thu: 木
          fri: 金
          sat: 土
          sun: 日
        months:
          jan: 1月
          feb: 2月
          mar: 3月
          apr: 4月
          may: 5月
          jun: 6月
          jul: 7月
          aug: 8月
          sep: 9月
          oct: 10月
          nov: 11月
          dec: 12月
        months_short:
          jan: 1月
          feb: 2月
          mar: 3月
          apr: 4月
          may: 5月
          jun: 6月
          jul: 7月
          aug: 8月
          sep: 9月
          oct: 10月
          nov: 11月
          dec: 12月
        relative_day:
          today: 今日
          tomorrow: 明日
          in_2_days: 明後日
          in_3_days: 3日後
          in_4_days: 4日後
        climate:
          states:
            'on': オン
            'off': オフ
          heat: 暖房
        please_confirm: 確認してください
        unavailable: 利用不可
        unknown: 不明
        no_name: 名前なし
        alarm:
          home: 自宅
          away: 外出
          night: 夜間
          vacation: 休暇
          bypass: バイパス
          disarm: 解除
        settings:
          reboot: 再起動
          sleep: スリープモード
          brightness: 明るさ
          bright: 明るい
          dimming: 調光
          dim: 低輝度
        meridiem:
          am: 午前
          pm: 午後
      ko:
        bytes_per_char: 3
        weekdays:
          mon: 월요일
          tue: 화요일
          wed: 수요일
          thu: 목요일
          fri: 금요일
          sat: 토요일
          sun: 일요일
        weekdays_short:
          mon: 월
          tue: 화
          wed: 수
          thu: 목
          fri: 금
          sat: 토
          sun: 일
        months:
          jan: 1월
          feb: 2월
          mar: 3월
          apr: 4월
          may: 5월
          jun: 6월
          jul: 7월
          aug: 8월
          sep: 9월
          oct: 10월
          nov: 11월
          dec: 12월
        months_short:
          jan: 1월
          feb: 2월
          mar: 3월
          apr: 4월
          may: 5월
          jun: 6월
          jul: 7월
          aug: 8월
          sep: 9월
          oct: 10월
          nov: 11월
          dec: 12월
        relative_day:
          today: 오늘
          tomorrow: 내일
          in_2_days: 이틀 후
          in_3_days: 사흘 후
          in_4_days: 나흘 후
        climate:
          states:
            'on': 켜짐
            'off': 꺼짐
          heat: 난방
        please_confirm: 확인해 주세요
        unavailable: 사용 불가
        unknown: 알 수 없음
        no_name: 이름 없음
        alarm:
          home: 집
          away: 외출
          night: 밤
          vacation: 휴가
          bypass: 우회
          disarm: 해제
        settings:
          reboot: 재부팅
          sleep: 슬립 모드
          brightness: 밝기
          bright: 밝은
          dimming: 조광
          dim: 어두운
        meridiem:
          am: 오전
          pm: 오후
      lt:
        bytes_per_char: 1
        weekdays:
          mon: Pirmadienis
          tue: Antradienis
          wed: Trečiadienis
          thu: Ketvirtadienis
          fri: Penktadienis
          sat: Šeštadienis
          sun: Sekmadienis
        weekdays_short:
          mon: Pir
          tue: Ant
          wed: Tre
          thu: Ket
          fri: Pen
          sat: Šeš
          sun: Sek
        months:
          jan: Sausis
          feb: Vasaris
          mar: Kovas
          apr: Balandis
          may: Gegužė
          jun: Birželis
          jul: Liepa
          aug: Rugpjūtis
          sep: Rugsėjis
          oct: Spalis
          nov: Lapkritis
          dec: Gruodis
        months_short:
          jan: Sau
          feb: Vas
          mar: Kov
          apr: Bal
          may: Geg
          jun: Bir
          jul: Lie
          aug: Rgp
          sep: Rgs
          oct: Spa
          nov: Lap
          dec: Gru
        relative_day:
          today: Šiandien
          tomorrow: Rytoj
          in_2_days: Po 2 dienų
          in_3_days: Po 3 dienų
          in_4_days: Po 4 dienų
        climate:
          states:
            'on': Įjungta
            'off': Išjungta
          heat: Šildymas
        please_confirm: Prašome patvirtinti
        unavailable: Nepasiekiamas
        unknown: Nežinomas
        no_name: Be pavadinimo
        alarm:
          home: Namuose
          away: Išvykęs
          night: Naktis
          vacation: Atostogos
          bypass: Apeiti
          disarm: Išjungti
        settings:
          reboot: Perkrauti
          sleep: Miego režimas
          brightness: Ryškumas
          bright: Ryškus
          dimming: Tamsinimas
          dim: Tamsus
        meridiem:
          am: AM
          pm: PM
      lv:
        bytes_per_char: 1
        weekdays:
          mon: Pirmdiena
          tue: Otrdiena
          wed: Trešdiena
          thu: Ceturtdiena
          fri: Piektdiena
          sat: Sestdiena
          sun: Svētdiena
        weekdays_short:
          mon: Pir
          tue: Otr
          wed: Tre
          thu: Cet
          fri: Pie
          sat: Ses
          sun: Sve
        months:
          jan: Janvāris
          feb: Februāris
          mar: Marts
          apr: Aprīlis
          may: Maijs
          jun: Jūnijs
          jul: Jūlijs
          aug: Augusts
          sep: Septembris
          oct: Oktobris
          nov: Novembris
          dec: Decembris
        months_short:
          jan: Jan
          feb: Feb
          mar: Mar
          apr: Apr
          may: Mai
          jun: Jūn
          jul: Jūl
          aug: Aug
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Dec
        relative_day:
          today: Šodien
          tomorrow: Rīt
          in_2_days: Pēc 2 dienām
          in_3_days: Pēc 3 dienām
          in_4_days: Pēc 4 dienām
        climate:
          states:
            'on': Ieslēgts
            'off': Izslēgts
          heat: Apkure
        please_confirm: Lūdzu, apstipriniet
        unavailable: Nav pieejams
        unknown: Nezināms
        no_name: Bez nosaukuma
        alarm:
          home: Mājās
          away: Projām
          night: Nakts
          vacation: Atvaļinājums
          bypass: Aplūkošana
          disarm: Atbruņošana
        settings:
          reboot: Restartēt
          sleep: Miega režīms
          brightness: Spilgtums
          bright: Spilgts
          dimming: Tumšošana
          dim: Tumšs
        meridiem:
          am: AM
          pm: PM
      nb:
        bytes_per_char: 1
        weekdays:
          mon: Mandag
          tue: Tirsdag
          wed: Onsdag
          thu: Torsdag
          fri: Fredag
          sat: Lørdag
          sun: Søndag
        weekdays_short:
          mon: Man
          tue: Tir
          wed: Ons
          thu: Tor
          fri: Fre
          sat: Lør
          sun: Søn
        months:
          jan: Januar
          feb: Februar
          mar: Mars
          apr: April
          may: Mai
          jun: Juni
          jul: Juli
          aug: August
          sep: September
          oct: Oktober
          nov: November
          dec: Desember
        months_short:
          jan: Jan
          feb: Feb
          mar: Mar
          apr: Apr
          may: Mai
          jun: Jun
          jul: Jul
          aug: Aug
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Des
        relative_day:
          today: I dag
          tomorrow: I morgen
          in_2_days: Om 2 dager
          in_3_days: Om 3 dager
          in_4_days: Om 4 dager
        climate:
          states:
            'on': På
            'off': Av
          heat: Varme
        please_confirm: Vennligst bekreft
        unavailable: Utilgjengelig
        unknown: Ukjent
        no_name: Ingen navn
        alarm:
          home: Hjemme
          away: Borte
          night: Natt
          vacation: Ferie
          bypass: Omkjøring
          disarm: Avvæpne
        settings:
          reboot: Start på nytt
          sleep: Søvnmodus
          brightness: Lysstyrke
          bright: Lys
          dimming: Demping
          dim: Dimmet
        meridiem:
          am: AM
          pm: PM
      nl:
        bytes_per_char: 1
        weekdays:
          mon: Maandag
          tue: Dinsdag
          wed: Woensdag
          thu: Donderdag
          fri: Vrijdag
          sat: Zaterdag
          sun: Zondag
        weekdays_short:
          mon: Ma
          tue: Di
          wed: Wo
          thu: Do
          fri: Vr
          sat: Za
          sun: Zo
        months:
          jan: Januari
          feb: Februari
          mar: Maart
          apr: April
          may: Mei
          jun: Juni
          jul: Juli
          aug: Augustus
          sep: September
          oct: Oktober
          nov: November
          dec: December
        months_short:
          jan: Jan
          feb: Feb
          mar: Mrt
          apr: Apr
          may: Mei
          jun: Jun
          jul: Jul
          aug: Aug
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Dec
        relative_day:
          today: Vandaag
          tomorrow: Morgen
          in_2_days: Overmorgen
          in_3_days: Over 3 dagen
          in_4_days: Over 4 dagen
        climate:
          states:
            'on': Aan
            'off': Uit
          heat: Verwarming
        please_confirm: Bevestig alstublieft
        unavailable: Niet beschikbaar
        unknown: Onbekend
        no_name: Geen naam
        alarm:
          home: Thuis
          away: Weg
          night: Nacht
          vacation: Vakantie
          bypass: Omzeilen
          disarm: Ontwapenen
        settings:
          reboot: Herstarten
          sleep: Slaapstand
          brightness: Helderheid
          bright: Helder
          dimming: Dimmen
          dim: Gedimd
        meridiem:
          am: AM
          pm: PM
      pl:
        bytes_per_char: 1
        weekdays:
          mon: Poniedziałek
          tue: Wtorek
          wed: Środa
          thu: Czwartek
          fri: Piątek
          sat: Sobota
          sun: Niedziela
        weekdays_short:
          mon: Pon
          tue: Wt
          wed: Śr
          thu: Czw
          fri: Pt
          sat: Sob
          sun: Ndz
        months:
          jan: Styczeń
          feb: Luty
          mar: Marzec
          apr: Kwiecień
          may: Maj
          jun: Czerwiec
          jul: Lipiec
          aug: Sierpień
          sep: Wrzesień
          oct: Październik
          nov: Listopad
          dec: Grudzień
        months_short:
          jan: Sty
          feb: Lut
          mar: Mar
          apr: Kwi
          may: Maj
          jun: Cze
          jul: Lip
          aug: Sie
          sep: Wrz
          oct: Paź
          nov: Lis
          dec: Gru
        relative_day:
          today: Dzisiaj
          tomorrow: Jutro
          in_2_days: Za 2 dni
          in_3_days: Za 3 dni
          in_4_days: Za 4 dni
        climate:
          states:
            'on': Włączony
            'off': Wyłączony
          heat: Ogrzewanie
        please_confirm: Proszę potwierdzić
        unavailable: Niedostępny
        unknown: Nieznany
        no_name: Bez nazwy
        alarm:
          home: W domu
          away: Poza domem
          night: Noc
          vacation: Wakacje
          bypass: Obejście
          disarm: Rozbroić
        settings:
          reboot: Restart
          sleep: Tryb uśpienia
          brightness: Jasność
          bright: Jasny
          dimming: Ściemnianie
          dim: Ciemny
        meridiem:
          am: AM
          pm: PM
      pt:
        bytes_per_char: 1
        weekdays:
          mon: Segunda-feira
          tue: Terça-feira
          wed: Quarta-feira
          thu: Quinta-feira
          fri: Sexta-feira
          sat: Sábado
          sun: Domingo
        weekdays_short:
          mon: Seg
          tue: Ter
          wed: Qua
          thu: Qui
          fri: Sex
          sat: Sáb
          sun: Dom
        months:
          jan: Janeiro
          feb: Fevereiro
          mar: Março
          apr: Abril
          may: Maio
          jun: Junho
          jul: Julho
          aug: Agosto
          sep: Setembro
          oct: Outubro
          nov: Novembro
          dec: Dezembro
        months_short:
          jan: Jan
          feb: Fev
          mar: Mar
          apr: Abr
          may: Mai
          jun: Jun
          jul: Jul
          aug: Ago
          sep: Set
          oct: Out
          nov: Nov
          dec: Dez
        relative_day:
          today: Hoje
          tomorrow: Amanhã
          in_2_days: Em 2 dias
          in_3_days: Em 3 dias
          in_4_days: Em 4 dias
        climate:
          states:
            'on': Ligado
            'off': Desligado
          heat: Aquecimento
        please_confirm: Por favor, confirme
        unavailable: Indisponível
        unknown: Desconhecido
        no_name: Sem nome
        alarm:
          home: Em casa
          away: Ausente
          night: Noturno
          vacation: Férias
          bypass: Desvio
          disarm: Desarmar
        settings:
          reboot: Reiniciar
          sleep: Dormir
          brightness: Brilho
          bright: Claro
          dimming: Escurecimento
          dim: Escuro
        meridiem:
          am: AM
          pm: PM
      ro:
        bytes_per_char: 1
        weekdays:
          mon: Luni
          tue: Marți
          wed: Miercuri
          thu: Joi
          fri: Vineri
          sat: Sâmbătă
          sun: Duminică
        weekdays_short:
          mon: Lun
          tue: Mar
          wed: Mie
          thu: Joi
          fri: Vin
          sat: Sâm
          sun: Dum
        months:
          jan: Ianuarie
          feb: Februarie
          mar: Martie
          apr: Aprilie
          may: Mai
          jun: Iunie
          jul: Iulie
          aug: August
          sep: Septembrie
          oct: Octombrie
          nov: Noiembrie
          dec: Decembrie
        months_short:
          jan: Ian
          feb: Feb
          mar: Mar
          apr: Apr
          may: Mai
          jun: Iun
          jul: Iul
          aug: Aug
          sep: Sep
          oct: Oct
          nov: Nov
          dec: Dec
        relative_day:
          today: Astăzi
          tomorrow: Mâine
          in_2_days: În 2 zile
          in_3_days: În 3 zile
          in_4_days: În 4 zile
        climate:
          states:
            'on': Pornit
            'off': Oprit
          heat: Încălzire
        please_confirm: Vă rugăm să confirmați
        unavailable: Indisponibil
        unknown: Necunoscut
        no_name: Fără nume
        alarm:
          home: Acasă
          away: Plecat
          night: Noapte
          vacation: Vacanță
          bypass: Ocolire
          disarm: Dezarmare
        settings:
          reboot: Repornire
          sleep: Somn
          brightness: Luminozitate
          bright: Luminos
          dimming: Diminuare
          dim: Întunecat
        meridiem:
          am: AM
          pm: PM
      ru:
        bytes_per_char: 2
        weekdays:
          mon: Понедельник
          tue: Вторник
          wed: Среда
          thu: Четверг
          fri: Пятница
          sat: Суббота
          sun: Воскресенье
        weekdays_short:
          mon: Пн
          tue: Вт
          wed: Ср
          thu: Чт
          fri: Пт
          sat: Сб
          sun: Вс
        months:
          jan: Январь
          feb: Февраль
          mar: Март
          apr: Апрель
          may: Май
          jun: Июнь
          jul: Июль
          aug: Август
          sep: Сентябрь
          oct: Октябрь
          nov: Ноябрь
          dec: Декабрь
        months_short:
          jan: Янв
          feb: Фев
          mar: Мар
          apr: Апр
          may: Май
          jun: Июн
          jul: Июл
          aug: Авг
          sep: Сен
          oct: Окт
          nov: Ноя
          dec: Дек
        relative_day:
          today: Сегодня
          tomorrow: Завтра
          in_2_days: Через 2 дня
          in_3_days: Через 3 дня
          in_4_days: Через 4 дня
        climate:
          states:
            'on': Включено
            'off': Выключено
          heat: Отопление
        please_confirm: Пожалуйста, подтвердите
        unavailable: Недоступно
        unknown: Неизвестно
        no_name: Без названия
        alarm:
          home: Дома
          away: Вне дома
          night: Ночь
          vacation: Отпуск
          bypass: Обход
          disarm: Разоружение
        settings:
          reboot: Перезагрузка
          sleep: Сон
          brightness: Яркость
          bright: Яркий
          dimming: Затемнение
          dim: Тусклый
        meridiem:
          am: ДП
          pm: ПП
      sk:
        bytes_per_char: 1
        weekdays:
          mon: Pondelok
          tue: Utorok
          wed: Streda
          thu: Štvrtok
          fri: Piatok
          sat: Sobota
          sun: Nedeľa
        weekdays_short:
          mon: Po
          tue: Ut
          wed: St
          thu: Št
          fri: Pi
          sat: So
          sun: Ne
        months:
          jan: Január
          feb: Február
          mar: Marec
          apr: Apríl
          may: Máj
          jun: Jún
          jul: Júl
          aug: August
          sep: September
          oct: Október
          nov: November
          dec: December
        months_short:
          jan: Jan
          feb: Feb
          mar: Mar
          apr: Apr
          may: Máj
          jun: Jún
          jul: Júl
          aug: Aug
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Dec
        relative_day:
          today: Dnes
          tomorrow: Zajtra
          in_2_days: O 2 dni
          in_3_days: O 3 dni
          in_4_days: O 4 dni
        climate:
          states:
            'on': Zapnuté
            'off': Vypnuté
          heat: Kúrenie
        please_confirm: Potvrďte, prosím
        unavailable: Nedostupné
        unknown: Neznámy
        no_name: Bez mena
        alarm:
          home: Doma
          away: Preč
          night: Noc
          vacation: Dovolenka
          bypass: Obísť
          disarm: Zneškodniť
        settings:
          reboot: Reštartovať
          sleep: Spánok
          brightness: Jas
          bright: Svetlý
          dimming: Stmavovanie
          dim: Tmavý
        meridiem:
          am: AM
          pm: PM
      sl:
        bytes_per_char: 1
        weekdays:
          mon: Ponedeljek
          tue: Torek
          wed: Sreda
          thu: Četrtek
          fri: Petek
          sat: Sobota
          sun: Nedelja
        weekdays_short:
          mon: Pon
          tue: Tor
          wed: Sre
          thu: Čet
          fri: Pet
          sat: Sob
          sun: Ned
        months:
          jan: Januar
          feb: Februar
          mar: Marec
          apr: April
          may: Maj
          jun: Junij
          jul: Julij
          aug: Avgust
          sep: September
          oct: Oktober
          nov: November
          dec: December
        months_short:
          jan: Jan
          feb: Feb
          mar: Mar
          apr: Apr
          may: Maj
          jun: Jun
          jul: Jul
          aug: Avg
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Dec
        relative_day:
          today: Danes
          tomorrow: Jutri
          in_2_days: Čez 2 dni
          in_3_days: Čez 3 dni
          in_4_days: Čez 4 dni
        climate:
          states:
            'on': Vklopljeno
            'off': Izklopljeno
          heat: Ogrevanje
        please_confirm: Prosimo, potrdite
        unavailable: Nedosegljivo
        unknown: Neznano
        no_name: Brez imena
        alarm:
          home: Doma
          away: Odsoten
          night: Noč
          vacation: Dopust
          bypass: Obvoz
          disarm: Razorožitev
        settings:
          reboot: Ponovni zagon
          sleep: Spanje
          brightness: Svetlost
          bright: Svetlo
          dimming: Zatemnitev
          dim: Temno
        meridiem:
          am: dop.
          pm: pop.
      sv:
        bytes_per_char: 1
        weekdays:
          mon: Måndag
          tue: Tisdag
          wed: Onsdag
          thu: Torsdag
          fri: Fredag
          sat: Lördag
          sun: Söndag
        weekdays_short:
          mon: Mån
          tue: Tis
          wed: Ons
          thu: Tors
          fri: Fre
          sat: Lör
          sun: Sön
        months:
          jan: Januari
          feb: Februari
          mar: Mars
          apr: April
          may: Maj
          jun: Juni
          jul: Juli
          aug: Augusti
          sep: September
          oct: Oktober
          nov: November
          dec: December
        months_short:
          jan: Jan
          feb: Feb
          mar: Mar
          apr: Apr
          may: Maj
          jun: Jun
          jul: Jul
          aug: Aug
          sep: Sep
          oct: Okt
          nov: Nov
          dec: Dec
        relative_day:
          today: Idag
          tomorrow: Imorgon
          in_2_days: Om 2 dagar
          in_3_days: Om 3 dagar
          in_4_days: Om 4 dagar
        climate:
          states:
            'on': På
            'off': Av
          heat: Värme
        please_confirm: Vänligen bekräfta
        unavailable: Otillgänglig
        unknown: Okänd
        no_name: Inget namn
        alarm:
          home: Hemma
          away: Borta
          night: Natt
          vacation: Semester
          bypass: Förbigå
          disarm: Avaktivera
        settings:
          reboot: Starta om
          sleep: Vila
          brightness: Ljusstyrka
          bright: Ljust
          dimming: Dimmning
          dim: Dimma
        meridiem:
          am: FM
          pm: EM
      tr:
        bytes_per_char: 1
        weekdays:
          mon: Pazartesi
          tue: Salı
          wed: Çarşamba
          thu: Perşembe
          fri: Cuma
          sat: Cumartesi
          sun: Pazar
        weekdays_short:
          mon: Pzt
          tue: Sal
          wed: Çar
          thu: Per
          fri: Cum
          sat: Cmt
          sun: Paz
        months:
          jan: Ocak
          feb: Şubat
          mar: Mart
          apr: Nisan
          may: Mayıs
          jun: Haziran
          jul: Temmuz
          aug: Ağustos
          sep: Eylül
          oct: Ekim
          nov: Kasım
          dec: Aralık
        months_short:
          jan: Oca
          feb: Şub
          mar: Mar
          apr: Nis
          may: May
          jun: Haz
          jul: Tem
          aug: Ağu
          sep: Eyl
          oct: Eki
          nov: Kas
          dec: Ara
        relative_day:
          today: Bugün
          tomorrow: Yarın
          in_2_days: 2 gün içinde
          in_3_days: 3 gün içinde
          in_4_days: 4 gün içinde
        climate:
          states:
            'on': Açık
            'off': Kapalı
          heat: Isıtma
        please_confirm: Lütfen onaylayın
        unavailable: Kullanılamaz
        unknown: Bilinmeyen
        no_name: İsimsiz
        alarm:
          home: Evde
          away: Dışarıda
          night: Gece
          vacation: Tatil
          bypass: Bypass
          disarm: Devre dışı bırak
        settings:
          reboot: Yeniden başlat
          sleep: Uyku modu
          brightness: Parlaklık
          bright: Parlak
          dimming: Karartma
          dim: Karanlık
        meridiem:
          am: ÖÖ
          pm: ÖS
      uk:
        bytes_per_char: 2
        weekdays:
          mon: Понеділок
          tue: Вівторок
          wed: Середа
          thu: Четвер
          fri: П'ятниця
          sat: Субота
          sun: Неділя
        weekdays_short:
          mon: Пн
          tue: Вт
          wed: Ср
          thu: Чт
          fri: Пт
          sat: Сб
          sun: Нд
        months:
          jan: Січень
          feb: Лютий
          mar: Березень
          apr: Квітень
          may: Травень
          jun: Червень
          jul: Липень
          aug: Серпень
          sep: Вересень
          oct: Жовтень
          nov: Листопад
          dec: Грудень
        months_short:
          jan: Січ
          feb: Лют
          mar: Бер
          apr: Кві
          may: Тра
          jun: Чер
          jul: Лип
          aug: Сер
          sep: Вер
          oct: Жов
          nov: Лис
          dec: Гру
        relative_day:
          today: Сьогодні
          tomorrow: Завтра
          in_2_days: Через 2 дні
          in_3_days: Через 3 дні
          in_4_days: Через 4 дні
        climate:
          states:
            'on': Увімкнено
            'off': Вимкнено
          heat: Опалення
        please_confirm: Будь ласка, підтвердіть
        unavailable: Недоступно
        unknown: Невідомо
        no_name: Без імені
        alarm:
          home: Вдома
          away: Відсутній
          night: Ніч
          vacation: Відпустка
          bypass: Обхід
          disarm: Роззброєння
        settings:
          reboot: Перезавантаження
          sleep: Сон
          brightness: Яскравість
          bright: Яскравий
          dimming: Затемнення
          dim: Темний
        meridiem:
          am: ДП
          pm: ПП
      zh-tw:
        bytes_per_char: 3
        weekdays:
          mon: 星期一
          tue: 星期二
          wed: 星期三
          thu: 星期四
          fri: 星期五
          sat: 星期六
          sun: 星期日
        weekdays_short:
          mon: 一
          tue: 二
          wed: 三
          thu: 四
          fri: 五
          sat: 六
          sun: 日
        months:
          jan: 1月
          feb: 2月
          mar: 3月
          apr: 4月
          may: 5月
          jun: 6月
          jul: 7月
          aug: 8月
          sep: 9月
          oct: 10月
          nov: 11月
          dec: 12月
        months_short:
          jan: 1月
          feb: 2月
          mar: 3月
          apr: 4月
          may: 5月
          jun: 6月
          jul: 7月
          aug: 8月
          sep: 9月
          oct: 10月
          nov: 11月
          dec: 12月
        relative_day:
          today: 今天
          tomorrow: 明天
          in_2_days: 後天
          in_3_days: 大後天
          in_4_days: 四天後
        climate:
          states:
            'on': 開啟
            'off': 關閉
          heat: 暖氣
        please_confirm: 請確認
        unavailable: 無法使用
        unknown: 未知
        no_name: 未命名
        alarm:
          home: 在家
          away: 離家
          night: 夜間
          vacation: 假期
          bypass: 忽略
          disarm: 解除
        settings:
          reboot: 重啟
          sleep: 睡眠
          brightness: 亮度
          bright: 正常
          dimming: 調光
          dim: 待機
        meridiem:
          am: 上午
          pm: 下午
    home_page:
      chips:
      - entity: !input chip01
        inverted: !input chip01_inverted
        icon: !input chip01_icon
        icon_color_rgb: !input chip01_icon_color
        component: chip01
      - entity: !input chip02
        inverted: !input chip02_inverted
        icon: !input chip02_icon
        icon_color_rgb: !input chip02_icon_color
        component: chip02
      - entity: !input chip03
        inverted: !input chip03_inverted
        icon: !input chip03_icon
        icon_color_rgb: !input chip03_icon_color
        component: chip03
      - entity: !input chip04
        inverted: !input chip04_inverted
        icon: !input chip04_icon
        icon_color_rgb: !input chip04_icon_color
        component: chip04
      - entity: !input chip05
        inverted: !input chip05_inverted
        icon: !input chip05_icon
        icon_color_rgb: !input chip05_icon_color
        component: chip05
      - entity: !input chip06
        inverted: !input chip06_inverted
        icon: !input chip06_icon
        icon_color_rgb: !input chip06_icon_color
        component: chip06
      - entity: !input chip07
        inverted: !input chip07_inverted
        icon: !input chip07_icon
        icon_color_rgb: !input chip07_icon_color
        component: chip07
      custom_buttons:
      - entity: !input home_custom_button01
        icon: !input home_custom_button01_icon
        name: !input home_custom_button01_name
        component: button01
      - entity: !input home_custom_button02
        icon: !input home_custom_button02_icon
        name: !input home_custom_button02_name
        component: button02
      - entity: !input home_custom_button03
        icon: !input home_custom_button03_icon
        name: !input home_custom_button03_name
        component: button03
      - entity: !input home_custom_button04
        icon: !input home_custom_button04_icon
        name: !input home_custom_button04_name
        component: button04
      - entity: !input home_custom_button05
        icon: !input home_custom_button05_icon
        name: !input home_custom_button05_name
        component: button05
      - entity: !input home_custom_button06
        icon: !input home_custom_button06_icon
        name: !input home_custom_button06_name
        component: button06
      - entity: !input alarm
        icon: !input home_custom_button07_icon
        name: !input home_custom_button07_name
        component: button07
      entity_value:
      - entity: !input home_value01
        icon: !input home_value01_icon
        icon_color_rgb: !input home_value01_icon_color
        label_color_rgb: !input home_value01_label_color
        page: home
        component: value01
      - entity: !input home_value02
        icon: !input home_value02_icon
        icon_color_rgb: !input home_value02_icon_color
        label_color_rgb: !input home_value02_label_color
        page: home
        component: value02
      - entity: !input home_value03
        icon: !input home_value03_icon
        icon_color_rgb: !input home_value03_icon_color
        label_color_rgb: !input home_value03_label_color
        page: home
        component: value03
      - entity: !input home_value04
        icon: !input home_value04_icon
        icon_color_rgb: !input home_value04_icon_color
        label_color_rgb: !input home_value04_label_color
        page: home
        component: value04
    buttons_pages:
      labels:
        buttonpage01: !input button_page01_label
        buttonpage02: !input button_page02_label
        buttonpage03: !input button_page03_label
        buttonpage04: !input button_page04_label
      buttons:
      - entity: !input entity01
        name: !input entity01_name
        icon: !input entity01_icon
        icon_color_rgb: !input entity01_icon_color
        confirm: !input entity01_confirm
        page: buttonpage01
        component: button01
      - entity: !input entity02
        name: !input entity02_name
        icon: !input entity02_icon
        icon_color_rgb: !input entity02_icon_color
        confirm: !input entity02_confirm
        page: buttonpage01
        component: button02
      - entity: !input entity03
        name: !input entity03_name
        icon: !input entity03_icon
        icon_color_rgb: !input entity03_icon_color
        confirm: !input entity03_confirm
        page: buttonpage01
        component: button03
      - entity: !input entity04
        name: !input entity04_name
        icon: !input entity04_icon
        icon_color_rgb: !input entity04_icon_color
        confirm: !input entity04_confirm
        page: buttonpage01
        component: button04
      - entity: !input entity05
        name: !input entity05_name
        icon: !input entity05_icon
        icon_color_rgb: !input entity05_icon_color
        confirm: !input entity05_confirm
        page: buttonpage01
        component: button05
      - entity: !input entity06
        name: !input entity06_name
        icon: !input entity06_icon
        icon_color_rgb: !input entity06_icon_color
        confirm: !input entity06_confirm
        page: buttonpage01
        component: button06
      - entity: !input entity07
        name: !input entity07_name
        icon: !input entity07_icon
        icon_color_rgb: !input entity07_icon_color
        confirm: !input entity07_confirm
        page: buttonpage01
        component: button07
      - entity: !input entity08
        name: !input entity08_name
        icon: !input entity08_icon
        icon_color_rgb: !input entity08_icon_color
        confirm: !input entity08_confirm
        page: buttonpage01
        component: button08
      - entity: !input entity09
        name: !input entity09_name
        icon: !input entity09_icon
        icon_color_rgb: !input entity09_icon_color
        confirm: !input entity09_confirm
        page: buttonpage02
        component: button01
      - entity: !input entity10
        name: !input entity10_name
        icon: !input entity10_icon
        icon_color_rgb: !input entity10_icon_color
        confirm: !input entity10_confirm
        page: buttonpage02
        component: button02
      - entity: !input entity11
        name: !input entity11_name
        icon: !input entity11_icon
        icon_color_rgb: !input entity11_icon_color
        confirm: !input entity11_confirm
        page: buttonpage02
        component: button03
      - entity: !input entity12
        name: !input entity12_name
        icon: !input entity12_icon
        icon_color_rgb: !input entity12_icon_color
        confirm: !input entity12_confirm
        page: buttonpage02
        component: button04
      - entity: !input entity13
        name: !input entity13_name
        icon: !input entity13_icon
        icon_color_rgb: !input entity13_icon_color
        confirm: !input entity13_confirm
        page: buttonpage02
        component: button05
      - entity: !input entity14
        name: !input entity14_name
        icon: !input entity14_icon
        icon_color_rgb: !input entity14_icon_color
        confirm: !input entity14_confirm
        page: buttonpage02
        component: button06
      - entity: !input entity15
        name: !input entity15_name
        icon: !input entity15_icon
        icon_color_rgb: !input entity15_icon_color
        confirm: !input entity15_confirm
        page: buttonpage02
        component: button07
      - entity: !input entity16
        name: !input entity16_name
        icon: !input entity16_icon
        icon_color_rgb: !input entity16_icon_color
        confirm: !input entity16_confirm
        page: buttonpage02
        component: button08
      - entity: !input entity17
        name: !input entity17_name
        icon: !input entity17_icon
        icon_color_rgb: !input entity17_icon_color
        confirm: !input entity17_confirm
        page: buttonpage03
        component: button01
      - entity: !input entity18
        name: !input entity18_name
        icon: !input entity18_icon
        icon_color_rgb: !input entity18_icon_color
        confirm: !input entity18_confirm
        page: buttonpage03
        component: button02
      - entity: !input entity19
        name: !input entity19_name
        icon: !input entity19_icon
        icon_color_rgb: !input entity19_icon_color
        confirm: !input entity19_confirm
        page: buttonpage03
        component: button03
      - entity: !input entity20
        name: !input entity20_name
        icon: !input entity20_icon
        icon_color_rgb: !input entity20_icon_color
        confirm: !input entity20_confirm
        page: buttonpage03
        component: button04
      - entity: !input entity21
        name: !input entity21_name
        icon: !input entity21_icon
        icon_color_rgb: !input entity21_icon_color
        confirm: !input entity21_confirm
        page: buttonpage03
        component: button05
      - entity: !input entity22
        name: !input entity22_name
        icon: !input entity22_icon
        icon_color_rgb: !input entity22_icon_color
        confirm: !input entity22_confirm
        page: buttonpage03
        component: button06
      - entity: !input entity23
        name: !input entity23_name
        icon: !input entity23_icon
        icon_color_rgb: !input entity23_icon_color
        confirm: !input entity23_confirm
        page: buttonpage03
        component: button07
      - entity: !input entity24
        name: !input entity24_name
        icon: !input entity24_icon
        icon_color_rgb: !input entity24_icon_color
        confirm: !input entity24_confirm
        page: buttonpage03
        component: button08
      - entity: !input entity25
        name: !input entity25_name
        icon: !input entity25_icon
        icon_color_rgb: !input entity25_icon_color
        confirm: !input entity25_confirm
        page: buttonpage04
        component: button01
      - entity: !input entity26
        name: !input entity26_name
        icon: !input entity26_icon
        icon_color_rgb: !input entity26_icon_color
        confirm: !input entity26_confirm
        page: buttonpage04
        component: button02
      - entity: !input entity27
        name: !input entity27_name
        icon: !input entity27_icon
        icon_color_rgb: !input entity27_icon_color
        confirm: !input entity27_confirm
        page: buttonpage04
        component: button03
      - entity: !input entity28
        name: !input entity28_name
        icon: !input entity28_icon
        icon_color_rgb: !input entity28_icon_color
        confirm: !input entity28_confirm
        page: buttonpage04
        component: button04
      - entity: !input entity29
        name: !input entity29_name
        icon: !input entity29_icon
        icon_color_rgb: !input entity29_icon_color
        confirm: !input entity29_confirm
        page: buttonpage04
        component: button05
      - entity: !input entity30
        name: !input entity30_name
        icon: !input entity30_icon
        icon_color_rgb: !input entity30_icon_color
        confirm: !input entity30_confirm
        page: buttonpage04
        component: button06
      - entity: !input entity31
        name: !input entity31_name
        icon: !input entity31_icon
        icon_color_rgb: !input entity31_icon_color
        confirm: !input entity31_confirm
        page: buttonpage04
        component: button07
      - entity: !input entity32
        name: !input entity32_name
        icon: !input entity32_icon
        icon_color_rgb: !input entity32_icon_color
        confirm: !input entity32_confirm
        page: buttonpage04
        component: button08
    entities_pages:
      labels:
        entitypage01: !input entity_page01_label
        entitypage02: !input entity_page02_label
        entitypage03: !input entity_page03_label
        entitypage04: !input entity_page04_label
      entities:
      - entity: !input entities_entity01
        name: !input entities_entity01_name
        icon: !input entities_entity01_icon
        page: entitypage01
        component: value01
      - entity: !input entities_entity02
        name: !input entities_entity02_name
        icon: !input entities_entity02_icon
        page: entitypage01
        component: value02
      - entity: !input entities_entity03
        name: !input entities_entity03_name
        icon: !input entities_entity03_icon
        page: entitypage01
        component: value03
      - entity: !input entities_entity04
        name: !input entities_entity04_name
        icon: !input entities_entity04_icon
        page: entitypage01
        component: value04
      - entity: !input entities_entity05
        name: !input entities_entity05_name
        icon: !input entities_entity05_icon
        page: entitypage01
        component: value05
      - entity: !input entities_entity06
        name: !input entities_entity06_name
        icon: !input entities_entity06_icon
        page: entitypage01
        component: value06
      - entity: !input entities_entity07
        name: !input entities_entity07_name
        icon: !input entities_entity07_icon
        page: entitypage01
        component: value07
      - entity: !input entities_entity08
        name: !input entities_entity08_name
        icon: !input entities_entity08_icon
        page: entitypage01
        component: value08
      - entity: !input entities_entity09
        name: !input entities_entity09_name
        icon: !input entities_entity09_icon
        page: entitypage02
        component: value01
      - entity: !input entities_entity10
        name: !input entities_entity10_name
        icon: !input entities_entity10_icon
        page: entitypage02
        component: value02
      - entity: !input entities_entity11
        name: !input entities_entity11_name
        icon: !input entities_entity11_icon
        page: entitypage02
        component: value03
      - entity: !input entities_entity12
        name: !input entities_entity12_name
        icon: !input entities_entity12_icon
        page: entitypage02
        component: value04
      - entity: !input entities_entity13
        name: !input entities_entity13_name
        icon: !input entities_entity13_icon
        page: entitypage02
        component: value05
      - entity: !input entities_entity14
        name: !input entities_entity14_name
        icon: !input entities_entity14_icon
        page: entitypage02
        component: value06
      - entity: !input entities_entity15
        name: !input entities_entity15_name
        icon: !input entities_entity15_icon
        page: entitypage02
        component: value07
      - entity: !input entities_entity16
        name: !input entities_entity16_name
        icon: !input entities_entity16_icon
        page: entitypage02
        component: value08
      - entity: !input entities_entity17
        name: !input entities_entity17_name
        icon: !input entities_entity17_icon
        page: entitypage03
        component: value01
      - entity: !input entities_entity18
        name: !input entities_entity18_name
        icon: !input entities_entity18_icon
        page: entitypage03
        component: value02
      - entity: !input entities_entity19
        name: !input entities_entity19_name
        icon: !input entities_entity19_icon
        page: entitypage03
        component: value03
      - entity: !input entities_entity20
        name: !input entities_entity20_name
        icon: !input entities_entity20_icon
        page: entitypage03
        component: value04
      - entity: !input entities_entity21
        name: !input entities_entity21_name
        icon: !input entities_entity21_icon
        page: entitypage03
        component: value05
      - entity: !input entities_entity22
        name: !input entities_entity22_name
        icon: !input entities_entity22_icon
        page: entitypage03
        component: value06
      - entity: !input entities_entity23
        name: !input entities_entity23_name
        icon: !input entities_entity23_icon
        page: entitypage03
        component: value07
      - entity: !input entities_entity24
        name: !input entities_entity24_name
        icon: !input entities_entity24_icon
        page: entitypage03
        component: value08
      - entity: !input entities_entity25
        name: !input entities_entity25_name
        icon: !input entities_entity25_icon
        page: entitypage04
        component: value01
      - entity: !input entities_entity26
        name: !input entities_entity26_name
        icon: !input entities_entity26_icon
        page: entitypage04
        component: value02
      - entity: !input entities_entity27
        name: !input entities_entity27_name
        icon: !input entities_entity27_icon
        page: entitypage04
        component: value03
      - entity: !input entities_entity28
        name: !input entities_entity28_name
        icon: !input entities_entity28_icon
        page: entitypage04
        component: value04
      - entity: !input entities_entity29
        name: !input entities_entity29_name
        icon: !input entities_entity29_icon
        page: entitypage04
        component: value05
      - entity: !input entities_entity30
        name: !input entities_entity30_name
        icon: !input entities_entity30_icon
        page: entitypage04
        component: value06
      - entity: !input entities_entity31
        name: !input entities_entity31_name
        icon: !input entities_entity31_icon
        page: entitypage04
        component: value07
      - entity: !input entities_entity32
        name: !input entities_entity32_name
        icon: !input entities_entity32_icon
        page: entitypage04
        component: value08
    weather_entity_tmp: !input weather_entity
    weather_entity: '{% if weather_entity_tmp is string and weather_entity_tmp | length
      > 0 %} {{ weather_entity_tmp }} {% elif states.weather | list | count > 0 %}
      {{ states.weather | map(attribute="entity_id") | list | first }} {% endif %}

      '
    temperature_units: °
    page_climate:
      buttons:
        hvac_mode:
        - mode: auto
          icon: calendar-sync
          color: green
          component: button01
        - mode: heat_cool
          icon: autorenew
          color: amber
          component: button02
        - mode: heat
          icon: fire
          color: deep_orange
          component: button03
        - mode: cool
          icon: snowflake
          color: blue
          component: button04
        - mode: dry
          icon: water-percent
          color: orange
          component: button05
        - mode: fan_only
          icon: fan
          color: cyan
          component: button06
        - mode: 'off'
          icon: power
          color: 'off'
          component: button07
    pages_utilities:
      cursor:
        width: !input utilities_page_cursor_width
      title:
        label: !input utilities_page01_label
        icon: !input utilities_page01_icon
      groups:
      - name: grid
        label: !input utilities_page01_grid_label
        icon: !input utilities_page01_grid_icon
        value1: !input utilities_page01_grid_value1
        value2: !input utilities_page01_grid_value2
        color: !input utilities_page01_grid_color
      - name: group01
        label: !input utilities_page01_group01_label
        icon: !input utilities_page01_group01_icon
        value1: !input utilities_page01_group01_value1
        value2: !input utilities_page01_group01_value2
        color: !input utilities_page01_group01_color
        line_ref: !input utilities_page01_group01_line_reference
        line_inverted: !input utilities_page01_group01_line_inverted
      - name: group02
        label: !input utilities_page01_group02_label
        icon: !input utilities_page01_group02_icon
        value1: !input utilities_page01_group02_value1
        value2: !input utilities_page01_group02_value2
        color: !input utilities_page01_group02_color
        line_ref: !input utilities_page01_group02_line_reference
        line_inverted: !input utilities_page01_group02_line_inverted
      - name: group03
        label: !input utilities_page01_group03_label
        icon: !input utilities_page01_group03_icon
        value1: !input utilities_page01_group03_value1
        value2: !input utilities_page01_group03_value2
        color: !input utilities_page01_group03_color
        line_ref: !input utilities_page01_group03_line_reference
        line_inverted: !input utilities_page01_group03_line_inverted
      - name: group04
        label: !input utilities_page01_group04_label
        icon: !input utilities_page01_group04_icon
        value1: !input utilities_page01_group04_value1
        value2: !input utilities_page01_group04_value2
        color: !input utilities_page01_group04_color
        line_ref: !input utilities_page01_group04_line_reference
        line_inverted: !input utilities_page01_group04_line_inverted
      - name: group05
        label: !input utilities_page01_group05_label
        icon: !input utilities_page01_group05_icon
        value1: !input utilities_page01_group05_value1
        value2: !input utilities_page01_group05_value2
        color: !input utilities_page01_group05_color
        line_ref: !input utilities_page01_group05_line_reference
        line_inverted: !input utilities_page01_group05_line_inverted
      - name: group06
        label: !input utilities_page01_group06_label
        icon: !input utilities_page01_group06_icon
        value1: !input utilities_page01_group06_value1
        value2: !input utilities_page01_group06_value2
        color: !input utilities_page01_group06_color
        line_ref: !input utilities_page01_group06_line_reference
        line_inverted: !input utilities_page01_group06_line_inverted
      - name: home
        label: !input utilities_page01_home_label
        icon: !input utilities_page01_home_icon
        value1: !input utilities_page01_home_value1
        value2: !input utilities_page01_home_value2
        color: !input utilities_page01_home_color
        line_ref: !input utilities_page01_main_line_reference
        line_inverted: !input utilities_page01_main_line_inverted
    media_player_update_interval: !input media_player_update_interval
    media_player_update_delay: !input media_player_update_delay
    climate: !input climate
    embedded_climate: '{{ climate == thermostat_embedded }}'
    domain_automation_button_action: !input domain_automation_button_action
    enum:
      ColorMode:
        UNKNOWN: '[<ColorMode.UNKNOWN: ''unknown''>]'
        ONOFF: '[<ColorMode.ONOFF: ''onoff''>]'
        BRIGHTNESS: '[<ColorMode.BRIGHTNESS: ''brightness''>]'
        COLOR_TEMP: '[<ColorMode.COLOR_TEMP: ''color_temp''>]'
        HS: '[<ColorMode.HS: ''hs''>]'
        XY: '[<ColorMode.XY: ''xy''>]'
        RGB: '[<ColorMode.RGB: ''rgb''>]'
        RGBW: '[<ColorMode.RGBW: ''rgbw''>]'
        RGBWW: '[<ColorMode.RGBWW: ''rgbww''>]'
        WHITE: '[<ColorMode.WHITE: ''''>]'
      HVACMode:
        'OFF': '[<HVACMode.OFF: ''off''>]'
        HEAT: '[<HVACMode.HEAT: ''heat''>]'
        COOL: '[<HVACMode.COOL: ''cool''>]'
        HEAT_COOL: '[<HVACMode.HEAT_COOL: ''heat_cool''>]'
        AUTO: '[<HVACMode.AUTO: ''auto''>]'
        DRY: '[<HVACMode.DRY: ''dry''>]'
        FAN_ONLY: '[<HVACMode.FAN_ONLY: ''fan_only''>]'
      HVACMode_bits:
        'OFF': 1
        HEAT: 2
        COOL: 4
        HEAT_COOL: 8
        AUTO: 16
        DRY: 32
        FAN_ONLY: 64
      states:
        'on':
        - 'on'
        - open
        - opening
        - 'true'
        - 'True'
        - true
        - true
        - playing
        - heat
        - cold
        - dry
        - armed_home
        - armed_away
        - armed_vacation
        - armed_custom_bypass
        - triggered
        - pending
        - arming
        - unlocked
        - 1
        'off':
        - 'off'
        - closed
        - closing
        - 'false'
        - 'False'
        - false
        - false
        - standby
        - paused
        - idle
        - disarmed
        - disarming
        - locked
        unknown:
        - unknown
        - unavailable
        - None
        - none
        - ''
        climate:
          'on':
          - heat_cool
          - heat
          - heating
          - cold
          - cooling
          - dry
          - drying
          - fan
          - fan_only
          - auto
          'off':
          - 'off'
          - idle
        alarm_control_panel:
          'on':
          - armed_home
          - armed_away
          - armed_vacation
          - armed_custom_bypass
          - triggered
          - pending
          - arming
          'off':
          - disarmed
          - disarming
        lock:
          'on':
          - unlocked
          'off':
          - locked
- if: '{{ false }}'
  then:
  - variables:
      entity_id: '{{ None }}'
      overlap:
        icon: '{{ None }}'
        icon_color: '{{ None }}'
        name: '{{ None }}'
  - &id003
    alias: Variable Entity
    variables:
      entity_id_valid: '{{ entity_id is defined and entity_id is string and entity_id.split(".")
        | count == 2 }}'
      entity_state: '{{ states(entity_id) | default("unknown") if entity_id_valid
        }}'
      entity_has_value: '{{ has_value(entity_id) if entity_id_valid }}'
      entity_domain: '{{ entity_id.split(".")[0] if entity_id_valid }}'
      entity_icon: '{{ state_attr(entity_id, "icon") | default("") if entity_id_valid
        }}'
      entity_state_is_on: "{{\n  (\n    entity_state in enum.states.on or\n    (entity_domain
        in [\"input_number\", \"number\", \"sensor\"] and entity_has_value) or\n    (entity_domain
        in enum.states and entity_state in enum.states[entity_domain].on)\n  ) if
        entity_id_valid\n}}\n"
      entity_state_is_off: "{{\n  (not entity_state_is_on) and\n  (\n    entity_state
        in enum.states.off or\n    (\n      entity_domain in enum.states and\n      entity_state
        in enum.states[entity_domain].off\n    )\n  )\n  if entity_id_valid\n}}\n"
      entity_state_is_unknown: '{{ ((not entity_state_is_on) and (not entity_state_is_off))
        if entity_id_valid }}'
      entity_icon_color: "{{\n  (\n    (\n      overlap.icon_color\n      if overlap
        is defined and overlap.icon_color is defined and overlap.icon_color is sequence
        and overlap.icon_color | count == 3\n      else nextion.color.on\n    )\n
        \   if ((not entity_state_is_off) and (not entity_state_is_unknown))\n    else
        nextion.color.off\n  ) if entity_id_valid\n}}\n"
      entity_friendly_name: '{{ state_attr(entity_id, "friendly_name") | default("")
        if entity_id_valid }}'
      entity_device_class: '{{ state_attr(entity_id, "device_class") | default("")
        if entity_id_valid }}'
      entity:
        name: "{{\n  (\n    overlap.name\n    if overlap is defined and overlap.name
          is defined and overlap.name is string and overlap.name | length > 0\n    else
          (entity_friendly_name if entity_friendly_name is string and entity_friendly_name
          | length > 0 else entity_id)\n  ) if entity_id_valid\n}}\n"
        icon: "{% if entity_id_valid %}\n  {% set icon_domain = nextion.icon.domain[entity_domain]
          | default(all_icons.unknown) if entity_domain else all_icons.unknown %}\n
          \ {% if overlap is defined and overlap.icon is defined and overlap.icon
          is string and overlap.icon | length > 0 %}\n    {{ all_icons[overlap.icon.split(\":\")[1]]
          | default(icon_domain) if overlap.icon.split(\":\") | count == 2 else overlap.icon
          }}\n  {% elif entity_domain == \"climate\" %}\n    {% set entity_hvac_action
          = state_attr(entity_id, \"hvac_action\") | default(\"\") %}\n    {% set
          entity_climate_action = (entity_hvac_action if entity_hvac_action and entity_hvac_action
          not in enum.states.unknown else entity_state) %}\n    {% if \"off\" in entity_climate_action
          %}{{ all_icons.thermostat }}\n    {% elif \"heat_cool\" in entity_climate_action
          %}{{ all_icons.autorenew }}\n    {% elif \"heating\" in entity_climate_action
          or \"heat\" in entity_climate_action %}{{ all_icons[\"thermometer-lines\"]
          }}\n    {% elif \"cooling\" in entity_climate_action or \"cool\" in entity_climate_action
          %}{{ all_icons.snowflake }}\n    {% elif \"drying\" in entity_climate_action
          or \"dry\" in entity_climate_action %}{{ all_icons[\"water-percent\"] }}\n
          \   {% elif \"fan\" in entity_climate_action or \"fan_only\" in entity_climate_action
          %}{{ all_icons.fan }}\n    {% elif \"auto\" in entity_climate_action %}{{
          all_icons[\"calendar-sync\"] }}\n    {% elif \"idle\" in entity_climate_action
          %}{{ all_icons.thermometer }}\n    {% else %}{{ icon_domain }}\n    {% endif
          %}\n  {% elif entity_domain == \"alarm_control_panel\" %}\n    {% if entity_state
          in [\"disarmed\", \"disarming\"] %}{{ all_icons[\"shield-off-outline\"]
          }}\n    {% elif entity_state == \"armed_home\" %}{{ all_icons[\"shield-home-outline\"]
          }}\n    {% elif entity_state == \"armed_away\" %}{{ all_icons[\"shield-lock-outline\"]
          }}\n    {% elif entity_state == \"armed_night\" %}{{ all_icons[\"shield-moon-outline\"]
          }}\n    {% elif entity_state == \"armed_vacation\" %}{{ all_icons[\"shield-airplane-outline\"]
          }}\n    {% elif entity_state == \"armed_bypass\" %}{{ all_icons[\"shield-half-full\"]
          }}\n    {% elif entity_state in [\"pending\", \"arming\"] %}{{ all_icons[\"shield-outline\"]
          }}\n    {% else %}{{ all_icons[\"shield-alert-outline\"] }}\n    {% endif
          %}\n  {% elif entity_domain == \"lock\" %}\n    {% if entity_state in [\"locked\"]
          %}{{ all_icons[\"lock\"] }}\n    {% elif entity_state in [\"unlocked\"]
          %}{{ all_icons[\"lock-open-variant\"] }}\n    {% else %}\n      {{ all_icons[\"lock-alert\"]
          }}\n    {% endif %}\n  {% elif entity_icon is defined and entity_icon is
          string and entity_icon.split(\":\") | count == 2 and entity_icon.split(\":\")[1]
          in all_icons %}\n    {{ all_icons[entity_icon.split(\":\")[1]] }}\n  {%
          elif\n      entity_domain in [\"binary_sensor\", \"cover\", \"sensor\",
          \"switch\"] and\n      entity_device_class is defined and entity_device_class
          is string and entity_device_class | length > 0 %}\n    {% set entity_device_class_icon
          = entity_device_class + ((\"-\" + entity_state) if entity_domain not in
          [\"sensor\"] else \"\") %}\n    {% set entity_device_class_icon = device_class_icons[entity_domain][entity_device_class_icon]
          if entity_device_class_icon in device_class_icons[entity_domain] else icon_domain
          %}\n    {{ all_icons[entity_device_class_icon] if entity_device_class_icon
          in all_icons else icon_domain }}\n  {% else %}\n    {{ icon_domain }}\n
          \ {% endif %}\n{% endif %}\n"
        icon_color: "{% if entity_id_valid %}\n  {% if entity_domain == \"alarm_control_panel\"
          %}\n    {% if entity_state == \"disarmed\" %}{{ nextion.color.off }}\n    {%
          elif entity_state in [\"armed_home\", \"armed_away\", \"armed_night\", \"armed_vacation\",
          \"armed_bypass\"] %}{{ nextion.color.green }}\n    {% elif entity_state
          in [\"pending\", \"arming\", \"disarming\"] %}{{ nextion.color.amber }}\n
          \   {% elif entity_state == \"triggered\" %}{{ nextion.color.red }}\n    {%
          else %}{{ entity_icon_color }}\n    {% endif %}\n  {% elif entity_domain
          == \"climate\" %}\n    {% set entity_hvac_action = state_attr(entity_id,
          \"hvac_action\") | default(\"\") %}\n    {% set entity_climate_action =
          (entity_hvac_action if entity_hvac_action and entity_hvac_action not in
          enum.states.unknown else entity_state) %}\n    {% if \"off\" in entity_climate_action
          %}{{ nextion.color.off }}\n    {% elif \"heat_cool\" in entity_climate_action
          %}{{ nextion.color.amber }}\n    {% elif \"heating\" in entity_climate_action
          or \"heat\" in entity_climate_action %}{{ nextion.color.deep_orange}}\n
          \   {% elif \"cooling\" in entity_climate_action or \"cool\" in entity_climate_action
          %}{{ nextion.color.blue }}\n    {% elif \"drying\" in entity_climate_action
          or \"dry\" in entity_climate_action %}{{ nextion.color.orange }}\n    {%
          elif \"fan\" in entity_climate_action or \"fan_only\" in entity_climate_action
          %}{{ nextion.color.cyan }}\n    {% elif \"auto\" in entity_climate_action
          %}{{ nextion.color.green }}\n    {% elif \"idle\" in entity_climate_action
          %}{{ nextion.color.off }}\n    {% else %}{{ entity_icon_color }}\n    {%
          endif %}\n  {% elif entity_domain == \"light\" %}\n    {% if entity_state
          != \"on\" %}{{ nextion.color.off }}\n    {% else %}\n      {% set entity_rgb_color_attr
          = state_attr(entity_id, \"rgb_color\") | default(\"\") %}\n      {% set
          entity_rgb_color = entity_rgb_color_attr if entity_rgb_color_attr is sequence
          and entity_rgb_color_attr | count == 3 else entity_icon_color %}\n      {%
          set entity_brightness = state_attr(entity_id, \"brightness\") | default(\"\")
          %}\n      {% set entity_brightness_index = (entity_brightness | int(255))/255
          if is_number(entity_brightness) else 1 %}\n      {{\n        [\n          min(200,entity_rgb_color[0]
          * entity_brightness_index) | round(0),\n          min(200,entity_rgb_color[1]
          * entity_brightness_index) | round(0),\n          min(200,entity_rgb_color[2]
          * entity_brightness_index) | round(0)\n        ]\n      }}\n    {% endif
          %}\n  {% elif entity_domain == \"lock\" %}\n    {% if entity_state in [\"locked\"]
          %}{{ nextion.color.green }}\n    {% elif entity_state in [\"unlocked\"]
          %}{{ nextion.color.red }}\n    {% else %}\n      {{ entity_icon_color }}\n
          \   {% endif %}\n  {% else %}{{ entity_icon_color }}\n  {% endif %}\n{%
          endif %}\n"
- alias: Main choices
  choose:
  - alias: Date
    conditions:
    - condition: trigger
      id: time_state
    sequence:
    - &id001
      delay:
        milliseconds: !input delay
    - &id002
      service: esphome.{{ nspanel_name }}_component_text
      data:
        id: home.date
        txt: "{{\n  as_timestamp(now())\n  | timestamp_custom\n  (\n    date_format\n
          \   | replace(\"%A\", (dict.values(mui[language].weekdays) | list)[now().weekday()])\n
          \   | replace(\"%a\", (dict.values(mui[language].weekdays_short) | list)[now().weekday()])\n
          \   | replace(\"%B\", (dict.values(mui[language].months) | list)[now().month-1])\n
          \   | replace(\"%b\", (dict.values(mui[language].months_short) | list)[now().month-1])\n
          \ )\n}}\n"
      continue_on_error: true
  - alias: NSPanel event
    conditions:
    - condition: trigger
      id: nspanel_event
    sequence:
    - variables:
        nspanel_event: '{{ trigger.event.data }}'
    - choose:
      - alias: Boot init
        conditions:
        - '{{ nspanel_event.type == "boot"}}'
        - '{{ nspanel_event.step is defined and nspanel_event.step in ["nextion_init",
          "timeout"]}}'
        sequence:
        - if: '{{ nspanel_event.step == "timeout" }}'
          then:
            delay: 15
        - &id012
          if: '{{ true }}'
          then:
          - service: esphome.{{ nspanel_name }}_component_text
            data:
              id: boot.bluep_version
              txt: '{{ blueprint_version }}'
            continue_on_error: true
          - &id006
            variables:
              hw_button_left_entity: !input left_button_entity
              hw_button_left_state_entity: !input left_button_state_entity
              hw_button_right_entity: !input right_button_entity
              hw_button_right_state_entity: !input right_button_state_entity
              hardware:
                buttons:
                  left:
                    entity: '{{ hw_button_left_entity }}'
                    entity_is_valid: '{{ hw_button_left_entity is defined and hw_button_left_entity
                      is string and hw_button_left_entity.split(".") | count == 2
                      }}'
                    state_entity: '{{ hw_button_left_state_entity }}'
                    state_entity_is_valid: '{{ hw_button_left_state_entity is defined
                      and hw_button_left_state_entity is string and hw_button_left_state_entity.split(".")
                      | count == 2 }}

                      '
                    name: !input left_button_name
                    hold_select: !input left_button_hold_select
                    bar_always_visible: !input hw_button_bar_left_always_show
                  right:
                    entity: '{{ hw_button_right_entity }}'
                    entity_is_valid: '{{ hw_button_right_entity is defined and hw_button_right_entity
                      is string and hw_button_right_entity.split(".") | count == 2
                      }}'
                    state_entity: '{{ hw_button_right_state_entity }}'
                    state_entity_is_valid: '{{ hw_button_right_state_entity is defined
                      and hw_button_right_state_entity is string and hw_button_right_state_entity.split(".")
                      | count == 2 }}

                      '
                    name: !input right_button_name
                    hold_select: !input right_button_hold_select
                    bar_always_visible: !input hw_button_bar_right_always_show
                relay1_icon: !input relay01_icon
                relay2_icon: !input relay02_icon
          - variables:
              bt_utilities_icon: !input home_button08_icon
              bt_entities_icon: !input home_button06_icon
              bt_qrcode_icon: !input home_button05_icon
              qrcode:
                enabled: !input qrcode_enabled
                title: !input qrcode_label
                qrcode: !input qrcode_value
              home_indoor_temp_icon: !input home_indoor_temp_icon
              timezone: !input timezone
          - if: '{{ timezone is string and timezone | length > 1 }}'
            then:
            - variables:
                timezone_code: "{{\n  timezone.split('(')[1]|replace(')', '')\n  if
                  timezone.split('(') | count > 0\n  else timezone\n}}\n"
            - *id001
            - service: esphome.{{ nspanel_name }}_set_string
              data:
                component: timezone
                val: '{{ timezone_code }}'
              continue_on_error: true
          - *id001
          - service: esphome.{{ nspanel_name }}_init_page_home
            data:
              date_color: !input date_label_color
              time_format: !input time_format
              time_color: !input time_label_color
              meridiem: '{{ dict.values(mui[language].meridiem) | list }}'
              chip_font: !input chip_font_size
              custom_buttons_font: !input custom_buttons_font_size
              qrcode: !input qrcode_enabled
              qrcode_icon: "{{\n  all_icons[bt_bt_qrcode_icon.split(\"mdi:\")[1]]\n
                \ if bt_bt_qrcode_icon is string and bt_bt_qrcode_icon.split(\"mdi:\")[1]
                in all_icons\n  else all_icons[\"qrcode-scan\"]\n}}\n"
              qrcode_icon_color: !input home_button05_icon_color
              entities_pages_icon: "{{\n  all_icons[bt_entities_icon.split(\"mdi:\")[1]]\n
                \ if bt_entities_icon is string and bt_entities_icon.split(\"mdi:\")[1]
                in all_icons\n  else all_icons[\"format-list-bulleted-square\"]\n}}\n"
              entities_pages_icon_color: !input home_button06_icon_color
              utilities: !input utilities_enabled
              utilities_icon: "{{\n  all_icons[bt_utilities_icon.split(\"mdi:\")[1]]\n
                \ if bt_utilities_icon is string and bt_utilities_icon.split(\"mdi:\")[1]
                in all_icons\n  else all_icons.gauge\n}}\n"
              utilities_icon_color: !input home_button08_icon_color
              outdoor_temp_font: !input home_outdoor_temp_font
            continue_on_error: true
          - *id001
          - service: esphome.{{ nspanel_name }}_component_color
            data:
              id: home.outdoor_temp
              color: !input home_outdoor_temp_label_color
            continue_on_error: true
          - *id001
          - service: esphome.{{ nspanel_name }}_component_color
            data:
              id: home.indr_temp
              color: !input home_indoor_temp_label_color
            continue_on_error: true
          - *id001
          - service: esphome.{{ nspanel_name }}_component_text
            data:
              id: home.indr_temp_icon
              txt: "{{\n  all_icons[home_indoor_temp_icon.split(\"mdi:\")[1]]\n  if
                home_indoor_temp_icon.split(\"mdi:\") | count == 2 and home_indoor_temp_icon.split(\"mdi:\")[1]
                in all_icons\n  else all_icons.thermometer\n}}\n"
            continue_on_error: true
          - *id001
          - service: esphome.{{ nspanel_name }}_component_color
            data:
              id: home.indr_temp_icon
              color: !input home_indoor_temp_icon_color
            continue_on_error: true
          - repeat:
              for_each: "{{\n  home_page.chips\n  | selectattr(\"entity\", \"defined\")\n
                \ | rejectattr(\"entity\", \"eq\", [])\n  | selectattr(\"icon_color_rgb\",
                \"defined\")\n  | rejectattr(\"icon_color_rgb\", \"eq\", [])\n  |
                rejectattr(\"icon_color_rgb\", \"eq\", [0, 0, 0])\n  | list\n}}\n"
              sequence:
              - *id001
              - service: esphome.{{ nspanel_name }}_component_color
                data:
                  id: home.{{ repeat.item.component }}
                  color: '{{ repeat.item.icon_color_rgb }}'
                continue_on_error: true
          - repeat:
              for_each: '{{ home_page.entity_value | list }}'
              sequence:
              - variables:
                  value_entity_id_is_valid: '{{ repeat.item.entity is defined and
                    repeat.item.entity is string and repeat.item.entity.split(".")
                    | count == 2 }}'
              - *id001
              - service: esphome.{{ nspanel_name }}_component_color
                data:
                  id: '{{ repeat.item.page }}.{{ repeat.item.component }}'
                  color: '{{ repeat.item.label_color_rgb if value_entity_id_is_valid
                    else [0, 0, 0] }}'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: '{{ repeat.item.page }}.{{ repeat.item.component }}_icon'
                  txt: "{{\n  all_icons[repeat.item.icon.split(\"mdi:\")[1]]\n  if\n
                    \   value_entity_id_is_valid and\n    repeat.item.icon is defined
                    and\n    repeat.item.icon is string and\n    repeat.item.icon.split(\"mdi:\")
                    | count == 2 and\n    repeat.item.icon.split(\"mdi:\")[1] in all_icons\n
                    \ else all_icons.blank\n}}\n"
                continue_on_error: true
          - if: '{{ hardware.buttons.left.name | length > 0 }}'
            then:
            - *id001
            - service: esphome.{{ nspanel_name }}_component_color
              data:
                id: home.left_bt_text
                color: !input left_button_color
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: home.left_bt_text
                txt: '{{ hardware.buttons.left.name }}'
              continue_on_error: true
          - if: '{{ hardware.buttons.right.name | length > 0 }}'
            then:
            - *id001
            - service: esphome.{{ nspanel_name }}_component_color
              data:
                id: home.right_bt_text
                color: !input right_button_color
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: home.right_bt_text
                txt: '{{ hardware.buttons.right.name }}'
              continue_on_error: true
          - *id001
          - service: esphome.{{ nspanel_name }}_qrcode
            data:
              title: '{{ qrcode.title if qrcode.enabled else "" }}'
              qrcode: '{{ qrcode.qrcode if qrcode.enabled else "" }}'
              show: false
            continue_on_error: true
          - *id001
          - service: esphome.{{ nspanel_name }}_init_page_settings
            data:
              reboot: '{{ mui[language].settings.reboot }}'
              brightness: '{{ mui[language].settings.brightness }}'
              bright: '{{ mui[language].settings.bright }}'
              dim: '{{ mui[language].settings.dim }}'
            continue_on_error: true
          - variables:
              climate_entity_id_valid: '{{ climate is string and climate is match
                "climate." }}'
              climate_friendly_name: '{{ state_attr(climate, "friendly_name") if climate_entity_id_valid
                else "" }}'
              hw_buttons_bars_pages: !input hw_buttons_bars_pages
          - if: '{{ not climate_entity_id_valid }}'
            then:
            - *id001
            - service: esphome.{{ nspanel_name }}_set_bool
              data:
                component: is_climate
                val: '{{ climate_entity_id_valid }}'
              continue_on_error: true
          - *id001
          - service: esphome.{{ nspanel_name }}_init_hardware
            data:
              relay1_local_control: '{{ hardware.buttons.left.entity == relay01_entity
                }}'
              relay1_icon: '{{ all_icons[hardware.relay1_icon.split("mdi:")[1]] if
                hardware.relay1_icon.split("mdi:")[1] in all_icons else all_icons["numeric-1-box-outline"]
                }}'
              relay1_icon_color: !input relay01_icon_color
              relay1_fallback: !input relay_1_local_fallback
              relay2_local_control: '{{ hardware.buttons.right.entity == relay02_entity
                }}'
              relay2_icon: '{{ all_icons[hardware.relay2_icon.split("mdi:")[1]] if
                hardware.relay2_icon.split("mdi:")[1] in all_icons else all_icons["numeric-2-box-outline"]
                }}'
              relay2_icon_color: !input relay02_icon_color
              relay2_fallback: !input relay_2_local_fallback
              button_left: '{{ hardware.buttons.left.bar_always_visible or hardware.buttons.left.state_entity_is_valid
                or hardware.buttons.left.entity_is_valid }}'
              button_right: '{{ hardware.buttons.right.bar_always_visible or hardware.buttons.right.state_entity_is_valid
                or hardware.buttons.right.entity_is_valid }}'
              button_bar_pages: '{{ hw_buttons_bars_pages | map("int") | sum }}'
              button_bar_color_on: !input hw_buttons_bar_color_on
              button_bar_color_off: !input hw_buttons_bar_color_off
              embedded_climate: '{{ climate == thermostat_embedded }}'
              embedded_climate_friendly_name: '{{ climate_friendly_name if climate_friendly_name
                else "" }}'
              embedded_indoor_temperature: '{{ embedded_indoor_temperature }}'
            continue_on_error: true
          - if: '{{ true }}'
            then:
            - variables:
                hw_btn_left_state: "{{ (states(hardware.buttons.left.state_entity)
                  | default(\"unavailable\")\n  if hardware.buttons.left.state_entity_is_valid\n
                  \ else (states(hardware.buttons.left.entity) | default(\"unavailable\")\n
                  \   if hardware.buttons.left.entity_is_valid else \"unavailable\"))
                  in enum.states.on }}\n"
                hw_btn_right_state: "{{ (states(hardware.buttons.right.state_entity)
                  | default(\"unavailable\")\n  if hardware.buttons.right.state_entity_is_valid\n
                  \ else (states(hardware.buttons.right.entity) | default(\"unavailable\")\n
                  \   if hardware.buttons.right.entity_is_valid else \"unavailable\"))
                  in enum.states.on }}\n"
            - if: '{{ hw_btn_left_state == hw_btn_right_state }}'
              then:
              - *id001
              - service: esphome.{{ nspanel_name }}_hw_button_state
                data:
                  button_mask: 3
                  state: '{{ hw_btn_left_state }}'
                continue_on_error: true
              else:
              - *id001
              - service: esphome.{{ nspanel_name }}_hw_button_state
                data:
                  button_mask: 1
                  state: '{{ hw_btn_left_state }}'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_hw_button_state
                data:
                  button_mask: 2
                  state: '{{ hw_btn_right_state }}'
                continue_on_error: true
          - variables:
              entitypages_value_alignment: !input entitypages_value_alignment
          - *id001
          - service: esphome.{{ nspanel_name }}_init_global
            data:
              blueprint_version: '{{ blueprint_version }}'
              ent_value_xcen: '{{ int(entitypages_value_alignment) if is_number(entitypages_value_alignment)
                else 0 }}'
              mui_please_confirm: '{{ mui[language].please_confirm }}'
              mui_unavailable: '{{ mui[language].unavailable }}'
              screensaver_time: !input screensaver_display_time
              screensaver_time_font: !input screensaver_display_time_font_size
              screensaver_time_color: !input screensaver_display_time_font_color
              decimal_separator: !input decimal_separator
            continue_on_error: true
          - repeat:
              for_each: '{{ pages.buttonpages }}'
              sequence:
              - *id001
              - service: esphome.{{ nspanel_name }}_command
                data:
                  cmd: "is_{{ repeat.item }}={{\n  1\n  if\n    buttons_pages.buttons\n
                    \   | selectattr(\"page\", \"defined\")\n    | selectattr(\"page\",
                    \"eq\", repeat.item)\n    | selectattr(\"entity\", \"defined\")\n
                    \   | rejectattr(\"entity\", \"eq\", [])\n    | list\n    | count
                    > 0\n  else 0\n}}\n"
                continue_on_error: true
          - repeat:
              for_each: '{{ pages.entitypages }}'
              sequence:
              - *id001
              - service: esphome.{{ nspanel_name }}_command
                data:
                  cmd: "is_{{ repeat.item }}={{\n  1\n  if\n    entities_pages.entities\n
                    \   | selectattr(\"page\", \"defined\")\n    | selectattr(\"page\",
                    \"eq\", repeat.item)\n    | selectattr(\"entity\", \"defined\")\n
                    \   | rejectattr(\"entity\", \"eq\", [])\n    | list\n    | count
                    > 0\n  else 0\n}}\n"
                continue_on_error: true
          - *id002
      - alias: NSPanel service call
        conditions:
        - '{{ nspanel_event.type == "service_call"}}'
        - '{{ nspanel_event.service is defined and nspanel_event.service is string
          and nspanel_event.service | length > 0 }}'
        - '{{ nspanel_event.service.split(".") | count == 2 }}'
        - '{{ nspanel_event.service.split(".")[0] | length > 0 and nspanel_event.service.split(".")[0]
          not in ["null", None] }}'
        - '{{ nspanel_event.service.split(".")[1] | length > 0 and nspanel_event.service.split(".")[1]
          not in ["null", None] }}'
        - '{{ nspanel_event.service | length > (2+nspanel_event.service.index("."))
          }}'
        - '{{ nspanel_event.service is not match "alarm_control_panel." }}'
        - '{{ nspanel_event.entity is defined and nspanel_event.entity is string and
          nspanel_event.entity | length > 0 }}'
        sequence:
        - if: '{{ nspanel_event.key is defined and nspanel_event.key is string and
            nspanel_event.key | length > 0 }}'
          then:
          - choose:
            - alias: climate.set_temperature
              conditions:
              - '{{ nspanel_event.service == "climate.set_temperature" }}'
              - '{{ nspanel_event.key in ["target_temp_high", "target_temp_low"] }}'
              sequence:
              - variables:
                  target_temp_low: "{{\n  nspanel_event.value\n  if nspanel_event.key
                    == \"target_temp_low\"\n  else state_attr(nspanel_event.entity,
                    \"target_temp_low\") | int(-999)\n}}\n"
                  target_temp_high: "{{\n  nspanel_event.value\n  if nspanel_event.key
                    == \"target_temp_high\"\n  else state_attr(nspanel_event.entity,
                    \"target_temp_high\") | int(-999)\n}}\n"
              - condition:
                - '{{ is_number(target_temp_low) and target_temp_low > -999 }}'
                - '{{ is_number(target_temp_high) and target_temp_high > -999 }}'
              - service: '{{ nspanel_event.service }}'
                data:
                  target_temp_low: '{{ target_temp_low }}'
                  target_temp_high: '{{ target_temp_high }}'
                target:
                  entity_id: '{{ nspanel_event.entity }}'
                continue_on_error: true
            - alias: fan.turn_on
              conditions:
              - '{{ nspanel_event.service == "fan.turn_on" }}'
              - '{{ nspanel_event.key == "percentage" }}'
              sequence:
              - service: fan.turn_on
                data: {}
                target:
                  entity_id: '{{ nspanel_event.entity }}'
                continue_on_error: true
              - delay:
                  milliseconds: 100
              - service: fan.set_percentage
                data:
                  percentage: '{{ nspanel_event.value }}'
                target:
                  entity_id: '{{ nspanel_event.entity }}'
                continue_on_error: true
            - alias: fan.oscillate
              conditions:
              - '{{ nspanel_event.service == "fan.oscillate" }}'
              - '{{ nspanel_event.key == "oscillating" }}'
              sequence:
              - variables:
                  oscillating: '{{ state_attr(nspanel_event.entity, "oscillating")
                    | default(true) }}'
              - service: fan.oscillate
                data:
                  oscillating: '{{ true if oscillating is boolean and not oscillating
                    else false }}'
                target:
                  entity_id: '{{ nspanel_event.entity }}'
                continue_on_error: true
            - alias: light.turn_on (rgb_color)
              conditions:
              - '{{ nspanel_event.service == "light.turn_on" }}'
              - '{{ nspanel_event.key == "rgb_color" }}'
              - '{{ nspanel_event.red is defined and nspanel_event.green is defined
                and nspanel_event.blue is defined }}'
              sequence:
              - service: light.turn_on
                data:
                  rgb_color: '{{ [nspanel_event.red, nspanel_event.green, nspanel_event.blue]
                    }}'
                target:
                  entity_id: '{{ nspanel_event.entity }}'
                continue_on_error: true
            default:
            - service: '{{ nspanel_event.service }}'
              data:
                '{{ nspanel_event.key }}': '{{ nspanel_event.value }}'
              target:
                entity_id: '{{ nspanel_event.entity }}'
              continue_on_error: true
          else:
          - service: '{{ nspanel_event.service }}'
            target:
              entity_id: '{{ nspanel_event.entity }}'
            continue_on_error: true
        - delay:
            milliseconds: '{{ media_player_update_delay }}'
        - service: homeassistant.update_entity
          data:
            entity_id: '{{ nspanel_event.entity }}'
          continue_on_error: true
      - alias: Page changed
        conditions:
        - '{{ nspanel_event.type == "page_changed"}}'
        sequence:
        - choose:
          - alias: Home page
            conditions: '{{ nspanel_event.page == pages.home }}'
            sequence: &id013
            - variables:
                page_constructor: true
            - *id001
            - &id035
              service: esphome.{{ nspanel_name }}_command
              data:
                cmd: home.weather.pic={{ nextion.pic.weather[ states(weather_entity)
                  | default("unavailable") if weather_entity is string and has_value(weather_entity)
                  else "unavailable"] | default(1) }}
              continue_on_error: true
            - &id033
              if: '{{ true }}'
              then:
              - variables:
                  outdoor_temp_entity: !input outdoortemp
                  outdoor_temp_state: "{{\n  states(outdoor_temp_entity, rounded=true)
                    | default(\"unavailable\")\n  if outdoor_temp_entity is string
                    and outdoor_temp_entity is match \"sensor.\" and has_value(outdoor_temp_entity)\n
                    \ else \"unavailable\"\n}}\n"
                  outdoor_temp: "{{\n  outdoor_temp_state if is_number(outdoor_temp_state)\n
                    \ else state_attr(weather_entity, \"temperature\") | default(\"unavailable\")\n
                    \ if weather_entity is string else \"unavailable\"\n}}\n"
              - condition: '{{ is_number(outdoor_temp) }}'
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: home.outdoor_temp
                  txt: '{{ outdoor_temp | round(1) ~ temperature_units }}'
                continue_on_error: true
            - &id034
              if: '{{ true }}'
              then:
              - variables:
                  home_indoor_temp_visible: !input home_indoor_temp_visible
              - if: '{{ page_constructor is defined and page_constructor }}'
                then:
                - *id001
                - service: esphome.{{ nspanel_name }}_components_visibility
                  data:
                    ids:
                    - home.indr_temp
                    - home.indr_temp_icon
                    visible: '{{ home_indoor_temp_visible }}'
                  continue_on_error: true
              - condition: '{{ home_indoor_temp_visible and not embedded_indoor_temperature
                  }}'
              - variables:
                  temperature_sensor: '{{ indoor_temperature_sensor }}'
                  indoor_temp:
                    state: '{{ states(temperature_sensor, rounded=true) | default("unavailable")
                      }}'
                    sensor_uom: '{{ state_attr(temperature_sensor, "unit_of_measurement")
                      }}'
                    nspaneltemp_uom: '{{ state_attr(nspaneltemp, "unit_of_measurement")
                      }}'
                    units: "{{\n  sensor_uom if sensor_uom is string and sensor_uom
                      | length > 0\n  else\n    (\n      nspaneltemp_uom if nspaneltemp_uom
                      is string and nspaneltemp_uom | length > 0\n      else temperature_units\n
                      \   )\n}}\n"
              - condition: '{{ is_number(indoor_temp.state) }}'
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: home.indr_temp
                  txt: '{{ indoor_temp.state | round(1) ~ indoor_temp.units if not
                    embedded_indoor_temperature else "" }}'
                continue_on_error: true
            - &id011
              if: '{{ true }}'
              then:
              - variables:
                  notification_icon_color_normal: !input home_button04_icon_color01
                  notification_icon_color_unread: !input home_button04_icon_color02
                  bt_notific_icon: !input home_button04_icon
                  notification_text: sensor.{{ nspanel_name }}_notification_text
                  notification_unread: switch.{{ nspanel_name }}_notification_unread
                  notification_text_state: '{{ states(notification_text) if has_value(notification_text)
                    else "" }}'
                  notification_unread_state: '{{ states(notification_unread) | default(true)
                    }}'
                  notification_visible: '{{ notification_text_state is string and
                    notification_text_state | length > 0 }}'
                  notification_icon: "{{\n  (\n    all_icons[bt_notific_icon.split(\":\")[1]]\n
                    \   if bt_notific_icon is string and bt_notific_icon.split(\":\")[1]
                    in all_icons\n    else all_icons.email\n  ) if notification_visible
                    else \"\"\n}}\n"
              - *id001
              - service: esphome.{{ nspanel_name }}_icon
                data:
                  id: home.bt_notific
                  icon: '{{ notification_icon }}'
                  icon_color: '{{ notification_icon_color_unread if notification_unread_state
                    else notification_icon_color_normal }}'
                  visible: '{{ notification_visible }}'
                continue_on_error: true
            - repeat:
                for_each: '{{ home_page.custom_buttons | list }}'
                sequence: &id031
                - variables:
                    custom_button_entity_id_is_valid: '{{ repeat.item.entity is defined
                      and repeat.item.entity is string and repeat.item.entity.split(".")
                      | count == 2 }}'
                    page_constructor: '{{ page_constructor is defined and page_constructor
                      }}'
                - condition: '{{ custom_button_entity_id_is_valid or page_constructor
                    }}'
                - *id001
                - if: '{{ custom_button_entity_id_is_valid }}'
                  then:
                  - variables:
                      entity_id: '{{ repeat.item.entity }}'
                      overlap:
                        icon: '{{ repeat.item.icon if repeat.item.icon is defined
                          else None }}'
                  - *id003
                  - service: esphome.{{ nspanel_name }}_icon
                    data:
                      id: home.{{ repeat.item.component }}
                      icon: '{{ entity.icon if entity.icon is defined else all_icons.blank
                        }}'
                      icon_color: '{{ entity.icon_color if entity.icon_color is defined
                        else [0, 0, 0] }}'
                      visible: true
                    continue_on_error: true
                  else:
                  - service: esphome.{{ nspanel_name }}_icon
                    data:
                      id: home.{{ repeat.item.component }}
                      icon: '{{ all_icons.blank }}'
                      icon_color: '{{ [0, 0, 0] }}'
                      visible: false
                    continue_on_error: true
            - &id027
              if: '{{ (not embedded_climate) and climate is string and climate is
                match "climate." }}'
              then:
              - variables:
                  entity_id: '{{ climate }}'
              - *id003
              - condition: '{{ entity_id_valid }}'
              - variables:
                  hvac_action: '{{ state_attr(entity_id, "hvac_action") }}'
                  climate_chip_always_visible: !input climate_chip_always_visible
              - *id001
              - service: esphome.{{ nspanel_name }}_icon
                data:
                  id: home.chip_climate
                  icon: '{{ entity.icon if entity.icon is defined else "" }}'
                  icon_color: '{{ entity.icon_color if entity.icon_color is defined
                    else [] }}'
                  visible: "{{\n  entity_has_value and\n  (\n    climate_chip_always_visible
                    or\n    entity_state in [\"heating\", \"cooling\", \"drying\",
                    \"fan_only\"] or\n    (\n      entity_state not in [\"idle\",
                    \"off\"] and\n      hvac_action in [\"heating\", \"cooling\",
                    \"drying\", \"fan_only\"]\n    )\n  )\n}}\n"
                continue_on_error: true
            - repeat:
                for_each: "{{\n  home_page.chips\n  | selectattr(\"entity\", \"defined\")\n
                  \ | rejectattr(\"entity\", \"eq\", [])\n  | list\n}}\n"
                sequence:
                - &id032
                  if: '{{ repeat.item.entity is defined and repeat.item.entity is
                    string and repeat.item.entity.split(".") | count == 2 }}'
                  then:
                  - *id001
                  - variables:
                      entity_id: '{{ repeat.item.entity }}'
                      overlap:
                        icon: '{{ repeat.item.icon if repeat.item.icon is defined
                          else None }}'
                        icon_color: "{{\n  repeat.item.icon_color_rgb\n  if\n    repeat.item.icon_color_rgb
                          is defined and\n    repeat.item.icon_color_rgb is sequence
                          and\n    repeat.item.icon_color_rgb | count == 3 and\n    repeat.item.icon_color_rgb
                          != [0, 0, 0]\n  else None\n}}\n"
                  - *id003
                  - condition: '{{ entity_has_value }}'
                  - variables:
                      entity_hvac_action: '{{ state_attr(entity_id, "hvac_action")
                        | default("") if entity_domain == "climate" else "unknown"
                        }}'
                      entity_state: "{{\n  (entity_hvac_action if entity_hvac_action
                        and entity_hvac_action not in enum.states.unknown else entity_state)\n
                        \ if entity_domain == \"climate\" else entity_state\n}}\n"
                      chip_visible: "{{\n  (\n    (not repeat.item.inverted) and\n
                        \   (\n      (entity_state in enum.states.on) or\n      (entity_domain
                        != \"climate\" and entity_domain in enum.states and entity_state
                        in enum.states[entity_domain].on) or\n      (entity_domain
                        == \"climate\" and entity_state in [\"heating\", \"cooling\",
                        \"drying\", \"fan_only\"])\n    )\n  ) or\n  (\n    (repeat.item.inverted)
                        and\n    (\n      (entity_state in enum.states.off) or\n      (entity_domain
                        in enum.states and entity_state in enum.states[entity_domain].off)
                        or\n      (entity_domain == \"climate\" and entity_state not
                        in [\"heating\", \"cooling\", \"drying\", \"fan_only\"])\n
                        \   )\n  )\n}}\n"
                  - *id001
                  - service: esphome.{{ nspanel_name }}_icon
                    data:
                      id: home.{{ repeat.item.component }}
                      icon: '{{ entity.icon if chip_visible and entity.icon is defined
                        else "" }}'
                      icon_color: "{{\n  entity.icon_color\n  if\n    chip_visible
                        and\n    entity.icon_color is defined and\n    icon_color
                        is not sequence\n  else []\n}}\n"
                      visible: '{{ chip_visible }}'
                    continue_on_error: true
            - repeat:
                for_each: "{{\n  home_page.entity_value\n  | selectattr(\"entity\",
                  \"defined\")\n  | rejectattr(\"entity\", \"eq\", [])\n  | list\n}}\n"
                sequence:
                - &id004
                  if: "{{\n  repeat.item.entity is defined and\n  repeat.item.entity
                    is string and\n  has_value(repeat.item.entity)\n}}\n"
                  then:
                  - *id001
                  - variables:
                      entity_id: '{{ repeat.item.entity }}'
                      overlap:
                        icon: '{{ repeat.item.icon if repeat.item.icon is defined
                          else None }}'
                        icon_color: "{{\n  repeat.item.icon_color_rgb\n  if\n    repeat.item.icon_color_rgb
                          is defined and\n    repeat.item.icon_color_rgb is sequence
                          and\n    repeat.item.icon_color_rgb != [200, 204, 200]\n
                          \ else None\n}}\n"
                  - *id003
                  - if: '{{ entity_has_value }}'
                    then:
                    - variables:
                        unit_of_measurement_raw: '{{ state_attr(entity_id, "unit_of_measurement")
                          | default("") }}'
                        unit_of_measurement: "{{\n  unit_of_measurement_raw\n  if
                          unit_of_measurement_raw and unit_of_measurement_raw is string
                          and unit_of_measurement_raw | length > 0\n  else \"\"\n}}\n"
                    - if: '{{ overlap.icon is not string }}'
                      then:
                      - *id001
                      - service: esphome.{{ nspanel_name }}_component_text
                        data:
                          id: '{{ repeat.item.page }}.{{ repeat.item.component }}_icon'
                          txt: '{{ entity.icon }}'
                        continue_on_error: true
                    - if: '{{ overlap.icon_color is not sequence }}'
                      then:
                      - *id001
                      - service: esphome.{{ nspanel_name }}_component_color
                        data:
                          id: '{{ repeat.item.page }}.{{ repeat.item.component }}_icon'
                          color: '{{ entity.icon_color }}'
                        continue_on_error: true
                    - *id001
                    - service: esphome.{{ nspanel_name }}_component_text
                      data:
                        id: '{{ repeat.item.page }}.{{ repeat.item.component }}'
                        txt: "{{\n  (\n    (states(entity_id, rounded=true) ~ (unit_of_measurement
                          if unit_of_measurement is string and unit_of_measurement
                          | length > 0 else \"\"))\n    if is_number(entity_state)\n
                          \   else state_translated(entity_id)\n  )\n  if entity_id_valid
                          and entity_has_value\n  else mui[language].unavailable\n}}\n"
                      continue_on_error: true
          - alias: Button pages
            conditions: '{{ nspanel_event.page in pages.buttonpages }}'
            sequence: &id014
            - &id007
              variables:
                event_page: '{{ nspanel_event.page if nspanel_event is defined and
                  nspanel_event.page is defined else pages.current }}'
                button_pages_icon_size: !input button_pages_icon_size
                confirm_list: "{{\n  buttons_pages.buttons\n  | selectattr(\"page\",
                  \"defined\")\n  | selectattr(\"page\", \"eq\", event_page)\n  |
                  sort(attribute=\"component\")\n  | map(attribute=\"confirm\")\n
                  \ | list\n}}\n"
                confirm_value: "{% set ns = namespace(decimal_value = 0, index = 0)
                  %} {% for confirm_item in confirm_list %}\n    {% if (confirm_item)
                  %}\n        {% set ns.decimal_value = ns.decimal_value + (2 ** ns.index)
                  %}\n    {% endif %}\n    {% set ns.index = ns.index + 1 %}\n{% endfor
                  %} {{ ns.decimal_value }}\n"
            - if: '{{ event_page in pages.buttonpages }}'
              then:
              - if: "{{\n  buttons_pages.labels[event_page] != None and\n  buttons_pages.labels[event_page]
                  != [] and\n  (buttons_pages.labels[event_page] | string) | length
                  > 0\n}}\n"
                then:
                - *id001
                - service: esphome.{{ nspanel_name }}_component_text
                  data:
                    id: page_label
                    txt: '{{ buttons_pages.labels[event_page] | string }}'
                  continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_component_val
                data:
                  id: confirm
                  val: '{{ confirm_value }}'
                continue_on_error: true
              - repeat:
                  for_each: "{{\n  buttons_pages.buttons\n  | selectattr(\"page\",
                    \"defined\")\n  | selectattr(\"page\", \"eq\", event_page)\n  |
                    selectattr(\"entity\", \"defined\")\n  | rejectattr(\"entity\",
                    \"eq\", [])\n  | list\n}}\n"
                  sequence: &id016
                  - condition: '{{ repeat.item.entity is defined and repeat.item.entity
                      is string and repeat.item.entity | length > 0 }}'
                  - *id001
                  - variables:
                      entity_id: '{{ repeat.item.entity }}'
                      overlap:
                        icon: '{{ repeat.item.icon if repeat.item.icon is defined
                          else None }}'
                        icon_color: '{{ repeat.item.icon_color_rgb if repeat.item.icon_color_rgb
                          is defined else None }}'
                        name: '{{ repeat.item.name if repeat.item.name is defined
                          else None }}'
                  - *id003
                  - variables:
                      current_entity_state_available: '{{ entity_state not in ["unavailable"]
                        }}'
                      btn_state: "{{\n  (entity_state in enum.states.on and entity_domain
                        not in [\"automation\"])\n  or (entity_domain == \"climate\"
                        and entity_state != \"off\")\n  or (entity_domain in [\"button\",
                        \"input_button\", \"scene\", \"automation\", \"remote\"] and
                        trigger.id is match \"current_state_entity\")\n}}\n"
                      btn_bri_txt: "{% if not has_value(entity_id) %} 0 {% elif entity_domain
                        == \"light\" and entity_state == \"on\" %}\n  {% set entity_brightness
                        = state_attr(entity_id, \"brightness\") %}\n  {% set entity_brightness_index
                        = entity_brightness/255 if entity_brightness and is_number(entity_brightness)
                        else 0 %}\n  {{ (entity_brightness_index*100) | round(0) }}%\n{%
                        elif entity_domain == \"fan\" and entity_state == \"on\" and
                        state_attr(entity_id, \"percentage\") | int(0) > 0 %}\n  {{
                        state_attr(entity_id, \"percentage\") | round(0, default=0)
                        }}%\n{% elif entity_domain == \"cover\" and entity_state in
                        [\"open\", \"opening\", \"closing\"] and is_number(state_attr(entity_id,
                        \"current_position\")) %}\n  {{ (state_attr(entity_id, \"current_position\")
                        | int(100)) | round(0) }}%\n{% elif entity_domain == \"climate\"
                        and is_number(state_attr(entity_id, 'current_temperature'))
                        %}\n  {% set current_temperature = state_attr(entity_id, 'current_temperature')
                        | float %}\n  {{ current_temperature | round(0 if current_temperature
                        >= 100 or temperature_units in [\"F\", \"f\", \"°F\", \"°f\",
                        \"K\", \"k\"] else 1) }}{{ temperature_units}}\n{% else %}
                        0 {% endif %}\n"
                  - *id001
                  - service: esphome.{{ nspanel_name }}_button
                    data:
                      page: '{{ repeat.item.page }}'
                      id: '{{ repeat.item.component }}'
                      state: '{{ btn_state if btn_state else false }}'
                      icon: '{{ entity.icon }}'
                      icon_color: '{{ entity.icon_color }}'
                      icon_font: '{{ button_pages_icon_size if is_number(button_pages_icon_size)
                        else 8 }}'
                      bri: '{{ btn_bri_txt if btn_bri_txt and btn_bri_txt != "0%"
                        else "" }}'
                      label: '{{ entity.name }}'
                    continue_on_error: true
                  - if:
                    - '{{ entity_domain in ["automation", "button", "input_button",
                      "remote", "scene"] }}'
                    - '{{ trigger.id is match "current_state_entity" }}'
                    then:
                    - delay:
                        milliseconds: 800
                    - service: esphome.{{ nspanel_name }}_button
                      data:
                        page: '{{ repeat.item.page }}'
                        id: '{{ repeat.item.component }}'
                        state: false
                        icon: '{{ entity.icon }}'
                        icon_color: '{{ nextion.color.grey_light }}'
                        icon_font: '{{ button_pages_icon_size if is_number(button_pages_icon_size)
                          else 8 }}'
                        bri: '{{ btn_bri_txt }}'
                        label: '{{ entity.name }}'
                      continue_on_error: true
          - alias: Light settings page
            conditions: '{{ nspanel_event.page == pages.light }}'
            sequence: &id017
            - variables:
                light_entity: "{{\n  nspanel_event.entity\n  if nspanel_event is defined
                  and nspanel_event.entity is defined\n  else (trigger.entity_id if
                  trigger.entity_id is defined else trigger.event.data.entity_id)\n}}\n"
                supported_color_modes: '{{ state_attr(light_entity, "supported_color_modes")
                  | default("unknown") }}'
                color_mode_color: "{{\n  \"hs\" in supported_color_modes\n  or \"xy\"
                  in supported_color_modes\n  or \"rgb\" in supported_color_modes\n
                  \ or \"rgbw\" in supported_color_modes\n  or \"rgbww\" in supported_color_modes\n}}\n"
                color_mode_color_temp: '{{ "color_temp" in supported_color_modes }}'
            - variables:
                curr_brightness: '{{ (state_attr(light_entity, "brightness") | int(0)
                  * 100 / 255) | round(0) }}'
            - *id001
            - service: esphome.{{ nspanel_name }}_component_val
              data:
                id: light.lightslider
                val: '{{ curr_brightness }}'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: light.light_value
                txt: '{{ curr_brightness }}%'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: light.light_value_2
                txt: '{{ curr_brightness }}%'
              continue_on_error: true
            - if: '{{ color_mode_color_temp }}'
              then:
              - variables:
                  curr_color_temp: '{{ state_attr(light_entity, "color_temp") | int(-1)
                    }}'
                  min_mireds: '{{ state_attr(light_entity, "min_mireds") | int(153)
                    }}'
                  max_mireds: '{{ state_attr(light_entity, "max_mireds") | int(500)
                    }}'
              - variables:
                  curr_color_temp: "{{\n  curr_color_temp\n  if curr_color_temp >=
                    min_mireds and curr_color_temp <= max_mireds\n  else ((min_mireds+max_mireds)/2)
                    | int(327)\n}}\n"
              - condition: '{{ is_number(curr_color_temp) }}'
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: light.temp_value
                  txt: '{{ curr_color_temp }}'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: light.temp_value_2
                  txt: '{{ curr_color_temp }}'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_component_val
                data:
                  id: light.tempslider
                  val: '{{ curr_color_temp }}'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_command
                data:
                  cmd: tempslider.minval={{ min_mireds }}
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_command
                data:
                  cmd: tempslider.maxval={{ max_mireds }}
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_component_color
                data:
                  id: power_button
                  color:
                  - 192
                  - 192
                  - 192
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_components_visibility
                data:
                  ids:
                  - temp_button
                  - temp_value_2
                  - temp_touch
                  visible: true
                continue_on_error: true
            - if: '{{ color_mode_color }}'
              then:
              - *id001
              - service: esphome.{{ nspanel_name }}_components_visibility
                data:
                  ids:
                  - color_button
                  - color_touch
                  visible: true
                continue_on_error: true
          - alias: Cover settings page
            conditions: '{{ nspanel_event.page == pages.cover }}'
            sequence: &id018
            - variables:
                cover_entity: "{{\n  nspanel_event.entity\n  if nspanel_event is defined
                  and nspanel_event.entity is defined\n  else (trigger.entity_id if
                  trigger.entity_id is defined else trigger.event.data.entity_id)\n}}\n"
                entity_device_class: '{{ state_attr(cover_entity, "device_class")
                  | default("") }}'
                cover_icons:
                  open: "{{\n  all_icons[device_class_icons.cover[entity_device_class
                    + \"-open\"]]\n  if\n    entity_device_class is defined and\n
                    \   entity_device_class is string and\n    entity_device_class
                    | length > 0 and\n    (entity_device_class ~ \"-open\") in device_class_icons.cover
                    and\n    device_class_icons.cover[entity_device_class ~ \"-open\"]
                    in all_icons\n  else all_icons[device_class_icons.cover[\"shutter-open\"]]\n}}\n"
                  close: "{{\n  all_icons[device_class_icons.cover[entity_device_class
                    + \"-closed\"]]\n  if\n    entity_device_class is defined and\n
                    \   entity_device_class is string and\n    entity_device_class
                    | length > 0 and\n    (entity_device_class ~ \"-closed\") in device_class_icons.cover
                    and\n    device_class_icons.cover[entity_device_class ~ \"-closed\"]
                    in all_icons\n  else all_icons[device_class_icons.cover[\"shutter-closed\"]]\n}}\n"
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: cover.cover_open
                txt: '{{ cover_icons.open }}'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: cover.cover_close
                txt: '{{ cover_icons.close }}'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_val
              data:
                id: cover.coverslider
                val: '{{ (state_attr(cover_entity, "current_position") | int ) | round(0)
                  }}'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: cover.cover_value
                txt: '{{ (state_attr(cover_entity, "current_position") | int ) | round(0)
                  }} %'
              continue_on_error: true
            - variables:
                battery_attribute: '{{ state_attr(cover_entity, "battery") | default("unavailable")
                  }}'
                battery_level: "{% if battery_attribute and battery_attribute not
                  in enum.states.unknown %}\n  {{ battery_attribute }}\n{% elif expand(device_entities(device_id(cover_entity)))\n
                  \       | selectattr(\"attributes.device_class\", \"defined\")\n
                  \       | selectattr(\"attributes.device_class\", \"eq\", \"battery\")\n
                  \       | map(attribute=\"state\")\n        | map(\"float\")\n        |
                  list\n        | count > 0 %}\n  {{\n    expand(device_entities(device_id(cover_entity)))\n
                  \   | selectattr(\"attributes.device_class\", \"defined\")\n    |
                  selectattr(\"attributes.device_class\", \"eq\", \"battery\")\n    |
                  map(attribute=\"state\") | map(\"float\")\n    | list\n    | first\n
                  \   | round(0)\n  }}\n{% elif has_value(cover_entity | replace(\"cover.\",\"sensor.\")
                  ~ \"_battery\") %}\n  {{ states(cover_entity | replace(\"cover.\",\"sensor.\")
                  ~ \"_battery\", rounded=true) | default(\"unavailable\") }}\n{%
                  elif has_value(cover_entity | replace(\"cover.\",\"sensor.\") |
                  replace(\"cover\", \"battery\")) %}\n  {{ states(cover_entity |
                  replace(\"cover.\",\"sensor.\") | replace(\"cover\", \"battery\"),
                  rounded=true) | default(\"unavailable\") }}\n{% else %} unavailable
                  {% endif %}\n"
            - if: '{{ is_number(battery_level) }}'
              then:
              - variables:
                  battery_icon: "{% if battery_level >= 80 %}\n  battery-high\n{%
                    elif battery_level >= 40 %}\n  battery-medium\n{% elif battery_level
                    >= 15 %}\n  battery-low\n{% else %}\n  battery-outline\n{% endif
                    %}\n"
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: cover.battery_value
                  txt: '{{ battery_level }} %'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_component_color
                data:
                  id: cover.battery_icon
                  color: '{{ nextion.color.grey_super_light }}'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: cover.battery_icon
                  txt: '{{ all_icons[battery_icon] }}'
                continue_on_error: true
          - alias: Fan settings page
            conditions: '{{ nspanel_event.page == pages.fan }}'
            sequence: &id020
            - variables:
                fan_entity: "{{\n  nspanel_event.entity\n  if nspanel_event is defined
                  and nspanel_event.entity is defined\n  else (trigger.entity_id if
                  trigger.entity_id is defined else trigger.event.data.entity_id)\n}}\n"
                fan:
                  supported_features: '{{ state_attr(fan_entity, "supported_features")
                    | int(0) }}'
                  percentage: "{{\n  state_attr(fan_entity, \"percentage\") | int(0)\n
                    \ if is_state(fan_entity, 'on')\n  else 0\n}}\n"
                  steps: "{% set percentage_step = state_attr(fan_entity, \"percentage_step\")
                    | float(0) %} {{\n  (100/percentage_step) | round(0) | int(0)\n
                    \ if percentage_step > 0\n  else 0\n}}\n"
            - if: '{{ fan.steps > 0 and fan.supported_features | bitwise_and(2) >
                0 }}'
              then:
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: bt_oscillate
                  txt: '{{ all_icons["autorenew"] if state_attr(fan_entity, "oscillating")
                    | default(false) else all_icons["autorenew-off"] }}'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_component_color
                data:
                  id: fan.bt_oscillate
                  color: '{{ nextion.color.grey_white }}'
                continue_on_error: true
              - *id001
              - service: esphome.{{ nspanel_name }}_components_visibility
                data:
                  ids:
                  - fan.bt_oscillate
                  visible: true
                continue_on_error: true
            - condition: '{{ fan.steps > 0 and fan.supported_features | bitwise_and(1)
                > 0 }}'
            - *id001
            - service: esphome.{{ nspanel_name }}_component_val
              data:
                id: fanslider
                val: '{{ ((fan.percentage / 100) * fan.steps) | round(0) | int(0)
                  }}'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_command
              data:
                cmd: fanslider.maxval={{ fan.steps }}
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: fan_value
                txt: '{{ fan.percentage }}%'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_color
              data:
                id: fan.button_up
                color: '{{ nextion.color.grey_white if fan.percentage < 100 else nextion.color.grey_dark
                  }}'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_color
              data:
                id: fan.button_down
                color: '{{ nextion.color.grey_white if fan.percentage > 0 else nextion.color.grey_dark
                  }}'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_color
              data:
                id: fan.button_off
                color: '{{ nextion.color.grey_white if fan.percentage > 0 else nextion.color.grey_dark
                  }}'
              continue_on_error: true
          - alias: Media player settings page
            conditions: '{{ nspanel_event.page == pages.media_player }}'
            sequence: &id021
            - variables:
                media_player_entity: "{{\n  nspanel_event.entity\n  if nspanel_event
                  is defined and nspanel_event.entity is defined\n  else (trigger.entity_id
                  if trigger.entity_id is defined else trigger.event.data.entity_id)\n}}\n"
                wait_completed: false
            - alias: Refresh page in a loop
              repeat:
                sequence:
                - service: homeassistant.update_entity
                  data:
                    entity_id: '{{ nspanel_event.entity }}'
                  continue_on_error: true
                - delay:
                    milliseconds: '{{ media_player_update_delay }}'
                - variables:
                    media_player:
                      state: '{{ states(media_player_entity) }}'
                      is_volume_muted: '{{ state_attr(media_player_entity, "is_volume_muted")
                        | default(false) }}'
                      friendly_name: '{{ state_attr(media_player_entity, "friendly_name")
                        | default("Media player") }}'
                      volume_level: '{{ (state_attr(media_player_entity, "volume_level")
                        | round(2, default=0) * 100) | int(0) }}'
                      media_title: '{{ state_attr(media_player_entity, "media_title")
                        }}'
                      media_artist: '{{ state_attr(media_player_entity, "media_artist")
                        }}'
                      media_duration: '{{ state_attr(media_player_entity, "media_duration")
                        | int(0) }}'
                      media_position: '{{ state_attr(media_player_entity, "media_position")
                        | int(0) }}'
                      media_position_updated_at: '{{ state_attr(media_player_entity,
                        "media_position_updated_at") | default(now()) }}'
                      supported_features: "{{\n  (1+4+8+16+32+128+256+512+4096+16384)\n
                        \ if (state_attr(media_player_entity, \"mass_player_type\")
                        | default(\"\")) == \"group\"\n  else state_attr(media_player_entity,
                        \"supported_features\") | int(0)\n}}\n"
                - *id001
                - service: esphome.{{ nspanel_name }}_page_media_player
                  data:
                    entity: '{{ media_player_entity }}'
                    state: '{{ media_player.state if media_player.state is string
                      else "" }}'
                    is_volume_muted: '{{ media_player.is_volume_muted if media_player.is_volume_muted
                      is boolean else false }}'
                    friendly_name: '{{ media_player.friendly_name if media_player.friendly_name
                      is string else "" }}'
                    volume_level: '{{ media_player.volume_level }}'
                    media_title: "{{\n  media_player.media_title\n  if\n    media_player.media_title
                      is defined and\n    media_player.media_title is string and\n
                      \   media_player.media_title | length > 0 and\n    media_player.media_title
                      not in enum.states.unknown\n  else \"\"\n}}\n"
                    media_artist: "{{\n  media_player.media_artist\n  if\n    media_player.media_artist
                      is defined and\n    media_player.media_artist is string and\n
                      \   media_player.media_artist | length > 0 and\n    media_player.media_artist
                      not in enum.states.unknown\n  else \"\"\n}}\n"
                    media_duration: '{{ media_player.media_duration }}'
                    media_position: '{{ media_player.media_position }}'
                    media_position_delta: "{{\n  (now() | as_timestamp - media_player.media_position_updated_at
                      | as_timestamp | default(now() | as_timestamp))\n  if\n    media_player.media_position_updated_at
                      and\n    media_player.media_position_updated_at not in [None,
                      none, \"\", \"unknown\", \"unavailable\", false, 0]\n  else
                      0\n}}\n"
                    supported_features: '{{ media_player.supported_features }}'
                  continue_on_error: true
                - wait_template: '{{ states(currentpage) != pages.media_player }}'
                  timeout:
                    milliseconds: '{{ media_player_update_interval }}'
                  continue_on_timeout: true
                - variables:
                    wait_completed: '{{ wait.completed }}'
                until:
                - or:
                  - '{{ wait_completed }}'
                  - '{{ states(currentpage) != pages.media_player }}'
                  - '{{ nspanel_event.type != "page_changed" }}'
          - alias: Alarm settings page
            conditions: '{{ nspanel_event.page == pages.alarm }}'
            sequence: &id022
            - variables:
                alarm_entity_temp: "{{\n  nspanel_event.entity\n  if nspanel_event
                  is defined and nspanel_event.entity is defined\n  else (trigger.entity_id
                  if trigger.entity_id is defined else trigger.event.data.entity_id)\n}}\n"
                alarm_entity: "{{\n  alarm_entity_temp\n  if alarm_entity_temp is
                  string and alarm_entity_temp | length > 0\n  else None\n}}\n"
            - if: '{{ alarm_entity is string and alarm_entity is match "alarm_control_panel."
                }}'
              then:
              - variables:
                  entity_id: '{{ alarm_entity }}'
                  supported_features: '{{ state_attr(entity_id, "supported_features")
                    | default(0) }}'
              - *id003
              - condition: '{{ supported_features > 0 }}'
              - variables:
                  alarm:
                    code_format: '{{ state_attr(entity_id, "code_format") }}'
                    code_arm_required: '{{ state_attr(entity_id, "code_arm_required")
                      | default(true) }}'
              - *id001
              - service: esphome.{{ nspanel_name }}_page_alarm
                data:
                  page_title: '{{ entity.name }}'
                  state: '{{ entity_state }}'
                  supported_features: '{{ supported_features }}'
                  code_format: '{{ alarm.code_format if alarm.code_format else "none"
                    }}'
                  code_arm_required: '{{ alarm.code_arm_required if alarm.code_arm_required
                    else false }}'
                  entity: '{{ entity_id }}'
                  mui_alarm: '{{ dict.values(mui[language].alarm) | list }}'
                continue_on_error: true
          - alias: Climate page
            conditions: '{{ nspanel_event.page == pages.climate }}'
            sequence: &id019
            - variables:
                climate_entity_temp: "{{\n  nspanel_event.entity\n  if nspanel_event
                  is defined and nspanel_event.entity is defined\n  else (trigger.entity_id
                  if trigger.entity_id is defined else trigger.event.data.entity_id)\n}}\n"
                climate_entity: "{{\n  climate_entity_temp\n  if climate_entity_temp
                  is string and climate_entity_temp | length > 0 and climate_entity_temp
                  != \"embedded_climate\"\n  else climate\n}}\n"
                settings_entity_domain: "{{\n  climate_entity.split(\".\")[0]\n  if\n
                  \   climate_entity is defined and\n    climate_entity is string
                  and\n    climate_entity.split(\".\") | count > 0\n  else \"unknown\"\n}}\n"
                hvac_modes: '{{ state_attr(climate_entity, "hvac_modes") if settings_entity_domain
                  == "climate" }}'
            - condition: '{{ settings_entity_domain == "climate" }}'
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: page_label
                txt: '{{ state_attr(climate_entity, "friendly_name") }}'
              continue_on_error: true
            - &id025
              variables:
                climate_page_entities:
                - entity: !input climate_value01
                  icon: !input climate_value01_icon
                  icon_color_rgb: !input climate_value01_icon_color
                  label_color_rgb: !input climate_value01_label_color
                  page: climate
                  component: value01
                - entity: !input climate_value02
                  icon: !input climate_value02_icon
                  icon_color_rgb: !input climate_value02_icon_color
                  label_color_rgb: !input climate_value02_label_color
                  page: climate
                  component: value02
                - entity: !input climate_value03
                  icon: !input climate_value03_icon
                  icon_color_rgb: !input climate_value03_icon_color
                  label_color_rgb: !input climate_value03_label_color
                  page: climate
                  component: value03
                - entity: !input climate_value04
                  icon: !input climate_value04_icon
                  icon_color_rgb: !input climate_value04_icon_color
                  label_color_rgb: !input climate_value04_label_color
                  page: climate
                  component: value04
            - repeat:
                for_each: "{{\n  climate_page_entities\n  | selectattr(\"entity\",
                  \"defined\")\n  | rejectattr(\"entity\", \"eq\", [])\n  | list\n}}\n"
                sequence: *id004
            - &id028
              if: '{{ not (climate_entity == climate and embedded_climate) }}'
              then:
              - variables:
                  current_temp: '{{ state_attr(climate_entity, "current_temperature")
                    | float(-999) | round(1) }}'
                  supported_features: '{{ state_attr(climate_entity, "supported_features")
                    | int(0) }}'
                  is_target_temperature: '{{ supported_features | bitwise_and(1) >
                    0 }}'
                  is_target_temperature_range: '{{ supported_features | bitwise_and(2)
                    > 0 }}'
                  target_temp: '{{ state_attr(climate_entity, "temperature") | float(-999)
                    | round(1) if is_target_temperature else -999 }}'
                  target_temp_high: '{{ state_attr(climate_entity, "target_temp_high")
                    | float(-999) | round(1) if is_target_temperature_range else -999
                    }}'
                  target_temp_low: '{{ state_attr(climate_entity, "target_temp_low")
                    | float(-999) | round(1) if is_target_temperature_range else -999
                    }}'
              - variables:
                  is_target_temperature: '{{ is_target_temperature and target_temp
                    > -999 }}'
                  is_target_temperature_range: '{{ is_target_temperature_range and
                    target_temp_high > -999 and target_temp_low > -999 }}'
                  temp_step: "{% set target_temp_step = state_attr(climate_entity,
                    \"target_temp_step\") %} {% if not is_number(target_temp_step)
                    %}\n  {% set target_temp_step = state_attr(climate_entity, \"target_temperature_step\")
                    %}\n{% endif %} {% set target_temp_step = target_temp_step | float(0.5)
                    | abs %} {{ ((10 * target_temp_step) | round(0) | int) if is_number(target_temp_step)
                    and target_temp_step > 0 else 10 }}\n"
                  temp_offset_raw: '{{ (state_attr(climate_entity, "min_temp") | float(7)
                    * 10) | round(0) | int }}'
                  temp_offset: '{{ temp_offset_raw if (temp_offset_raw % temp_step)
                    == 0 else temp_offset_raw + temp_step - (temp_offset_raw % temp_step)
                    }}'
                  max_temp_raw: '{{ (state_attr(climate_entity, "max_temp") | float(35)
                    * 10) | round(0) | int }}'
                  max_temp: '{{ (max_temp_raw / temp_step) | round * temp_step }}'
                  total_steps: '{{ ((max_temp-temp_offset)/temp_step) | round(0) |
                    int }}'
                  climate_state: '{{ states(climate_entity) | default("unavailable")
                    if climate_entity is string else "unavailable" }}'
                  hvac_action: '{{ state_attr(climate_entity, "hvac_action") | default("")
                    }}'
                  hvac_modes: '{{ state_attr(climate_entity, "hvac_modes") }}'
                  climate_action: '{{ hvac_action if hvac_action and hvac_action not
                    in enum.states.unknown else climate_state }}'
                  climate_icon: '{% if "off" in climate_action %}{{ all_icons.blank
                    }} {% elif "heat_cool" in climate_action %}{{ all_icons.autorenew
                    }} {% elif "heating" in climate_action or "heat" in climate_action
                    %}{{ all_icons["thermometer-lines"] }} {% elif "cooling" in climate_action
                    or "cool" in climate_action %}{{ all_icons.snowflake }} {% elif
                    "drying" in climate_action or "dry" in climate_action %}{{ all_icons["water-percent"]
                    }} {% elif "fan" in climate_action or "fan_only" in climate_action
                    %}{{ all_icons.fan }} {% elif "auto" in climate_action %}{{ all_icons["calendar-sync"]
                    }} {% elif "idle" in climate_action %}{{ all_icons.thermometer
                    }} {% else %}{{ all_icons.blank }} {% endif %}

                    '
              - *id001
              - service: esphome.{{ nspanel_name }}_page_climate
                data:
                  current_temp: '{{ current_temp }}'
                  supported_features: '{{ supported_features }}'
                  target_temp: '{{ target_temp }}'
                  target_temp_high: '{{ target_temp_high }}'
                  target_temp_low: '{{ target_temp_low }}'
                  temp_step: '{{ temp_step }}'
                  total_steps: '{{ total_steps }}'
                  temp_offset: '{{ temp_offset }}'
                  climate_icon: '{{ climate_icon }}'
                  embedded_climate: '{{ climate_entity == thermostat_embedded }}'
                  entity: '{{ "embedded_climate" if climate_entity == thermostat_embedded
                    else climate_entity }}'
                continue_on_error: true
            - &id029
              if: '{{ not (climate_entity == climate and embedded_climate) }}'
              then:
              - repeat:
                  for_each: '{{ page_climate.buttons.hvac_mode }}'
                  sequence:
                  - condition: '{{ repeat.item.mode in hvac_modes }}'
                  - *id001
                  - *id001
                  - service: esphome.{{ nspanel_name }}_component_color
                    data:
                      id: climate.{{ repeat.item.component }}
                      color: "{{\n  nextion.color[repeat.item.color]\n  if states(climate_entity)
                        == repeat.item.mode\n  else nextion.color.disabled\n}}\n"
                    continue_on_error: true
                  - *id001
                  - service: esphome.{{ nspanel_name }}_component_text
                    data:
                      id: climate.{{ repeat.item.component }}
                      txt: '{{ all_icons[repeat.item.icon] }}'
                    continue_on_error: true
                  - *id001
                  - service: esphome.{{ nspanel_name }}_components_visibility
                    data:
                      ids: '{{ [ repeat.item.component ] }}'
                      visible: true
                    continue_on_error: true
            - &id026
              if: '{{ true }}'
              then:
              - &id010
                variables:
                  climate_custom_buttons:
                  - entity: !input climate_button08
                    icon: !input climate_button08_icon
                    icon_color_rgb: !input climate_button08_icon_color
                    component: button08
                  - entity: !input climate_button09
                    icon: !input climate_button09_icon
                    icon_color_rgb: !input climate_button09_icon_color
                    component: button09
              - repeat:
                  for_each: '{{ climate_custom_buttons | selectattr("entity", "defined")
                    | rejectattr("entity", "eq", []) | list }}'
                  sequence:
                  - condition: '{{ repeat.item.entity is defined and repeat.item.entity
                      is string and repeat.item.entity | length > 0 }}'
                  - variables:
                      entity_id: '{{ repeat.item.entity }}'
                      overlap:
                        icon: '{{ repeat.item.icon }}'
                        icon_color: '{{ repeat.item.icon_color_rgb }}'
                  - *id003
                  - *id001
                  - service: esphome.{{ nspanel_name }}_component_color
                    data:
                      id: '{{ repeat.item.component }}'
                      color: '{{ entity.icon_color }}'
                    continue_on_error: true
                  - *id001
                  - service: esphome.{{ nspanel_name }}_component_text
                    data:
                      id: '{{ repeat.item.component }}'
                      txt: '{{ entity.icon }}'
                    continue_on_error: true
                  - *id001
                  - service: esphome.{{ nspanel_name }}_components_visibility
                    data:
                      ids: '{{ [ repeat.item.component ] }}'
                      visible: true
                    continue_on_error: true
          - alias: Entity pages
            conditions: '{{ nspanel_event.page in pages.entitypages }}'
            sequence: &id015
            - &id023
              variables:
                event_page: '{{ nspanel_event.page if nspanel_event is defined and
                  nspanel_event.page is defined else pages.current }}'
                entitypages_show_entities_icons: !input entitypages_show_entities_icons
            - if: '{{ entities_pages.labels[event_page] | length > 0 }}'
              then:
              - *id001
              - service: esphome.{{ nspanel_name }}_component_text
                data:
                  id: page_label
                  txt: '{{ entities_pages.labels[event_page] }}'
                continue_on_error: true
            - repeat:
                for_each: "{{\n  entities_pages.entities\n  | selectattr(\"page\",
                  \"defined\")\n  | selectattr(\"page\", \"eq\", event_page)\n  |
                  selectattr(\"entity\", \"defined\")\n  | rejectattr(\"entity\",
                  \"eq\", [])\n  | list\n}}\n"
                sequence: &id024
                - condition: '{{ repeat.item.entity is string and repeat.item.entity
                    | length > 0 }}'
                - *id001
                - variables:
                    entity_id: '{{ repeat.item.entity }}'
                    overlap:
                      icon: '{{ repeat.item.icon if repeat.item.icon is defined else
                        None }}'
                      name: '{{ repeat.item.name if repeat.item.name is defined else
                        None }}'
                    unit_of_measurement: '{{ state_attr(entity_id, "unit_of_measurement")
                      | default("") }}'
                - *id003
                - *id001
                - service: esphome.{{ nspanel_name }}_value
                  data:
                    id: '{{ repeat.item.page }}.{{ repeat.item.component }}'
                    icon: '{{ entity.icon if entitypages_show_entities_icons else
                      "" }}'
                    icon_color: []
                    name: '{{ entity.name }}'
                    value: "{{\n  (\n    (states(entity_id, rounded=true) ~ (unit_of_measurement
                      if unit_of_measurement is string and unit_of_measurement | length
                      > 0 else \"\"))\n    if is_number(entity_state)\n    else state_translated(entity_id)\n
                      \ )\n  if entity_id_valid and entity_has_value\n  else mui[language].unavailable\n}}\n"
                    value_color: []
                  continue_on_error: true
          - alias: Weather pages
            conditions: '{{ nspanel_event.page in pages.weatherpages }}'
            sequence:
            - variables:
                weather_attribution: '{{ state_attr(weather_entity, "attribution")
                  if weather_entity is string }}'
                weather_type: '{% if not weather_attribution %} unavailable {% elif
                  "AccuWeather" in weather_attribution %} AccuWeather {% elif "OpenWeatherMap"
                  in weather_attribution %} OpenWeather {% elif "SMHI" in weather_attribution
                  %} SMHI {% elif "met.no" in weather_attribution %} Met.no {% elif
                  "Météo-France" in weather_attribution %} Meteo_France {% else %}
                  Other {% endif %}

                  '
                weather_units:
                  humidity: "{{\n  state_attr(weather_entity, \"humidity_unit\") |
                    default(\"%\")\n  if weather_entity is string and state_attr(weather_entity,
                    \"humidity_unit\")\n  else \"%\"\n}}\n"
                  hours_of_sun: "{{\n  state_attr(weather_entity, \"hours_of_sun_unit\")
                    | default(\"h\")\n  if weather_entity is string and state_attr(weather_entity,
                    \"hours_of_sun_unit\")\n  else \"h\"\n}}\n"
                  precipitation: "{{\n  state_attr(weather_entity, \"precipitation_unit\")
                    | default(\"\")\n  if weather_entity is string and state_attr(weather_entity,
                    \"precipitation_unit\")\n}}\n"
                  precipitation_probability: "{{\n  state_attr(weather_entity, \"precipitation_probability_unit\")
                    | default(\"%\")\n  if weather_entity is string and state_attr(weather_entity,
                    \"precipitation_probability_unit\")\n  else \"%\"\n}}\n"
                  pressure: '{{ state_attr(weather_entity, "pressure_unit") | default("")
                    if weather_entity is string and state_attr(weather_entity, "pressure_unit")
                    }}'
                  thunderstorm_probability: "{{\n  state_attr(weather_entity, \"thunderstorm_probability_unit\")
                    | default(\"%\")\n  if weather_entity is string and state_attr(weather_entity,
                    \"thunderstorm_probability_unit\")\n  else \"%\"\n}}\n"
                  uv_index: '{{ state_attr(weather_entity, "uv_index_unit") | default("")
                    if weather_entity is string and state_attr(weather_entity, "uv_index_unit")
                    }}'
                  wind_speed: '{{ state_attr(weather_entity, "wind_speed_unit") |
                    default("") if weather_entity is string and state_attr(weather_entity,
                    "wind_speed_unit") }}'
                page_name: '{{ nspanel_event.page }}'
                page_index: '{{ (page_name[-2:] | int(0)) - 1 }}'
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: '{{ page_name }}.day'
                txt: '{{ (dict.values(mui[language].relative_day) | list)[page_index]
                  }}'
              continue_on_error: true
            - *id001
            - service: esphome.{{ nspanel_name }}_component_text
              data:
                id: '{{ page_name }}.date'
                txt: "{{\n  as_timestamp(now() + timedelta(days= (page_index)))\n
                  \ | timestamp_custom\n    (\n      date_format\n      | replace(\"%A\",
                  (dict.values(mui[language].weekdays) | list)[(now() + timedelta(days=
                  (page_index))).weekday()])\n      | replace(\"%a\", (dict.values(mui[language].weekdays_short)
                  | list)[(now() + timedelta(days= (page_index))).weekday()])\n      |
                  replace(\"%B\", (dict.values(mui[language].months) | list)[(now()
                  + timedelta(days= (page_index))).month-1])\n      | replace(\"%b\",
                  (dict.values(mui[language].months_short) | list)[(now() + timedelta(days=
                  (page_index))).month-1])\n    )\n}}\n"
              continue_on_error: true
            - variables:
                weather_entity_supported_features: '{{ state_attr(weather_entity,
                  "supported_features") | int(0) }}'
                forecast_type: "{% if weather_entity_supported_features == 0 or weather_entity_supported_features
                  | bitwise_and(1) > 0 %}\n  daily\n{% elif weather_entity_supported_features
                  | bitwise_and(4) > 0 %}\n  twice_daily\n{% elif weather_entity_supported_features
                  | bitwise_and(2) > 0 %}\n  hourly\n{% endif %}\n"
            - condition: '{{ forecast_type in ["daily", "twice_daily", "hourly"] }}'
            - service: weather.get_forecasts
              target:
                entity_id: '{{ weather_entity }}'
              data:
                type: '{{ forecast_type }}'
              response_variable: service_response_var
              continue_on_error: true
            - variables:
                forecast: "{% if service_response_var is defined\n      and service_response_var[weather_entity]
                  is defined\n      and service_response_var[weather_entity].forecast
                  is defined %}\n  {{ service_response_var[weather_entity].forecast
                  }}\n{% elif service_response_var is defined and service_response_var.forecast
                  is defined %}\n  {{ service_response_var.forecast }}\n{% else %}\n
                  \ {{ state_attr(weather_entity, \"forecast\") | default(false) }}\n{%
                  endif %}\n"
            - condition: '{{ forecast != false }}'
            - variables:
                datetime_is_string: '{{ forecast[0] is defined and forecast[0]["datetime"]
                  is string }}'
                forecast_day: "{% if datetime_is_string %}\n  {{\n    forecast | default([])\n
                  \   | selectattr(\"datetime\", \"defined\")\n    | selectattr(\"datetime\",
                  \">=\", (today_at(\"00:00\") + timedelta(days= page_index)) | as_timestamp
                  | timestamp_utc )\n    | selectattr(\"datetime\", \"<\", (today_at(\"00:00\")
                  + timedelta(days= (page_index+1))) | as_timestamp | timestamp_utc
                  )\n    | list\n  }}\n{% else %}\n  [\n    {\n      'datetime': '{{
                  forecast | default([])\n        | selectattr(\"datetime\", \"defined\")\n
                  \       | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                  + timedelta(days= page_index)) | as_timestamp | as_datetime )\n
                  \       | selectattr(\"datetime\", \"<\", (today_at(\"00:00\") +
                  timedelta(days= (page_index+1))) | as_timestamp | as_datetime )\n
                  \       | map(attribute=\"datetime\") | list | first | as_timestamp
                  | timestamp_utc\n        if forecast | default([])\n        | selectattr(\"datetime\",
                  \"defined\")\n        | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                  + timedelta(days= page_index)) | as_timestamp | as_datetime )\n
                  \       | selectattr(\"datetime\", \"<\", (today_at(\"00:00\") +
                  timedelta(days= (page_index+1))) | as_timestamp | as_datetime )\n
                  \       | map(attribute=\"datetime\") | list | count > 0\n        else
                  \"\" }}',\n      'condition': '{{ forecast | default([])\n        |
                  selectattr(\"condition\", \"defined\")\n        | selectattr(\"datetime\",
                  \"defined\")\n        | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                  + timedelta(days= page_index)) | as_timestamp | as_datetime )\n
                  \       | selectattr(\"datetime\", \"<\", (today_at(\"00:00\") +
                  timedelta(days= (page_index+1))) | as_timestamp | as_datetime )\n
                  \       | map(attribute=\"condition\") | list | first\n        if
                  forecast | default([])\n        | selectattr(\"condition\", \"defined\")\n
                  \       | selectattr(\"datetime\", \"defined\")\n        | selectattr(\"datetime\",
                  \">=\", (today_at(\"00:00\") + timedelta(days= page_index)) | as_timestamp
                  | as_datetime )\n        | selectattr(\"datetime\", \"<\", (today_at(\"00:00\")
                  + timedelta(days= (page_index+1))) | as_timestamp | as_datetime
                  )\n        | map(attribute=\"condition\") | list | count > 0\n        else
                  \"\" }}',\n      'temperature': '{{ forecast | default([])\n        |
                  selectattr(\"temperature\", \"defined\")\n        | selectattr(\"datetime\",
                  \"defined\")\n        | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                  + timedelta(days= page_index)) | as_timestamp | as_datetime )\n
                  \       | selectattr(\"datetime\", \"<\", (today_at(\"00:00\") +
                  timedelta(days= (page_index+1))) | as_timestamp | as_datetime )\n
                  \       | map(attribute=\"temperature\") | list | first\n        if
                  forecast | default([])\n        | selectattr(\"temperature\", \"defined\")\n
                  \       | selectattr(\"datetime\", \"defined\")\n        | selectattr(\"datetime\",
                  \">=\", (today_at(\"00:00\") + timedelta(days= page_index)) | as_timestamp
                  | as_datetime )\n        | selectattr(\"datetime\", \"<\", (today_at(\"00:00\")
                  + timedelta(days= (page_index+1))) | as_timestamp | as_datetime
                  )\n        | map(attribute=\"temperature\") | list | count > 0\n
                  \       else \"\" }}',\n      'templow': '{{ forecast | default([])\n
                  \       | selectattr(\"templow\", \"defined\")\n        | selectattr(\"datetime\",
                  \"defined\")\n        | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                  + timedelta(days= page_index)) | as_timestamp | as_datetime )\n
                  \       | selectattr(\"datetime\", \"<\", (today_at(\"00:00\") +
                  timedelta(days= (page_index+1))) | as_timestamp | as_datetime )\n
                  \       | map(attribute=\"templow\") | list | first\n        if
                  forecast | default([])\n        | selectattr(\"templow\", \"defined\")\n
                  \       | selectattr(\"datetime\", \"defined\")\n        | selectattr(\"datetime\",
                  \">=\", (today_at(\"00:00\") + timedelta(days= page_index)) | as_timestamp
                  | as_datetime )\n        | selectattr(\"datetime\", \"<\", (today_at(\"00:00\")
                  + timedelta(days= (page_index+1))) | as_timestamp | as_datetime
                  )\n        | map(attribute=\"templow\") | list | count > 0\n        else
                  \"\" }}',\n      'precipitation': '{{ forecast | default([])\n        |
                  selectattr(\"precipitation\", \"defined\")\n        | selectattr(\"datetime\",
                  \"defined\")\n        | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                  + timedelta(days= page_index)) | as_timestamp | as_datetime )\n
                  \       | selectattr(\"datetime\", \"<\", (today_at(\"00:00\") +
                  timedelta(days= (page_index+1))) | as_timestamp | as_datetime )\n
                  \       | map(attribute=\"precipitation\") | list | first\n        if
                  forecast | default([])\n        | selectattr(\"precipitation\",
                  \"defined\")\n        | selectattr(\"datetime\", \"defined\")\n
                  \       | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                  + timedelta(days= page_index)) | as_timestamp | as_datetime )\n
                  \       | selectattr(\"datetime\", \"<\", (today_at(\"00:00\") +
                  timedelta(days= (page_index+1))) | as_timestamp | as_datetime )\n
                  \       | map(attribute=\"precipitation\") | list | count > 0\n
                  \       else \"\" }}',\n      'wind_speed': '{{ forecast | default([])\n
                  \       | selectattr(\"wind_speed\", \"defined\")\n        | selectattr(\"datetime\",
                  \"defined\")\n        | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                  + timedelta(days= page_index)) | as_timestamp | as_datetime )\n
                  \       | selectattr(\"datetime\", \"<\", (today_at(\"00:00\") +
                  timedelta(days= (page_index+1))) | as_timestamp | as_datetime )\n
                  \       | map(attribute=\"wind_speed\") | list | first\n        if
                  forecast | default([])\n        | selectattr(\"wind_speed\", \"defined\")\n
                  \       | selectattr(\"datetime\", \"defined\")\n        | selectattr(\"datetime\",
                  \">=\", (today_at(\"00:00\") + timedelta(days= page_index)) | as_timestamp
                  | as_datetime )\n        | selectattr(\"datetime\", \"<\", (today_at(\"00:00\")
                  + timedelta(days= (page_index+1))) | as_timestamp | as_datetime
                  )\n        | map(attribute=\"wind_speed\") | list | count > 0\n
                  \       else \"\" }}'\n    }\n  ]\n{% endif %}\n"
            - if: '{{ forecast_day | count > 0 or page_index == 0 }}'
              then:
              - variables:
                  metnoweather: '{{ weather_type == "Met.no" }}'
                  metnoweather_hourly_forecast: '{{ state_attr(weather_entity ~ "_hourly",
                    "forecast") if metnoweather and has_value(weather_entity ~ "_hourly")
                    }}'
                  forecast_day: "{% if forecast_day | count > 0 %}{{ forecast_day
                    }} {% elif metnoweather and metnoweather_hourly_forecast %}\n
                    \ {{ metnoweather_hourly_forecast\n    | selectattr(\"datetime\",
                    \"defined\")\n    | selectattr(\"datetime\", \">=\", (today_at(\"00:00\")
                    + timedelta(days= page_index)) | as_timestamp | timestamp_utc
                    )\n    | selectattr(\"datetime\", \"<\", (today_at(\"00:00\")
                    + timedelta(days= (page_index+1))) | as_timestamp | timestamp_utc
                    )\n    | list\n  }}\n{% endif %}\n"
              - variables:
                  forecast_day: "{% if forecast_day | count > 0 %}{{ forecast_day
                    }} {% elif page_index == 0 %}\n  [\n    {\n      'condition':
                    '{{ states(weather_entity) }}',\n      'temperature': '{{ state_attr(weather_entity,
                    \"temperature\") }}',\n      'wind_speed': '{{ state_attr(weather_entity,
                    \"wind_speed\") }}'\n    }\n  ]\n{% endif %}\n"
              - if: '{{ forecast_day | count > 0 }}'
                then:
                - variables:
                    accuweather: '{{ weather_type == "AccuWeather" }}'
                    accuweather_day_name: '{{ "day_" ~ page_index }}'
                    accuweather_sensor_prefix: '{{ "sensor." ~ (weather_entity | replace("weather.",""))
                      ~ "_" }}'
                    accuweather_sensor_sufix: '{{ "_" ~ page_index ~ "d" }}'
                    temp_min: "{{\n  forecast_day | selectattr(\"templow\", \"defined\")
                      | map(attribute=\"templow\") | map(\"float\") | list | min\n
                      \ if forecast_day | selectattr(\"templow\", \"defined\") | map(attribute=\"templow\")
                      | map(\"float\") | list | count > 0\n  else\n    forecast_day\n
                      \   | selectattr(\"temperature\", \"defined\")\n    | rejectattr(\"temperature\",
                      \"eq\", \"\")\n    | map(attribute=\"temperature\")\n    | map(\"float\")
                      | list | min | default(\"unknown\")\n}}\n"
                    temp_max: "{{\n  forecast_day\n  | selectattr(\"temperature\",
                      \"defined\")\n  | rejectattr(\"temperature\", \"eq\", \"\")\n
                      \ | map(attribute=\"temperature\")\n  | map(\"float\") | list
                      | max\n  if\n    forecast_day\n    | selectattr(\"temperature\",
                      \"defined\")\n    | rejectattr(\"temperature\", \"eq\", \"\")\n
                      \   | map(attribute=\"temperature\")\n    | map(\"float\") |
                      list | count > 0\n}}\n"
                    condition: "{{\n  forecast_day\n  | selectattr(\"condition\",
                      \"defined\")\n  | rejectattr(\"condition\", \"eq\", \"\")\n
                      \ | map(attribute=\"condition\") | list | first\n  if\n    forecast_day\n
                      \   | selectattr(\"condition\", \"defined\")\n    | rejectattr(\"condition\",
                      \"eq\", \"\")\n    | map(attribute=\"condition\") | list | count
                      > 0\n}}\n"
                    precipitation: "{{\n  forecast_day\n  | selectattr(\"precipitation\",
                      \"defined\")\n  | rejectattr(\"precipitation\", \"eq\", \"\")\n
                      \ | map(attribute=\"precipitation\")\n  | map(\"float\") | list
                      | sum | round(0)\n  if\n    forecast_day\n    | selectattr(\"precipitation\",
                      \"defined\")\n    | rejectattr(\"precipitation\", \"eq\", \"\")\n
                      \   | map(attribute=\"precipitation\")\n    | map(\"float\")
                      | list | count > 0\n}}\n"
                    precipitation_probability: "{{\n  forecast_day\n  | selectattr(\"precipitation_probability\",
                      \"defined\")\n  | rejectattr(\"precipitation_probability\",
                      \"eq\", \"\")\n  | map(attribute=\"precipitation_probability\")\n
                      \ | map(\"float\") | list | max | round(0)\n  if\n    forecast_day\n
                      \   | selectattr(\"precipitation_probability\", \"defined\")\n
                      \   | rejectattr(\"precipitation_probability\", \"eq\", \"\")\n
                      \   | map(attribute=\"precipitation_probability\")\n    | map(\"float\")
                      | list | count > 0\n}}\n"
                    pressure: "{{\n  forecast_day\n  | selectattr(\"pressure\", \"defined\")\n
                      \ | rejectattr(\"pressure\", \"eq\", \"\")\n  | map(attribute=\"pressure\")\n
                      \ | map(\"float\") | list | max | round(0)\n  if\n    forecast_day\n
                      \   | selectattr(\"pressure\", \"defined\")\n    | rejectattr(\"pressure\",
                      \"eq\", \"\")\n    | map(attribute=\"pressure\")\n    | map(\"float\")
                      | list | count > 0\n}}\n"
                    wind_speed: "{{\n  forecast_day\n  | selectattr(\"wind_speed\",
                      \"defined\")\n  | rejectattr(\"wind_speed\", \"eq\", \"\")\n
                      \ | map(attribute=\"wind_speed\")\n  | map(\"float\") | list
                      | max | round(0)\n  if\n    forecast_day\n    | selectattr(\"wind_speed\",
                      \"defined\")\n    | rejectattr(\"wind_speed\", \"eq\", \"\")\n
                      \   | map(attribute=\"wind_speed\")\n    | map(\"float\") |
                      list | count > 0\n}}\n"
                    hours_of_sun: "{{\n  states(accuweather_sensor_prefix ~ \"hours_of_sun\"
                      ~ accuweather_sensor_sufix, rounded=true) | default(\"unknown\")\n
                      \ if accuweather\n  else\n    (\n      forecast_day\n      |
                      selectattr(\"hours_of_sun\", \"defined\")\n      | rejectattr(\"hours_of_sun\",
                      \"eq\", \"\")\n      | map(attribute=\"hours_of_sun\")\n      |
                      map(\"float\")\n      | list\n      | sum\n      | round(0)\n
                      \     if\n        forecast_day\n        | selectattr(\"hours_of_sun\",
                      \"defined\")\n        | rejectattr(\"hours_of_sun\", \"eq\",
                      \"\")\n        | map(attribute=\"hours_of_sun\")\n        |
                      map(\"float\")\n        | list\n        | count > 0\n    )\n}}\n"
                    uv_index: "{{\n  states(accuweather_sensor_prefix ~ \"uv_index\"
                      ~ accuweather_sensor_sufix, rounded=true) | default(\"unknown\")\n
                      \ if accuweather\n  else\n    (\n      forecast_day\n      |
                      selectattr(\"uv_index\", \"defined\")\n      | rejectattr(\"uv_index\",
                      \"eq\", \"\")\n      | map(attribute=\"uv_index\")\n      |
                      map(\"float\")\n      | list\n      | max\n      | round(0)\n
                      \     if\n        forecast_day\n        | selectattr(\"uv_index\",
                      \"defined\")\n        | rejectattr(\"uv_index\", \"eq\", \"\")\n
                      \       | map(attribute=\"uv_index\")\n        | map(\"float\")\n
                      \       | list\n        | count > 0\n    )\n}}\n"
                    thunderstorm_probability: "{{\n  states(accuweather_sensor_prefix
                      ~ \"thunderstorm_probability_day\" ~ accuweather_sensor_sufix,
                      rounded=true) | default(\"unknown\")\n  if accuweather\n  else\n
                      \   (\n      forecast_day\n      | selectattr(\"thunderstorm_probability\",
                      \"defined\")\n      | rejectattr(\"thunderstorm_probability\",
                      \"eq\", \"\")\n      | map(attribute=\"thunderstorm_probability\")
                      | map(\"float\")\n      | list\n      | max\n      | round(0)\n
                      \     if\n        forecast_day\n        | selectattr(\"thunderstorm_probability\",
                      \"defined\")\n        | rejectattr(\"thunderstorm_probability\",
                      \"eq\", \"\")\n        | map(attribute=\"thunderstorm_probability\")\n
                      \       | map(\"float\")\n        | list\n        | count >
                      0\n    )\n}}\n"
                    humidity: "{{\n  forecast_day\n  | selectattr(\"humidity\", \"defined\")\n
                      \ | rejectattr(\"humidity\", \"eq\", \"\")\n  | map(attribute=\"humidity\")\n
                      \ | map(\"float\")\n  | list\n  | max\n  | round(0)\n  if\n
                      \   forecast_day\n    | selectattr(\"humidity\", \"defined\")\n
                      \   | rejectattr(\"humidity\", \"eq\", \"\")\n    | map(attribute=\"humidity\")\n
                      \   | map(\"float\")\n    | list\n    | count > 0\n}}\n"
                    parameters:
                    - name: hours_of_sun
                      visibility: '{{ is_number(hours_of_sun) }}'
                      value: '{{ (hours_of_sun ~ " " ~ weather_units.hours_of_sun)
                        if is_number(hours_of_sun) }}'
                      icon: '{{ nextion.icon.weather.sun }}'
                    - name: thunderstorm_probability
                      visibility: '{{ is_number(thunderstorm_probability) }}'
                      value: '{{ (thunderstorm_probability ~ weather_units.thunderstorm_probability)
                        if is_number(thunderstorm_probability) }}'
                      icon: '{{ nextion.icon.weather.lightning }}'
                    - name: precipitation
                      visibility: '{{ is_number(precipitation) or is_number(precipitation_probability)
                        }}'
                      value: '{{ (precipitation ~ " " ~ weather_units.precipitation)
                        if is_number(precipitation) }} {{ "-" if is_number(precipitation)
                        and is_number(precipitation_probability) }} {{ (precipitation_probability
                        ~ weather_units.precipitation_probability) if is_number(precipitation_probability)
                        }}

                        '
                      icon: '{{ nextion.icon.weather.rain }}'
                    - name: uv_index
                      visibility: '{{ is_number(uv_index) }}'
                      value: '{{ (state_attr(accuweather_sensor_prefix ~ "uv_index"
                        ~ accuweather_sensor_sufix, "level") | default("") ~ ": ")
                        if weather_type == "AccuWeather" }} {{ (uv_index ~ weather_units.uv_index)
                        if is_number(uv_index) }}

                        '
                      icon: '{{ nextion.icon.weather.protect }}'
                    - name: wind_speed
                      visibility: '{{ is_number(wind_speed) }}'
                      value: '{{ (wind_speed ~ " " ~ weather_units.wind_speed) if
                        is_number(wind_speed) }}'
                      icon: '{{ nextion.icon.weather.wind }}'
                    - name: humidity
                      visibility: '{{ is_number(humidity) }}'
                      value: '{{ (humidity ~ " " ~ weather_units.humidity) if is_number(humidity)
                        }}'
                      icon: '{{ all_icons["water-percent"] }}'
                    - name: pressure
                      visibility: '{{ is_number(pressure) }}'
                      value: '{{ (pressure ~ " " ~ weather_units.pressure) if is_number(pressure)
                        }}'
                      icon: '{{ nextion.icon.weather.gauge }}'
                - if: '{{ condition not in ["unknown", None] }}'
                  then:
                  - *id001
                  - service: esphome.{{ nspanel_name }}_command
                    data:
                      cmd: "{{ page_name }}.weather_icon.pic={{\n  nextion.pic.weather[states(weather_entity)
                        | default(\"unavailable\") if weather_entity is string else
                        \"unavailable\"] | int(1)\n  if condition == \"unknown\" and
                        page_name == pages.weatherpages[0]\n  else nextion.pic.weather[condition]
                        | int(1)\n}}\n"
                    continue_on_error: true
                - variables:
                    temperature_string: '{{ (temp_min | round(0) ~ temperature_units)
                      if is_number(temp_min) }} {{ "/" if is_number(temp_min) and
                      is_number(temp_max) and temp_min != temp_max }} {{ (temp_max
                      | round(0) ~ temperature_units) if is_number(temp_max) and temp_min
                      != temp_max }}

                      '
                - if: '{{ (is_number(temp_min) or is_number(temp_max)) and temperature_string
                    is string and temperature_string | length > 0 }}'
                  then:
                  - *id001
                  - service: esphome.{{ nspanel_name }}_component_text
                    data:
                      id: '{{ page_name }}.temperature'
                      txt: '{{ temperature_string }}'
                    continue_on_error: true
                - repeat:
                    for_each: '{{ (parameters | selectattr("visibility", "eq", true)
                      | list)[:5] }}'
                    sequence:
                    - *id001
                    - service: esphome.{{ nspanel_name }}_component_text
                      data:
                        id: '{{ page_name }}.value0{{ repeat.index }}'
                        txt: '{{ repeat.item.value }}'
                      continue_on_error: true
                    - *id001
                    - service: esphome.{{ nspanel_name }}_component_text
                      data:
                        id: '{{ page_name }}.value0{{ repeat.index }}_icon'
                        txt: '{{ repeat.item.icon }}'
                      continue_on_error: true
                else: &id005
                - *id001
                - service: esphome.{{ nspanel_name }}_component_text
                  data:
                    id: '{{ page_name }}.value01'
                    txt: '{{ mui[language].unavailable }}'
                  continue_on_error: true
              else: *id005
          - alias: Utilities page
            conditions: '{{ nspanel_event.page == pages.utilities }}'
            sequence:
            - variables:
                utilities_constructor_init: true
                page_icon: '{{ pages_utilities.title.icon.split("mdi:")[1] if pages_utilities.title.icon
                  is string and pages_utilities.title.icon.split("mdi:") | count ==
                  2 }}'
            - service: esphome.{{ nspanel_name }}_value
              data:
                id: utilities.title
                icon: '{{ all_icons[page_icon] if page_icon in all_icons else all_icons.gauge
                  }}'
                icon_color: []
                name: ''
                value: '{{ pages_utilities.title.label }}'
                value_color: []
              continue_on_error: true
            - repeat:
                for_each: '{{ pages_utilities.groups | list }}'
                sequence: &id030
                - variables:
                    utilities_constructor: '{{ utilities_constructor_init is defined
                      and utilities_constructor_init }}'
                    icon_enabled: '{{ utilities_constructor and repeat.item.icon is
                      defined and repeat.item.icon is string and repeat.item.icon.split("mdi:")
                      | count == 2 }}'
                    value1_enabled: "{{\n  repeat.item.value1 is defined and\n  repeat.item.value1
                      is string and\n  repeat.item.value1.split(\".\") | count ==
                      2 and\n  (utilities_constructor or trigger.entity_id == repeat.item.value1)\n}}\n"
                    value2_enabled: "{{\n  repeat.item.value2 is defined and\n  repeat.item.value2
                      is string and\n  repeat.item.value2.split(\".\") | count ==
                      2 and\n  (utilities_constructor or trigger.entity_id == repeat.item.value2)\n}}\n"
                    label_enabled: '{{ utilities_constructor and repeat.item.label
                      is defined and repeat.item.label is string and repeat.item.label
                      | length > 0 }}'
                - alias: Utilities - Display icon
                  if: '{{ icon_enabled }}'
                  then:
                  - variables:
                      icon_code: '{{ repeat.item.icon.split("mdi:")[1] }}'
                  - service: esphome.{{ nspanel_name }}_icon
                    data:
                      id: '{{ repeat.item.name }}_icon'
                      icon: '{{ all_icons[icon_code] if icon_code in all_icons else
                        "" }}'
                      icon_color: '{{ repeat.item.color }}'
                      visible: '{{ icon_code in all_icons }}'
                    continue_on_error: true
                - alias: Utilities - Label
                  if: '{{ label_enabled }}'
                  then:
                  - service: esphome.{{ nspanel_name }}_component_text
                    data:
                      id: '{{ repeat.item.name }}_label'
                      txt: '{{ repeat.item.label }}'
                    continue_on_error: true
                  - service: esphome.{{ nspanel_name }}_component_color
                    data:
                      id: '{{ repeat.item.name }}_label'
                      color: '{{ repeat.item.color }}'
                    continue_on_error: true
                  - service: esphome.{{ nspanel_name }}_components_visibility
                    data:
                      ids: '{{ [repeat.item.name ~ "_label"] }}'
                      visible: true
                    continue_on_error: true
                - variables:
                    line_ref_state: "{{\n  states(repeat.item.line_ref) | float(0)\n
                      \ if repeat.item.line_ref is defined and repeat.item.line_ref
                      is string and repeat.item.line_ref.split(\".\") | count == 2\n
                      \ else 0\n}}\n"
                    direction: '{{ (((line_ref_state > 0) - (line_ref_state < 0))
                      * (-3 if repeat.item.line_inverted is defined and repeat.item.line_inverted
                      else 3)) | int(0) }}'
                - alias: Utilities - Display value 1
                  if: '{{ value1_enabled }}'
                  then:
                  - variables:
                      entity_id: '{{ repeat.item.value1 }}'
                      unit_of_measurement: '{{ state_attr(entity_id, "unit_of_measurement")
                        | default("") }}'
                  - *id003
                  - service: esphome.{{ nspanel_name }}_utilities_group_refresh
                    data:
                      group_id: '{{ repeat.item.name }}'
                      value1: "{{\n  (\n    (states(entity_id, rounded=true) ~ (unit_of_measurement
                        if unit_of_measurement is string and unit_of_measurement |
                        length > 0 else \"\"))\n    if is_number(entity_state)\n    else
                        state_translated(entity_id)\n  )\n  if entity_id_valid and
                        entity_has_value\n  else mui[language].unavailable\n}}\n"
                      value2: ''
                      direction: '{{ direction }}'
                    continue_on_error: true
                  - if: '{{ utilities_constructor }}'
                    then:
                    - service: esphome.{{ nspanel_name }}_component_color
                      data:
                        id: '{{ repeat.item.name }}'
                        color: '{{ repeat.item.color }}'
                      continue_on_error: true
                    - service: esphome.{{ nspanel_name }}_components_visibility
                      data:
                        ids: '{{ [repeat.item.name] }}'
                        visible: true
                      continue_on_error: true
                - alias: Utilities - Display value 2
                  if: '{{ value2_enabled }}'
                  then:
                  - variables:
                      entity_id: '{{ repeat.item.value2 }}'
                      unit_of_measurement: '{{ state_attr(entity_id, "unit_of_measurement")
                        | default("") }}'
                  - *id003
                  - service: esphome.{{ nspanel_name }}_utilities_group_refresh
                    data:
                      group_id: '{{ repeat.item.name }}'
                      value1: ''
                      value2: "{{\n  (\n    (states(entity_id, rounded=true) ~ (unit_of_measurement
                        if unit_of_measurement is string and unit_of_measurement |
                        length > 0 else \"\"))\n    if is_number(entity_state)\n    else
                        state_translated(entity_id)\n  )\n  if entity_id_valid and
                        entity_has_value\n  else mui[language].unavailable\n}}\n"
                      direction: '{{ direction }}'
                    continue_on_error: true
                  - if: '{{ utilities_constructor }}'
                    then:
                    - service: esphome.{{ nspanel_name }}_component_color
                      data:
                        id: '{{ repeat.item.name }}b'
                        color: '{{ repeat.item.color }}'
                      continue_on_error: true
                    - service: esphome.{{ nspanel_name }}_components_visibility
                      data:
                        ids: '{{ [repeat.item.name ~ "b"] }}'
                        visible: true
                      continue_on_error: true
                - alias: Utilities - Line
                  if:
                  - '{{ icon_enabled or value1_enabled or value2_enabled or label_enabled
                    }}'
                  - '{{ repeat.item.name not in ["grid"] }}'
                  - '{{ utilities_constructor }}'
                  then:
                  - variables:
                      rgb565: '{{ int(((repeat.item.color[0] //(2**3)) *(2**11))+((repeat.item.color[1]
                        //(2**2)) *(2**5))+(repeat.item.color[2] //(2**3))) }}'
                  - service: esphome.{{ nspanel_name }}_command
                    data:
                      cmd: '{{ repeat.item.name }}_line.bco={{ rgb565 }}'
                    continue_on_error: true
                  - service: esphome.{{ nspanel_name }}_command
                    data:
                      cmd: '{{ repeat.item.name }}_line.bco1={{ rgb565 }}'
                    continue_on_error: true
                  - if: '{{ pages_utilities.cursor.width != 255 }}'
                    then:
                    - service: esphome.{{ nspanel_name }}_command
                      data:
                        cmd: '{{ repeat.item.name }}_line.wid={{ pages_utilities.cursor.width
                          }}'
                      continue_on_error: true
                  - service: esphome.{{ nspanel_name }}_components_visibility
                    data:
                      ids: '{{ [repeat.item.name ~ "_line"] }}'
                      visible: true
                    continue_on_error: true
      - alias: Button click
        conditions:
        - '{{ nspanel_event.type == "button_click" }}'
        sequence:
        - choose:
          - alias: Hardware buttons
            conditions:
            - '{{ nspanel_event.component in ["hw_bt_left", "hw_bt_right"] }}'
            sequence:
            - *id006
            - variables:
                last_click_button: '{{ hardware.buttons.left if nspanel_event.component
                  == "hw_bt_left" else hardware.buttons.right }}'
                entity_id: '{{ last_click_button.entity }}'
            - *id003
            - choose:
              - alias: Long click
                conditions:
                - '{{ nspanel_event.command == "long_click" or entity_domain in ["alarm_control_panel",
                  "climate", "media_player"] }}'
                sequence:
                - choose:
                  - alias: Default
                    conditions:
                    - '{{ last_click_button.hold_select == "Default" }}'
                    - '{{ entity_domain in ["alarm_control_panel", "climate", "cover",
                      "light", "fan", "media_player"] }}'
                    sequence:
                    - variables:
                        back_page: '{{ pages.home }}'
                    - &id008
                      if: '{{ true }}'
                      then:
                      - service: esphome.{{ nspanel_name }}_entity_details_show
                        data:
                          entity: '{{ "embedded_climate" if entity_id == thermostat_embedded
                            else entity_id }}'
                          back_page: '{{ back_page }}'
                        continue_on_error: true
                      - if: '{{ entity is defined and entity.icon is defined and entity.icon
                          is string and entity.icon | length > 0 }}'
                        then:
                        - *id001
                        - service: esphome.{{ nspanel_name }}_component_text
                          data:
                            id: icon_state
                            txt: '{{ entity.icon }}'
                          continue_on_error: true
                      - if: '{{ entity is defined and entity.name is defined and entity.name
                          is string and entity.name | length > 0 }}'
                        then:
                        - *id001
                        - service: esphome.{{ nspanel_name }}_component_text
                          data:
                            id: page_label
                            txt: '{{ entity.name }}'
                          continue_on_error: true
                  - alias: Custom action - Left
                    conditions: '{{ last_click_button.hold_select == "Custom Action"
                      and nspanel_event.component == "hw_bt_left" }}'
                    sequence: !input left_button_hold_custom_action
                  - alias: Custom action - Right
                    conditions: '{{ last_click_button.hold_select == "Custom Action"
                      and nspanel_event.component == "hw_bt_right" }}'
                    sequence: !input right_button_hold_custom_action
              - alias: Short click
                conditions:
                - '{{ nspanel_event.command == "short_click" and entity_domain not
                  in ["alarm_control_panel", "climate", "media_player"] }}'
                sequence:
                - condition: '{{ last_click_button.entity | length > 0 }}'
                - condition: '{{ nspanel_event.component != "hw_bt_left" or hardware.buttons.left.entity
                    != relay01_entity }}'
                - condition: '{{ nspanel_event.component != "hw_bt_right" or hardware.buttons.right.entity
                    != relay02_entity }}'
                - &id009
                  if: '{{ true }}'
                  then:
                  - service: "{% if entity_domain in [\"cover\"]\n      and states(last_click_button.entity)
                      in [\"opening\", \"closing\"]\n      and state_attr(last_click_button.entity,
                      \"supported_features\") | int(0) | bitwise_and(4) == 0 %}\n
                      \ {{ entity_domain }}.stop_cover\n{% elif entity_domain in [\"light\",
                      \"switch\", \"cover\", \"input_boolean\", \"fan\", \"remote\"]
                      %}\n  {{ entity_domain }}.toggle\n{% elif entity_domain in [\"automation\"]
                      %}\n  {{ entity_domain }}.{{ domain_automation_button_action
                      if domain_automation_button_action is string else \"toggle\"}}\n{%
                      elif entity_domain in [\"button\", \"input_button\"] %}\n  {{
                      entity_domain }}.press\n{% elif entity_domain in [\"lock\"]
                      and states(last_click_button.entity) in [\"locked\"] %}\n  {{
                      entity_domain }}.unlock\n{% elif entity_domain in [\"lock\"]
                      and states(last_click_button.entity) in [\"unlocked\"] %}\n
                      \ {{ entity_domain }}.lock\n{% elif entity_domain in [\"scene\",
                      \"script\"] %}\n  {{ entity_domain }}.turn_on\n{% elif entity_domain
                      in [\"media_player\"] %}\n  {{ entity_domain }}.media_play_pause\n{%
                      else %}\n  homeassistant.update_entity\n{% endif %}\n"
                    data:
                      entity_id: '{{ last_click_button.entity }}'
                    continue_on_error: true
            - if: '{{ entity_domain in ["media_player"] }}'
              then:
              - delay:
                  milliseconds: '{{ media_player_update_delay }}'
              - service: homeassistant.update_entity
                data:
                  entity_id: '{{ last_click_button.entity }}'
                continue_on_error: true
          - alias: Buttons pages
            conditions:
            - '{{ nspanel_event.page in pages.buttonpages }}'
            sequence:
            - *id007
            - variables:
                last_click_button: "{{\n  buttons_pages.buttons\n  | selectattr(\"page\",
                  \"defined\")\n  | selectattr(\"page\", \"eq\", nspanel_event.page)\n
                  \ | selectattr(\"component\", \"defined\")\n  | selectattr(\"component\",
                  \"eq\", nspanel_event.component)\n  | selectattr(\"entity\", \"defined\")\n
                  \ | rejectattr(\"entity\", \"eq\", [])\n  | list\n}}\n"
            - condition: '{{ last_click_button | count >= 0 }}'
            - variables:
                last_click_button: '{{ last_click_button[0] }}'
                entity_id: '{{ last_click_button.entity }}'
                overlap:
                  icon: '{{ last_click_button.icon if last_click_button.icon is defined
                    else None }}'
                  name: '{{ last_click_button.name if last_click_button.name is defined
                    else None }}'
            - *id003
            - choose:
              - alias: Long click
                conditions:
                - '{{ nspanel_event.command == "long_click" or entity_domain in ["alarm_control_panel",
                  "climate", "media_player"] }}'
                - '{{ entity_domain in ["alarm_control_panel", "climate", "cover",
                  "light", "fan", "media_player"] }}'
                sequence:
                - variables:
                    back_page: '{{ nspanel_event.page }}'
                - *id008
              - alias: Short click
                conditions:
                - '{{ nspanel_event.command == "short_click" and entity_domain not
                  in ["alarm_control_panel", "climate", "media_player"] }}'
                - '{{ entity_domain not in ["unknown", "person", "binary_sensor",
                  "sensor"] }}'
                sequence:
                - *id009
          - alias: Climate page
            conditions:
            - '{{ nspanel_event.page == pages.climate }}'
            sequence:
            - *id010
            - variables:
                last_click_button: '{{ climate_custom_buttons | selectattr("component",
                  "defined") | selectattr("component", "eq", nspanel_event.component)
                  | list }}'
            - condition: '{{ last_click_button | count >= 0 }}'
            - variables:
                last_click_button: '{{ last_click_button[0] }}'
                entity_domain: "{{\n  last_click_button.entity.split(\".\")[0] | default(\"unknown\")\n
                  \ if\n    last_click_button.entity is string and\n    last_click_button.entity
                  | length > 0 and\n    last_click_button.entity.split(\".\") | count
                  > 0\n  else \"unknown\"\n}}\n"
            - choose:
              - alias: Long click
                conditions:
                - '{{ nspanel_event.command == "long_click" }}'
                sequence:
                - choose:
                  - conditions: '{{ nspanel_event.component == "button08" }}'
                    sequence: !input climate_button08_hold_custom_action
                  - conditions: '{{ nspanel_event.component == "button09" }}'
                    sequence: !input climate_button09_hold_custom_action
              - alias: Short click
                conditions:
                - '{{ nspanel_event.command == "short_click" }}'
                - '{{ entity_domain not in ["unknown", "person", "binary_sensor",
                  "sensor"] }}'
                sequence:
                - *id009
          - alias: Home page custom buttons
            conditions:
            - '{{ nspanel_event.page == pages.home }}'
            sequence:
            - variables:
                last_click_button: '{{ home_page.custom_buttons | selectattr("component",
                  "defined") | selectattr("component", "eq", nspanel_event.component)
                  | list }}'
            - condition: '{{ last_click_button | count >= 0 }}'
            - variables:
                last_click_button: '{{ last_click_button[0] }}'
                entity_id: '{{ last_click_button.entity }}'
                overlap:
                  icon: '{{ last_click_button.icon if last_click_button.icon is defined
                    else None }}'
                  name: '{{ last_click_button.name if last_click_button.name is defined
                    else None }}'
            - *id003
            - condition: '{{ entity_id_valid }}'
            - variables:
                supported_features: '{{ state_attr(entity_id, "supported_features")
                  | int(0) }}'
                supported_color_modes: '{{ state_attr(entity_id, "supported_color_modes")
                  | default([]) }}'
            - if: "{{\n  entity_domain in [\"alarm_control_panel\", \"climate\", \"media_player\"]
                or\n  (entity_domain == \"cover\" and supported_features | bitwise_and(4)
                > 0) or\n  (entity_domain == \"fan\" and (supported_features | bitwise_and(1)
                > 0 or supported_features | bitwise_and(2) > 0)) or\n  (\n    entity_domain
                == \"light\" and\n    (\n      supported_features | bitwise_and(1)
                > 0 or\n      supported_features | bitwise_and(2) > 0 or\n      supported_features
                | bitwise_and(16) > 0 or\n      enum.ColorMode.BRIGHTNESS in supported_color_modes
                or\n      enum.ColorMode.COLOR_TEMP in supported_color_modes or\n
                \     enum.ColorMode.RGB in supported_color_modes\n    )\n  )\n}}\n"
              then:
              - variables:
                  back_page: '{{ pages.home }}'
              - *id008
              else:
              - *id009
      - alias: Versions
        conditions:
        - '{{ nspanel_event.type == "version"}}'
        sequence:
        - variables:
            versions:
              blueprint: "{{\n  ('%03d' | format(blueprint_version.split('.')[0] |
                int)) ~ \".\" ~ '%03d' | format(blueprint_version.split('.')[1] |
                int)\n  if blueprint_version.split('.') | count > 1\n  else \"000.000\"\n}}\n"
              esphome: "{{\n  ('%03d' | format(nspanel_event.esphome.split('.')[0]
                | int)) ~ \".\" ~ '%03d' | format(nspanel_event.esphome.split('.')[1]
                | int)\n  if nspanel_event.esphome.split('.') | count > 1\n  else
                \"000.000\"\n}}\n"
              tft: "{{\n  ('%03d' | format(nspanel_event.tft.split('.')[0] | int))
                ~ \".\" ~ '%03d' | format(nspanel_event.tft.split('.')[1] | int)\n
                \ if nspanel_event.tft.split('.') | count > 1\n  else \"000.000\"\n}}\n"
            versions_sorted: '{{ versions | dictsort(by="value") }}'
            oldest: '{{ versions_sorted[0] }}'
            newest: '{{ versions_sorted[-1] }}'
        - choose:
          - alias: All versions are the same
            conditions:
            - '{{ oldest[1] == newest[1] }}'
            - '{{ nspanel_event.blueprint == blueprint_version }}'
            sequence:
            - service: persistent_notification.dismiss
              data:
                notification_id: NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name
                  }}
              continue_on_error: true
          - alias: Blueprint is older
            conditions:
            - '{{ oldest[1] != newest[1] }}'
            - '{{ oldest[0] == "blueprint" }}'
            sequence:
            - service: persistent_notification.create
              data:
                notification_id: NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name
                  }}
                title: NSPanel Blueprint Needs Update
                message: "Your NSPanel Blueprint version is outdated.\n- Current Blueprint
                  version: {{ blueprint_version }}\n- Expected version: {{ nspanel_event.esphome
                  if newest[0] == \"esphome\" else nspanel_event.tft }}, based on
                  the panel **{{\n    device_attr(nspanel_deviceid, \"name\") ~ ((\"
                  - \" ~ nspanel_name) if nspanel_name != device_attr(nspanel_deviceid,
                  \"name\") else \"\") }}**.\n\n**How to Resolve This Issue**\n1.
                  Navigate to your [Blueprint Dashboard](/config/blueprint/dashboard).\n2.
                  Locate the blueprint named \"**NSPanel Configuration**\".\n3. Click
                  on the corresponding 3-dot menu.\n4. Choose \"**Re-import blueprint**\".\n5.
                  Select the \"**Re-import**\" button.\n6. Navigate to [YAML configuration
                  reloading dashboard](/developer-tools/yaml).\n7. Select \"**Automations**\"
                  to reload the automations.\n\n*For more detailed instructions, please
                  refer to the online documentation: [How to Update Blueprint](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/howto.md#update-blueprint).*\n"
              continue_on_error: true
          - alias: ESPHome is older
            conditions:
            - '{{ oldest[1] != newest[1] }}'
            - '{{ oldest[0] == "esphome" }}'
            sequence:
            - service: persistent_notification.create
              data:
                notification_id: NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name
                  }}
                title: NSPanel ESPHome Needs Update
                message: "Your NSPanel ESPHome version is outdated for the panel **{{\n
                  \ device_attr(nspanel_deviceid, \"name\") ~ ((\" (\" ~ nspanel_name
                  ~ \")\") if nspanel_name != device_attr(nspanel_deviceid, \"name\")
                  else \"\") }}**.\n\n- Current ESPHome version: {{ nspanel_event.esphome
                  if nspanel_event.esphome is string and nspanel_event.esphome | length
                  > 0 else oldest[1] }}\n- Expected version: {{ blueprint_version
                  if newest[0] == \"blueprint\" else nspanel_event.tft }}\n**How to
                  Resolve This Issue**\n1. Go to your ESPHome Dashboard.\n2. Locate
                  the panel named {{ device_attr(nspanel_deviceid, \"name\") ~ ((\"
                  (\" ~ nspanel_name ~ \")\") if nspanel_name != device_attr(nspanel_deviceid,
                  \"name\") else \"\") }}.\n3. Click on the corresponding 3-dot menu.\n4.
                  Choose \"**Clean Build Files**\".\n5. In the pop-up dialog, wait
                  for the cleaning to finish, then click \"**Install**\".\n6. Select
                  \"**Wirelessly**\".\n\n*For more detailed instructions, please refer
                  to the online documentation: [How to Update ESPHome](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/howto.md#update-esphome).*\n"
              continue_on_error: true
          - alias: TFT is older
            conditions:
            - '{{ oldest[1] != newest[1] }}'
            - '{{ oldest[0] == "tft" }}'
            sequence:
            - service: persistent_notification.create
              data:
                notification_id: NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name
                  }}
                title: NSPanel TFT Display Needs Update
                message: "The TFT version on your NSPanel is outdated for the panel
                  **{{\n  device_attr(nspanel_deviceid, \"name\") ~ ((\" (\" ~ nspanel_name
                  ~ \")\") if nspanel_name != device_attr(nspanel_deviceid, \"name\")
                  else \"\") }}**.\n\n- Current TFT version: {{ nspanel_event.tft
                  if nspanel_event.tft is string and nspanel_event.tft | length >
                  0 else oldest[1] }}\n- Expected version: {{ blueprint_version if
                  newest[0] == \"blueprint\" else nspanel_event.esphome }}\n**How
                  to Resolve This Issue**\n1. Navigate to the [device page](/config/devices/device/{{
                  nspanel_deviceid }}).\n2. In the \"**Configuration**\" section,
                  find the option labeled \"**Update TFT Display - Model**\".\n3.
                  Click \"**Update TFT Display**\" to initiate the update process.\n4.
                  Please wait patiently until your panel restarts, indicating the
                  update is complete.\n\n*For more detailed instructions, please refer
                  to the online documentation: [How to Update TFT](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/howto.md#update-tft).*\n"
              continue_on_error: true
          - alias: Blueprint not detected
            conditions:
            - '{{ oldest[1] == newest[1] }}'
            - '{{ nspanel_event.blueprint != blueprint_version }}'
            sequence:
            - service: persistent_notification.create
              data:
                notification_id: NSPanel_HA_Blueprint_version_mismatch_{{ nspanel_name
                  }}
                title: NSPanel Blueprint Communication Issue
                message: 'The ESPHome is unable to verify the Blueprint version for
                  the NSPanel.

                  - Panel Details: **{{ device_attr(nspanel_deviceid, "name") ~ ("
                  (" ~ nspanel_name ~ ")") if nspanel_name != device_attr(nspanel_deviceid,
                  "name") }}**

                  - Installed Blueprint Version: {{ blueprint_version }}


                  Troubleshooting steps and more information are available in the
                  online documentation: [Panel startup issues - Blueprint is not detected](https://github.com/Blackymas/NSPanel_HA_Blueprint/blob/main/docs/error_initializing.md#blueprint-is-not-detected).

                  '
              continue_on_error: true
      - alias: Notification changed
        conditions:
        - '{{ nspanel_event.type == "notification_changed"}}'
        sequence:
        - *id011
      - alias: Other events
        conditions:
        - '{{ nspanel_event.type == "generic"}}'
        sequence:
        - choose:
          - alias: light settings
            conditions:
            - '{{ nspanel_event.page == pages.light }}'
            - '{{ nspanel_event.component in ["rgb_color", "brightness_pct", "color_temp"]
              }}'
            - '{{ nspanel_event.entity is defined and nspanel_event.entity is string
              and nspanel_event.entity | length > 0 }}'
            sequence:
            - service: light.turn_on
              data:
                entity_id: '{{ nspanel_event.entity }}'
                '{{ nspanel_event.component }}': '{{ nspanel_event.value }}'
              continue_on_error: true
          - alias: Jump to climate page
            conditions:
            - '{{ nspanel_event.page == pages.home }} '
            - '{{ nspanel_event.component == "climate" }}'
            - '{{ nspanel_event.value == "release" }}'
            - '{{ climate | length > 0 }} '
            sequence:
            - variables:
                entity_id: '{{ climate }}'
                back_page: '{{ pages.home }}'
            - *id003
            - *id008
  - alias: Automation reloaded
    conditions:
    - condition: trigger
      id:
      - automation_reloaded
      - ha_started
    sequence:
    - variables:
        nextion_inited: binary_sensor.{{ nspanel_name }}_nextion_display
    - delay: '{% set entities_list = states.binary_sensor | selectattr("entity_id",
        "search", "nextion_display") | map(attribute="entity_id") | list %} {{ (4
        * entities_list.index(nextion_inited)) if (entities_list | count > 0 and nextion_inited
        in entities_list) else 0 }}

        '
    - if: '{{ states.sensor | selectattr("entity_id", "eq", currentpage) | list |
        count > 0 }}'
      then:
      - service: persistent_notification.dismiss
        data:
          notification_id: NSPanel_HA_Blueprint_current_page_missing_{{ nspanel_name
            }}
        continue_on_error: true
      else:
      - service: persistent_notification.create
        data:
          notification_id: NSPanel_HA_Blueprint_current_page_missing_{{ nspanel_name
            }}
          title: NSPanel sensor unavailable
          message: "The sensor \"Current Page\" (`{{ currentpage }}`) is unavailable.\n-
            Panel: {{ device_attr(nspanel_deviceid, \"name\") ~ (\" (\" ~ nspanel_name
            ~ \")\") if nspanel_name != device_attr(nspanel_deviceid, \"name\") }}\n-
            Blueprint version: {{ blueprint_version }}\n- Sensor's expected entity_id:
            {{ currentpage }}\n\nHow to fix this:\n\n  1. Go to the [device page](/config/devices/device/{{
            nspanel_deviceid }})\n\n  2. Find the sensor \"Current page\" under the
            \"Sensors\" area (it might be in the \"sensors not shown\" group)\n\n
            \ 3. Enable the sensor\n\n  4. Wait a bit until the sensor starts providing
            a value (it shouldn't take more than half minute)\n\n  5. Go to [Developer
            Tools](/developer-tools/yaml) and click the button \"Automations\" to
            reload your automations\n"
        continue_on_error: true
    - *id012
    - choose:
      - conditions: '{{ pages.current == pages.home }}'
        sequence: *id013
      - conditions: '{{ pages.current in pages.buttonpages }}'
        sequence: *id014
      - conditions: '{{ pages.current in pages.entitypages }}'
        sequence: *id015
  - alias: Buttons entity updated
    conditions:
    - condition: trigger
      id: trigger_buttonpage_state
    - '{{ trigger.to_state.state not in enum.states.unknown }}'
    - condition: or
      conditions:
      - '{{ pages.current in pages.buttonpages }}'
      - '{{ pages.current in [pages.light, pages.cover, pages.climate, pages.fan,
        pages.alarm] and trigger.entity_id == states(detailed_entity) }}'
    sequence:
    - choose:
      - alias: Button pages
        conditions:
        - '{{ pages.current in pages.buttonpages }}'
        sequence:
        - *id007
        - repeat:
            for_each: "{{\n  buttons_pages.buttons\n  | selectattr(\"page\", \"defined\")\n
              \ | selectattr(\"page\", \"eq\", pages.current)\n  | selectattr(\"entity\",
              \"defined\")\n  | selectattr(\"entity\", \"eq\", trigger.entity_id)\n
              \ | list\n}}\n"
            sequence: *id016
      - alias: Light settings page
        conditions:
        - '{{ pages.current == pages.light }}'
        - '{{ trigger.entity_id is match "light." }}'
        - '{{ trigger.entity_id == states(detailed_entity) }}'
        sequence: *id017
      - alias: Cover settings page
        conditions:
        - '{{ pages.current == pages.cover }}'
        - '{{ trigger.entity_id is match "cover." }}'
        - '{{ trigger.entity_id == states(detailed_entity) }}'
        sequence: *id018
      - alias: Climate page
        conditions:
        - '{{ pages.current == pages.climate }}'
        - '{{ trigger.entity_id is match "climate." }}'
        - '{{ trigger.entity_id == states(detailed_entity) }}'
        sequence: *id019
      - alias: Fan page
        conditions:
        - '{{ pages.current == pages.fan }}'
        - '{{ trigger.entity_id is match "fan." }}'
        - '{{ trigger.entity_id == states(detailed_entity) }}'
        sequence: *id020
      - alias: Media player page
        conditions:
        - '{{ pages.current == pages.media_player }}'
        - '{{ trigger.entity_id is match "media_player." }}'
        - '{{ trigger.entity_id == states(detailed_entity) }}'
        sequence: *id021
      - alias: Alarm page
        conditions:
        - '{{ pages.current == pages.alarm }}'
        - '{{ trigger.entity_id is match "alarm_control_panel." }}'
        - '{{ trigger.entity_id == states(detailed_entity) }}'
        sequence: *id022
  - alias: Update entity pages
    conditions:
    - condition: trigger
      id: trigger_entitypage_state
    - '{{ pages.current in pages.entitypages }}'
    sequence:
    - *id023
    - repeat:
        for_each: "{{\n  entities_pages.entities\n  | selectattr(\"page\", \"defined\")\n
          \ | selectattr(\"page\", \"eq\", pages.current)\n  | selectattr(\"entity\",
          \"defined\")\n  | selectattr(\"entity\", \"eq\", trigger.entity_id)\n  |
          list\n}}\n"
        sequence: *id024
  - alias: Update climate page values
    conditions:
    - condition: trigger
      id: trigger_climatepage_value_state
    - '{{ pages.current == pages.climate }}'
    sequence:
    - *id025
    - repeat:
        for_each: "{{\n  climate_page_entities\n  | selectattr(\"entity\", \"defined\")\n
          \ | selectattr(\"entity\", \"eq\", trigger.entity_id)\n  | list\n}}\n"
        sequence: *id004
  - alias: Update climate page custom buttons
    conditions:
    - condition: trigger
      id:
      - climate_button08_state
      - climate_button09_state
    - '{{ pages.current == pages.climate }}'
    sequence:
    - *id026
  - alias: Climate - Sync
    conditions:
    - condition: trigger
      id: climate_state
    sequence:
    - *id027
    - if:
      - '{{ trigger.event.data.new_state.state not in enum.states.unknown }}'
      - '{{ pages.current == pages.climate }}'
      - '{{ trigger.event.data.entity_id == states(detailed_entity) }}'
      then:
      - variables:
          climate_entity: '{{ trigger.event.data.entity_id }}'
          hvac_modes: '{{ state_attr(climate_entity, "hvac_modes") }}'
      - *id028
      - *id029
  - alias: Update utilities pages
    conditions:
    - condition: trigger
      id: utilities_page
    - '{{ pages.current == pages.utilities }}'
    sequence:
    - variables:
        list1: '{{ pages_utilities.groups | selectattr("value1", "defined") | selectattr("value1",
          "eq", trigger.entity_id) | list }}'
        list2: '{{ pages_utilities.groups | selectattr("value2", "defined") | selectattr("value2",
          "eq", trigger.entity_id) | list }}'
        list3: '{{ pages_utilities.groups | selectattr("line_ref", "defined") | selectattr("line_ref",
          "eq", trigger.entity_id) | list }}'
        full_list: '{{ list1 + list2 + list3 }}'
        groups: '{{ full_list | map(attribute="name") | unique | list }}'
    - repeat:
        for_each: '{{ pages_utilities.groups | selectattr("name", "in", groups) |
          list }}'
        sequence: *id030
  - alias: Home page - Custom buttons
    conditions:
    - condition: trigger
      id:
      - home_custom_buttons
    sequence:
    - variables:
        trigger_entity_id: '{{ trigger.entity_id if trigger.entity_id is defined else
          trigger.event.data.entity_id }}'
    - choose:
      - alias: Home page
        conditions:
        - '{{ pages.current in pages.home }}'
        sequence:
        - repeat:
            for_each: '{{ home_page.custom_buttons | selectattr("entity", "defined")
              | selectattr("entity", "eq", trigger_entity_id) | list }}'
            sequence: *id031
      - alias: Light settings page
        conditions:
        - '{{ pages.current == pages.light }}'
        - '{{ trigger_entity_id is match "light." }}'
        - '{{ trigger_entity_id == states(detailed_entity) }}'
        sequence: *id017
      - alias: Cover settings page
        conditions:
        - '{{ pages.current == pages.cover }}'
        - '{{ trigger_entity_id is match "cover." }}'
        - '{{ trigger_entity_id == states(detailed_entity) }}'
        sequence: *id018
      - alias: Climate page
        conditions:
        - '{{ pages.current == pages.climate }}'
        - '{{ trigger_entity_id is match "climate." }}'
        - '{{ trigger_entity_id == states(detailed_entity) }}'
        sequence: *id019
      - alias: Fan page
        conditions:
        - '{{ pages.current == pages.fan }}'
        - '{{ trigger_entity_id is match "fan." }}'
        - '{{ trigger_entity_id == states(detailed_entity) }}'
        sequence: *id020
      - alias: Media player page
        conditions:
        - '{{ pages.current == pages.media_player }}'
        - '{{ trigger_entity_id is match "media_player." }}'
        - '{{ trigger_entity_id == states(detailed_entity) }}'
        sequence: *id021
      - alias: Alarm page
        conditions:
        - '{{ pages.current == pages.alarm }}'
        - '{{ trigger_entity_id is match "alarm_control_panel." }}'
        - '{{ trigger_entity_id == states(detailed_entity) }}'
        sequence: *id022
  - alias: Home page - Entity States
    conditions:
    - condition: trigger
      id: home_values_state
    sequence:
    - repeat:
        for_each: '{{ home_page.entity_value | selectattr("entity", "defined") | selectattr("entity",
          "eq", trigger.entity_id) | list }}'
        sequence:
        - *id004
  - alias: Home page - status bar
    conditions:
    - condition: trigger
      id: trigger_chip_state
    sequence:
    - repeat:
        for_each: "{{\n  home_page.chips\n  | selectattr(\"entity\", \"defined\")\n
          \ | selectattr(\"entity\", \"eq\", trigger.event.data.entity_id)\n  | list\n}}\n"
        sequence:
        - *id032
  - alias: Hardware button - State
    conditions:
    - condition: trigger
      id:
      - left_button_state
      - left_button_alt_state
      - right_button_state
      - right_button_alt_state
    sequence:
    - *id006
    - variables:
        button_name: '{{ "left" if trigger.id in ["left_button_state", "left_button_alt_state"]
          else "right" }}'
        button_state: "{{\n  (\n    states(hardware.buttons[button_name].state_entity)
          | default(\"unavailable\")\n    if hardware.buttons[button_name].state_entity_is_valid\n
          \   else\n      (\n        states(hardware.buttons[button_name].entity)
          | default(\"unavailable\")\n        if hardware.buttons[button_name].entity_is_valid\n
          \       else \"unavailable\"\n      )\n  ) in enum.states.on\n}}\n"
    - service: esphome.{{ nspanel_name }}_hw_button_state
      data:
        button_mask: '{{ 1 if trigger.id in ["left_button_state", "left_button_alt_state"]
          else 2 }}'
        state: '{{ button_state }}'
      continue_on_error: true
    - delay:
        milliseconds: 250
    - variables:
        button_state_new: "{{\n  (\n    states(hardware.buttons[button_name].state_entity)
          | default(\"unavailable\")\n    if hardware.buttons[button_name].state_entity_is_valid\n
          \   else\n      (\n        states(hardware.buttons[button_name].entity)
          | default(\"unavailable\")\n        if hardware.buttons[button_name].entity_is_valid\n
          \       else \"unavailable\"\n      )\n  ) in enum.states.on\n}}\n"
    - if: '{{ button_state_new != button_state }}'
      then:
      - service: esphome.{{ nspanel_name }}_hw_button_state
        data:
          button_mask: '{{ 1 if trigger.id in ["left_button_state", "left_button_alt_state"]
            else 2 }}'
          state: '{{ button_state_new }}'
        continue_on_error: true
  - alias: Outdoor temp - Entity
    conditions:
    - condition: trigger
      id: outdoortemp_state
    - '{{ is_number(trigger.event.data.new_state.state) }}'
    sequence:
    - *id033
  - alias: Indoor temp - Entity
    conditions:
    - condition: trigger
      id:
      - indoortemp_state
    - '{{ is_number(trigger.event.data.new_state.state) }}'
    sequence:
    - *id034
  - alias: Weather - State changed
    conditions:
    - '{{ pages.current == pages.home }}'
    - "{{\n  (trigger.id == \"weather_state_change\" and trigger.event.data.new_state.state
      not in enum.states.unknown) or\n  (trigger.id == \"sun_state_change\" and trigger.to_state.state
      not in enum.states.unknown)\n}}\n"
    sequence:
    - *id033
    - *id035
  - alias: TFT auto-upload
    conditions:
    - condition: trigger
      id: tft_upload
    sequence:
    - delay:
        seconds: 2
    - service: esphome.{{ nspanel_name }}_upload_tft
      data:
        url: default
      continue_on_error: true
  - alias: Wake-up
    conditions:
    - condition: trigger
      id: wake_up_sensors
    sequence:
    - service: esphome.{{ nspanel_name }}_wake_up
      data:
        reset_timer: true
      continue_on_error: true
